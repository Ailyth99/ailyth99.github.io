<html lang="ja">
<!-- 見出し　１，部見出し -->
<head>
<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<title>NETMP Specification</title>
<meta http-equiv="Content-Type"content= text/html; charset=Shift_JIS >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
NETMP Specification
</h1></center>
</a>
<div align=center>
<table border=0 bgcolor=#F5F5F5 width=90%><tr><td>
<h2><u>
        <b>目次</b><br>
</u></h2>

<ul>
<p><a href="#Heading3_1">  1 <b>概要</b></a>
    <ul>
    <a href="#Heading4_1_1"> <b>メッセージフォーマット</b><br></a>
    </ul>
<p><a href="#Heading3_2">  2 <b>メッセージ</b></a>
    <ul>
    <a href="#Heading4_2_1"> <b>NETMP_CODE_CONNECT</b><br></a>
    <a href="#Heading4_2_2"> <b>NETMP_CODE_CONNECTR</b><br></a>
    <a href="#Heading4_2_3"> <b>NETMP_CODE_RESET</b><br></a>
    <a href="#Heading4_2_4"> <b>NETMP_CODE_RESETR</b><br></a>
    <a href="#Heading4_2_5"> <b>NETMP_CODE_MESSAGE</b><br></a>
    <a href="#Heading4_2_6"> <b>NETMP_CODE_MESSAGER</b><br></a>
    <a href="#Heading4_2_7"> <b>NETMP_CODE_STATUS</b><br></a>
    <a href="#Heading4_2_8"> <b>NETMP_CODE_STATUSR</b><br></a>
    <a href="#Heading4_2_9"> <b>NETMP_CODE_KILL</b><br></a>
    <a href="#Heading4_2_10"> <b>NETMP_CODE_KILLR</b><br></a>
    <a href="#Heading4_2_11"> <b>NETMP_CODE_VERSION</b><br></a>
    <a href="#Heading4_2_12"> <b>NETMP_CODE_VERSIONR</b><br></a>
    </ul>
<br></td></tr></table></div>

<!-- 見出し　２，章見出し -->
<a name=#"Heading2">

<!-- 見出し　３，節見出し -->
<a name="Heading3_1">
<h2>
 1 <b>概要</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">このドキュメントでは、DECI2 プロトコルの上位プロトコルのひとつである NETMP について説明します。<br>NETMP は、ホスト上で dsnetm とアプリケーションの間でのみ使用されるプロトコルです。したがって、DECI2 ヘッダの Source と Destination に指定される Node ID は、双方ともに 'H' となります。NETMP のプロトコル番号は、NETMP = 0x0400 です。<br><br>NETMP は、アプリケーションから dsnetm へ以下のような要求を行う場合に使用します。<br><br></div>
<div style="margin-left:40px;"><ul>
         <li> アプリケーションの登録
         <li> 指定したプロトコルのパケットの配送要求
         <li> ターゲットシステムのリセット
         <li> ステータス情報管理
         <li> 指定したプロトコルの強制解放
</ul></div>
<div style="margin-left:50px;"><br>パケットの配送要求は、受信に関してのみ必要で、送信に関しては要求する必要はなく常に許可されています。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_1_1">
<a href="#Heading3_1"> 1. </a>1 <b>メッセージフォーマット</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP メッセージは、DECI2 ヘッダに引き続き、常に以下の NETMP ヘッダを持ちます。<br></div>


<div align=center>
<p>
<img src="gif/netmp001.gif"><p>
<b>図 1 NETMP メッセージヘッダ</b>

</div>
<br>
<div style="margin-left:50px;">code は、メッセージの種別を表します。メッセージには要求と応答があります。<br>メッセージの code には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_CONNECT&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;// connect request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_CONNECTR&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;// connect reply&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_RESET&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;// reset request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_RESETR&nbsp;</td>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;// reset reply&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_MESSAGE&nbsp;</td>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;// message request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_MESSAGER&nbsp;</td>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;// message reply&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_STATUS&nbsp;</td>
<td valign="TOP">&nbsp;6&nbsp;</td>
<td valign="TOP">&nbsp;// status request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_STATUSR&nbsp;</td>
<td valign="TOP">&nbsp;7&nbsp;</td>
<td valign="TOP">&nbsp;// status reply&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_KILL&nbsp;</td>
<td valign="TOP">&nbsp;8&nbsp;</td>
<td valign="TOP">&nbsp;// kill request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_KILLR&nbsp;</td>
<td valign="TOP">&nbsp;9&nbsp;</td>
<td valign="TOP">&nbsp;// kill reply&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_VERSION&nbsp;</td>
<td valign="TOP">&nbsp;10&nbsp;</td>
<td valign="TOP">&nbsp;// version request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_CODE_VERSIONR&nbsp;</td>
<td valign="TOP">&nbsp;11&nbsp;</td>
<td valign="TOP">&nbsp;// version reply&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">result は、メッセージの結果を表します。要求メッセージの場合は常に 0 で、応答メッセージの場合は、以下のいずれかになります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;// good&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_INVAL&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;// invalid request&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_BUSY&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;// protocol busy&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOTCONN&nbsp;</td>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;// can not connect&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_ALREADYCONN&nbsp;</td>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;// already connect&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOMEM&nbsp;</td>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;// no memory&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOPROTO&nbsp;</td>
<td valign="TOP">&nbsp;6&nbsp;</td>
<td valign="TOP">&nbsp;// no protocol&nbsp;</td>
</tr>
</table>
</div>

<!-- 見出し　３，節見出し -->
<a name="Heading3_2">
<h2>
 2 <b>メッセージ</b>
<hr noshade>
</h2>


<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_1">
<a href="#Heading3_2"> 2. </a>1 <b>NETMP_CODE_CONNECT</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_CONNECT は、アプリケーションから dsnetm に対する接続要求と配送要求メッセージです。NETMP ヘッダに引き続いて以下の接続データが任意個の繰り返しされた形式を持ちます。<br></div>


<div align=center>
<p>
<img src="gif/netmp002.gif"><p>
<b>図 2 NETMP_CODE_CONNECT Data</b>

</div>
<br>

<div style="margin-left:40px;"><h4><b>priority</b><br></h4></div>

<div style="margin-left:67px;">プロトコルに関する受信配送優先順位を指定します。<br>符号無し整数で、0 から 255 まで設定可能です。0 が最も低い優先順位となります。<br><br>複数のアプリケーションが同じプロトコルを使用する場合、dsnetm はその中で最も大きな priority を持つアプリケーションにパケットを配送します。<br>ただし TTYP プロトコルに関しては、優先順位による配送制御は行なわれず、すべてのアプリケーションへ配送が行なわれます。優先順位による制御を行なう予定がない場合には 0x80 を設定しなければなりません。<br></div>

<div style="margin-left:40px;"><h4><b>unused</b><br></h4></div>

<div style="margin-left:67px;">予約領域です。常に 0 を設定しなければなりません。<br></div>

<div style="margin-left:40px;"><h4><b>protocol</b><br></h4></div>

<div style="margin-left:67px;">受信データの配送を要求するプロトコル番号です。<br><br></div>
<div style="margin-left:50px;">このメッセージによる明示的な指定がなくとも、以下のメッセージは dsnetm からアプリケーションに配送される場合があります。この配送が行なわれるのはこのメッセージによって接続が成功した以降に限られます。<br><br></div>
<div style="margin-left:40px;"><ul>
         <li> DCMP のステータスメッセージ
         <li> DCMP のエラーメッセージ
         <li> NETMP のリセット完了通知(NETMP_CODE_RESETR)
</ul></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_2">
<a href="#Heading3_2"> 2. </a>2 <b>NETMP_CODE_CONNECTR</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_CONNECTR は、NETMP_CODE_CONNECT に対する dsnetm からアプリケーションへの応答メッセージです。NETMP ヘッダ 2 byte のみで構成されます。<br><br>結果コード (result) には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;接続成功&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_BUSY &nbsp;</td>
<td valign="TOP">&nbsp;既に同じ priority かつ同じ protocol で&nbsp;<br>&nbsp;他のアプリケーションが接続済&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOTCONN&nbsp;</td>
<td valign="TOP">&nbsp;接続失敗 (その他の原因)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_ALREADYCONN&nbsp;</td>
<td valign="TOP">&nbsp;既に接続済み&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOMEM&nbsp;</td>
<td valign="TOP">&nbsp;メモリ不足&nbsp;</td>
</tr>
</table>
</div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_3">
<a href="#Heading3_2"> 2. </a>3 <b>NETMP_CODE_RESET</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_RESET は、アプリケーションから dsnetm に対するターゲットシステムのリセット要求メッセージです。NETMP ヘッダおよび 2 byte の予約領域に続く 2 word x 2 の初期化パラメータで構成されます、合計 20 byte。<br></div>


<div align=center>
<p>
<img src="gif/netmp003.gif"><p>
<b>図 3 NETMP_CODE_CONNECT メッセージ</b>

</div>
<br>
<div style="margin-left:50px;">Boot parameter の領域は dsnetm で保存され、dsnetm がターゲットに対して送信する DCMP_TYPE_CONNECT メッセージの Boot parameter データとして使用されます。Boot parameter のビットがすべて 1 の場合は、dsnetm が保存するデータを変更しません。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_4">
<a href="#Heading3_2"> 2. </a>4 <b>NETMP_CODE_RESETR</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_RESETR は、dsnetm からアプリケーションに送られるリセット完了通知です。NETMP ヘッダ 2 byteとその直後に引き続く要因コード1byteで構成されます。<br>このメッセージが送られるのは以下のいずれかの場合です。<br><br></div>
    <div style="margin-left:55px;"><ol>
         <li VALUE=1> そのアプリケーションからの NETMP_CODE_RESET によるリセット完了時</li>
         <li VALUE=2> 他のアプリケーションからの NETMP_CODE_RESET によるリセット完了時</li>
         <li VALUE=3> ターゲットのリセットスイッチや電源 ON 等によるリセット完了時</li>
         <li VALUE=4> ターゲット上のソフト的な再スタート完了時</li>
</ol></div>
</ul></div>
<div style="margin-left:50px;"><br>アプリケーションに通知される要因コードは以下のいずれかです。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;0x06&nbsp;</td>
<td valign="TOP">&nbsp;NETMP_CODE_RESETによるリセット完了時&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x04&nbsp;</td>
<td valign="TOP">&nbsp;リセットスイッチによるリセット完了時&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x00&nbsp;</td>
<td valign="TOP">&nbsp;ターゲット上のソフト的な再スタート完了時&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">結果コード (result) には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;リセット完了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_INVAL&nbsp;</td>
<td valign="TOP">&nbsp;ボードドライバがエラーを報告した&nbsp;<br>&nbsp;(上記 1) の場合に、リセットを要求した&nbsp;<br>&nbsp;アプリケーションにのみ送られます)&nbsp;</td>
</tr>
</table>
</div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_5">
<a href="#Heading3_2"> 2. </a>5 <b>NETMP_CODE_MESSAGE</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_MESSAGE は、アプリケーションから dsnetm に対する接続情報設定メッセージです。NETMP ヘッダに続く任意長の ASCII データ (NUL ターミネイトなし) で、"&lt;user&gt;@&lt;host&gt;,&lt;prog&gt;" の形式である必要があります。<br>NETMP_CODE_CONNECT メッセージの直後にこの接続情報を送る事を強く推奨します。<br>アプリケーションは、このメッセージで送られた情報を NETMP_CODE_STATUS メッセージによって得ることができます。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_6">
<a href="#Heading3_2"> 2. </a>6 <b>NETMP_CODE_MESSAGER</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_MESSAGER は、NETMP_CODE_MESSAGE に対して dsnetm からアプリケーションに送られる接続情報設定完了メッセージです。NETMP ヘッダ 2 byte のみで構成されます。<br><br>結果コード (result) には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;設定完了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOMEM&nbsp;</td>
<td valign="TOP">&nbsp;メモリ不足&nbsp;</td>
</tr>
</table>
</div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_7">
<a href="#Heading3_2"> 2. </a>7 <b>NETMP_CODE_STATUS</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_STATUS は、dsnetm が管理するプロトコルごとの接続関連情報の参照要求メッセージです。NETMP ヘッダ 2 byte のみで構成されます。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_8">
<a href="#Heading3_2"> 2. </a>8 <b>NETMP_CODE_STATUSR</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_STATUSR は、NETMP_CODE_STATUS に対して dsnetm からアプリケーションに送られる応答メッセージです。NETMP ヘッダおよび 2 byte の予約領域に続く、ワードアラインされた接続関連情報の任意個の繰り返しで構成され、 dsnetm が管理するすべてのプロトコルに関する接続関連情報を返します。<br></div>


<div align=center>
<p>
<img src="gif/netmp004.gif"><p>
<b>図 4 NETMP_CODE_STATUSR メッセージ</b>

</div>
<br>

<div style="margin-left:40px;"><h4><b>connect-time</b><br></h4></div>

<div style="margin-left:67px;">32bit の符号なしの秒数で、そのプロトコルに関する TCP レベルの接続が開始されてからの経過時間を表します。<br></div>

<div style="margin-left:40px;"><h4><b>protocol / unused / priority</b><br></h4></div>

<div style="margin-left:67px;">NETMP_CODE_CONNECT メッセージの該当するフィールドど同じ意味を持ちます。<br></div>

<div style="margin-left:40px;"><h4><b>"&lt;user&gt;@&lt;host&gt;,&lt;prog&gt;"</b><br></h4></div>

<div style="margin-left:67px;">NETMP_CODE_MESSAGE によってアプリケーションから送られた接続情報です。<br>少なくとも 1 byte の NUL データでターミネイトされます。<br>さらに NETMP メッセージの先頭からワードアラインされるまで 0 から 3 byte の NUL データでパディングされます。<br><br>結果コード (result) には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
</table>
</div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_9">
<a href="#Heading3_2"> 2. </a>9 <b>NETMP_CODE_KILL</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_KILL は、アプリケーションから dsnetm に対して、指定プロトコルの強制解放を要求するメッセージです。NETMP ヘッダに引き続くプロトコル番号を示す 2 byte のデータのみで構成されます。<br></div>


<div align=center>
<p>
<img src="gif/netmp005.gif"><p>
<b>図 5 NETMP_CODE_KILL メッセージ</b>

</div>
<br>
<div style="margin-left:50px;">dsnetm は指定された protocol でもっとも高い priority を持つアプリケーションとの TCP レベルのコネクションを無条件にクローズし、そのプロトコルを解放します。<br>ひとつの protocol に対して複数の priority が存在する場合は、このメッセージをその priority の数だけ送信しなければ、その protocol をすべて解放することはできません。<br><br>逆にアプリケーションに複数の protocol が関連付けられている場合には、ひとつの NETMP_CODE_KILL メッセージによって指定以外の protocol が解放されることもあります。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_10">
<a href="#Heading3_2"> 2. </a>10 <b>NETMP_CODE_KILLR</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_KILLR は、NETMP_CODE_KILL に対して dsnetm からアプリケーションに送られる応答メッセージです。NETMP ヘッダ 2 byte のみで構成されます。<br><br>結果コード (result) には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;強制解放完了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_NOPROTO&nbsp;</td>
<td valign="TOP">&nbsp;指定プロトコルの接続が存在しない&nbsp;</td>
</tr>
</table>
</div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_11">
<a href="#Heading3_2"> 2. </a>11 <b>NETMP_CODE_VERSION</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_VERSION は、アプリケーションから dsnetm に対するバージョン情報要求メッセージです。NETMP ヘッダに続く任意長の ASCII データ (NUL ターミネイトなし) で、ASCII データの内容はアプリケーションのバージョンを表す任意の文字列である必要があります。dsnetm ではこの情報はチェック対象としては参照しません。したがって、どのような文字列であっても構いません。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_12">
<a href="#Heading3_2"> 2. </a>12 <b>NETMP_CODE_VERSIONR</b><br>
</a>
</h3>
<div style="margin-left:50px;">NETMP_CODE_VERSIONR は、NETMP_CODE_VERSION に対して dsnetm からアプリケーションに送られる応答メッセージです。NETMP ヘッダに続く任意長の ASCII データ (NUL ターミネイトなし) で、ASCII データの内容は dsnetm のバージョン情報です。バージョン情報の形式は、X、Y、Z はそれぞれ10 進数で "X.Y.Z" となります。<br><br>結果コード (result) には以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;NETMP_ERR_OK&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
</table>
</div>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
