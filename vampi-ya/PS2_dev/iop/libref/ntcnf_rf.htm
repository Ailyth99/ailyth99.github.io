<html lang="ja">
<!-- 見出し　１，部見出し -->
<head>

<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<script language="JavaScript">
<!--
  function lj(ch,fm)
  {
    if ( parent.index ) {
      if ( ch == "libref" ){ parent.index.location.href="../libref/category.htm"; }
      else if ( ch == "../ee/libref" ){ parent.index.location.href="../../ee/libref/category.htm"; }
      else if ( ch == "../iop/libref" ){ parent.index.location.href="../../iop/libref/category.htm"; }
      else if ( ch == "../iop/overview" ){ parent.index.location.href="../../iop/overview/category.htm"; }
      else if ( ch == "../ee/overview" ){ parent.index.location.href="../../ee/overview/category.htm"; }
      else if ( ch == "overview" ){ parent.index.location.href="../overview/category.htm"; }
    }
    if ( parent.main ) {
      if ( fm != "" ){ parent.main.location.href=fm; }
    } else {
      if ( fm != "" ){ location.href=fm; }
    }
  }
//-->
</script>

<title>共通ネットワーク設定ライブラリ</title>
<meta http-equiv="Content-Type"content= text/html; charset=Shift_JIS >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
<tr><td align= right >
<script language="JavaScript">
<!--
   var p,q;
   if ( parent.index ) {
   p = parent.index.location;
   q = p.toString();
   result = q.match(/\/category\.htm/gi);
   if(result == "/category.htm"){
          document.writeln("<a href=\"JavaScript:lj('overview','../overview/netcnf.htm')\"><img src=\"./gif/arrow.png\" border=0>ライブラリ概要</a>");
    }
}
// -->
</script>
</td></tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
共通ネットワーク設定ライブラリ
</h1></center>
</a>
<font size=4><b>設定ファイル構造体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfAddress"> sceNetCnfAddress<br></a></td>
<td>&nbsp;</td><td>内部形式IPアドレス<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfCommand"> sceNetCnfCommand<br></a></td>
<td>&nbsp;</td><td>ルーティングの設定情報<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfCtl"> sceNetCnfCtl<br></a></td>
<td>&nbsp;</td><td>設定制御用情報<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfDial"> sceNetCnfDial<br></a></td>
<td>&nbsp;</td><td>ダイアリング定義情報<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfEnv"> sceNetCnfEnv<br></a></td>
<td>&nbsp;</td><td>ロード/セーブ環境<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfInterface"> sceNetCnfInterface<br></a></td>
<td>&nbsp;</td><td>インタフェースごとの設定情報<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfList"> sceNetCnfList<br></a></td>
<td>&nbsp;</td><td>設定管理ファイルデータ<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfPair"> sceNetCnfPair<br></a></td>
<td>&nbsp;</td><td>interface キーワード情報<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfRoot"> sceNetCnfRoot<br></a></td>
<td>&nbsp;</td><td>NET_CNF情報<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfRoutingEntry"> sceNetCnfRoutingEntry<br></a></td>
<td>&nbsp;</td><td>経路制御表の各エントリ<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfUnknown"> sceNetCnfUnknown<br></a></td>
<td>&nbsp;</td><td>未定義キーワードと引数用データ<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfUnknownList"> sceNetCnfUnknownList<br></a></td>
<td>&nbsp;</td><td>未定義キーワードと引数のリスト<br></td></tr>
</table><br>
<font size=4><b>設定ファイル関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfAddEntry"> sceNetCnfAddEntry<br></a></td>
<td>&nbsp;</td><td>設定管理ファイルへのエントリの追加<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfAddress2String"> sceNetCnfAddress2String<br></a></td>
<td>&nbsp;</td><td>内部形式IPアドレスからドット形式への変換<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfAllocMem"> sceNetCnfAllocMem<br></a></td>
<td>&nbsp;</td><td>メモリ領域の確保<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfCheckCapacity"> sceNetCnfCheckCapacity<br></a></td>
<td>&nbsp;</td><td>残り容量をチェックする<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfCheckSpecialProvider"> sceNetCnfCheckSpecialProvider<br></a></td>
<td>&nbsp;</td><td>特殊プロバイダの設定ファイルであるかどうかをチェックする<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfConvA2S"> sceNetCnfConvA2S<br></a></td>
<td>&nbsp;</td><td>ATコマンドをチャットスクリプトに変換する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfConvS2A"> sceNetCnfConvS2A<br></a></td>
<td>&nbsp;</td><td>チャットスクリプトをATコマンドに変換する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfDeleteAll"> sceNetCnfDeleteAll<br></a></td>
<td>&nbsp;</td><td>あなたのネットワーク設定ファイルの削除<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfDeleteEntry"> sceNetCnfDeleteEntry<br></a></td>
<td>&nbsp;</td><td>設定管理ファイルのエントリの削除<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfEditEntry"> sceNetCnfEditEntry<br></a></td>
<td>&nbsp;</td><td>設定管理ファイル上のエントリの編集<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfGetCount"> sceNetCnfGetCount<br></a></td>
<td>&nbsp;</td><td>ファイル数の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfGetList"> sceNetCnfGetList<br></a></td>
<td>&nbsp;</td><td>ファイルリストの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfInitIFC"> sceNetCnfInitIFC<br></a></td>
<td>&nbsp;</td><td>インターフェースごとの設定情報の初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfLoadConf"> sceNetCnfLoadConf<br></a></td>
<td>&nbsp;</td><td>設定ファイルのロード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfLoadDial"> sceNetCnfLoadDial<br></a></td>
<td>&nbsp;</td><td>ダイアリング定義ファイルのロード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfLoadEntry"> sceNetCnfLoadEntry<br></a></td>
<td>&nbsp;</td><td>設定ファイルのロード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfMergeConf"> sceNetCnfMergeConf<br></a></td>
<td>&nbsp;</td><td>設定データのマージ<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfName2Address"> sceNetCnfName2Address<br></a></td>
<td>&nbsp;</td><td>内部形式IPアドレスへの変換<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceNetCnfSetLatestEntry"> sceNetCnfSetLatestEntry<br></a></td>
<td>&nbsp;</td><td>設定管理ファイル上のリスト位置の変更<br></td></tr>
</table>

<!-- 見出し　１，部見出し -->
<br></td></tr></table></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>設定ファイル構造体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfAddress"><font size=6>sceNetCnfAddress<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>内部形式IPアドレス<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfAddress</b> {
	int <i>reserved</i>;
	char <i>dat</i>a<i>[16]</i>;
} sceNetCnfAddress_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>reserved</i>&nbsp;</td>
<td valign="TOP">&nbsp;予約領域（0固定）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>data[16]</i>&nbsp;</td>
<td valign="TOP">&nbsp;IPアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ライブラリ内部でIPアドレスを保持するための構造体です。<br>現在の実装ではIPv4のみをサポートしています。将来の拡張に備えるため、ユーザプログラムはこの構造体の内部に直接アクセスしてはなりません。sceNetCnfName2Address()およびsceNetCnfAddress2String()を使用してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfName2Address">sceNetCnfName2Address</a>()<a href="#"></a>,<a href="#sceNetCnfAddress2String">sceNetCnfAddress2String</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfCommand"><font size=6>sceNetCnfCommand<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ルーティングの設定情報<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfCommand</b> {
	struct sceNetCnfCommand *<i>forw</i>;
	struct sceNetCnfCommand *<i>back</i>;
	int <i>code</i>;
	// sceNetCnfAddress_t address;       /* {ADD,DEL}_NAMESERVER */
	// sceNetCnfRoutingEntry_t routing;  /* {ADD,DEL}_ROUTING */
} sceNetCnfCommand_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>forw</i>&nbsp;</td>
<td valign="TOP">&nbsp;順方向リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>back</i>&nbsp;</td>
<td valign="TOP">&nbsp;逆方向リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>code</i>&nbsp;</td>
<td valign="TOP">&nbsp;コマンドコード&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATTACH_CNFファイル中のnameserverキーワードおよびrouteキーワードに対応するデータ構造です。netcnf.irxは設定ファイルを読み込んで解釈し、この構造体としてメモリ上に保持します。<br><br>コマンドコード（<i>code</i>）は以下のいずれかです。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>コマンドコード</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>キーワード</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_CMD_ADD_NAMESERVER&nbsp;</td>
<td valign="TOP">&nbsp;nameserver add&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_CMD_DEL_NAMESERVER&nbsp;</td>
<td valign="TOP">&nbsp;nameserver del&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_CMD_ADD_ROUTING&nbsp;</td>
<td valign="TOP">&nbsp;route add&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_CMD_DEL_ROUTING&nbsp;</td>
<td valign="TOP">&nbsp;route del&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">sceNetCnfCommand_tオブジェクトの直後には、追加 / 削除の対象となるネームサーバーのアドレス（sceNetCnfAddress_t型）、または、追加 / 削除の対象となるルーティング情報（sceNetCnfRoutingEntry_t型）が配置されます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfInterface">sceNetCnfInterface</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfCtl"><font size=6>sceNetCnfCtl<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定制御用情報<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfCtl</b> {
	struct sceNetCnfDial *<i>dial</i>
	struct sceNetCnfInterface *<i>ifc</i>;
	int <i>id</i>;
	int <i>phone_index</i>;
	int <i>redial_index</i>;
	char <i>interface</i>[8 + 1];
} sceNetCnfCtl_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dial</i>&nbsp;</td>
<td valign="TOP">&nbsp;ダイアリング定義データへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ifc</i>&nbsp;</td>
<td valign="TOP">&nbsp;インタフェース定義データへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>id</i>&nbsp;</td>
<td valign="TOP">&nbsp;インタフェースID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>phone_index</i>&nbsp;</td>
<td valign="TOP">&nbsp;現在参照中の電話番号のインデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>redial_index</i>&nbsp;</td>
<td valign="TOP">&nbsp;現在のリダイアル回数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>interface</i>&nbsp;</td>
<td valign="TOP">&nbsp;インターフェース名称&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">netcnf.irx が内部で用いる設定処理のためのデータ構造です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfDial"><font size=6>sceNetCnfDial<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ダイアリング定義情報<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfDial</b> {
	u_char *<i>tone_dial</i>;
	u_char *<i>pulse_dial</i>;
	u_char *<i>any_dial</i>;
	u_char *<i>chat_init</i>;
	u_char *<i>chat_dial</i>;
	u_char *<i>chat_answer</i>;
	u_char *<i>redial_string</i>;
	struct sceNetCnfUnknownList <i>unknown_list</i>;
} sceNetCnfDial_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tone_dial</i>&nbsp;</td>
<td valign="TOP">&nbsp;トーン回線用のdialing_type_string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pulse_dial</i>&nbsp;</td>
<td valign="TOP">&nbsp;パルス回線用のdialing_type_string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>any_dial  </i>&nbsp;</td>
<td valign="TOP">&nbsp;その他の回線用のdialing_type_string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chat_init </i>&nbsp;</td>
<td valign="TOP">&nbsp;chat_initのスクリプト文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chat_dial</i>&nbsp;</td>
<td valign="TOP">&nbsp;chat_dialのスクリプト文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chat_answer</i>&nbsp;</td>
<td valign="TOP">&nbsp;chat_answerのスクリプト文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>redial_string</i>&nbsp;</td>
<td valign="TOP">&nbsp;redial_stringのリザルト文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>unknown_list</i>&nbsp;</td>
<td valign="TOP">&nbsp;未定義のキーワードと引数を保存する&nbsp;<br>&nbsp;データ構造のリスト&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ひとつのDIAL_CNFファイルに相当するデータ構造です。netcnf.irxはDIAL_CNFファイルを読み込んで解釈し、このデータ構造としてメモリ上に保持します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfEnv"><font size=6>sceNetCnfEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ロード/セーブ環境<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfEnv</b> {
	char *<i>dir_name</i>;
	char *<i>arg_fname</i>;
	void *<i>mem_base</i>;
	void *<i>mem_ptr</i>;
	void *<i>mem_last</i>;
	int <i>req</i>;
	struct sceNetCnfRoot *<i>root</i>;
	struct sceNetCnfInterface *<i>ifc</i>;
	int <i>f_no_check_magic</i>;
	int <i>f_no_decode</i>;
	int <i>f_verbose</i>;
	int <i>file_err</i>;
	int <i>alloc_err</i>;
	int <i>syntax_err</i>;
	char *<i>fname</i>;
	int <i>lno</i>;
	u_char <i>lbuf</i>[1024];
	u_char <i>dbuf</i>[1024];
	int <i>ac</i>;
	u_char *<i>av</i>[10 + 1];
} sceNetCnfEnv_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dir_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;相対パス処理のための元になるパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>arg_fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;操作対象とするファイル名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>mem_base</i>&nbsp;</td>
<td valign="TOP">&nbsp;メモリ領域の先頭アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>mem_ptr</i>&nbsp;</td>
<td valign="TOP">&nbsp;メモリ領域中の次に使うアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>mem_last</i>&nbsp;</td>
<td valign="TOP">&nbsp;メモリ領域の最後のバイト + 1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>req</i>&nbsp;</td>
<td valign="TOP">&nbsp;要求コード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>root</i>&nbsp;</td>
<td valign="TOP">&nbsp;NET_CNFファイルに対応するデータ構造への&nbsp;<br>&nbsp;ポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ifc</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATTACH_CNFファイルに対応する&nbsp;<br>&nbsp;データ構造へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>f_no_check_magic</i>&nbsp;</td>
<td valign="TOP">&nbsp;マジック行のチェックをするかどうか&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>f_no_decode</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATTACH_CNFの符号化/復号化をするかどうか&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>f_verbose</i>&nbsp;</td>
<td valign="TOP">&nbsp;冗長メッセージを表示するかどうか&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>file_err</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイルのopen,read,writeエラーの発生回数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>alloc_err</i>&nbsp;</td>
<td valign="TOP">&nbsp;メモリ確保の失敗回数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>syntax_err</i>&nbsp;</td>
<td valign="TOP">&nbsp;構文エラーの検出回数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;（内部処理用のワークエリア）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>lno</i>&nbsp;</td>
<td valign="TOP">&nbsp;（内部処理用のワークエリア）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>lbuf</i>&nbsp;</td>
<td valign="TOP">&nbsp;（内部処理用のワークエリア）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dbuf</i>&nbsp;</td>
<td valign="TOP">&nbsp;（内部処理用のワークエリア）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ac</i>&nbsp;</td>
<td valign="TOP">&nbsp;（内部処理用のワークエリア）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>av </i>&nbsp;</td>
<td valign="TOP">&nbsp;（内部処理用のワークエリア）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceNetCnfLoadEntry()で設定ファイルの内容を読み込むとき、またsaveNetCnfAddEntry()で設定ファイルの内容を書き込むときに、データの受け渡し領域や作業領域となるデータ構造です。<br>作業領域も含めて指定するため、マルチスレッドからも安全に呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfLoadEntry">sceNetCnfLoadEntry</a>()<a href="#"></a>,<a href="#sceNetCnfAddEntry">sceNetCnfAddEntry</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfInterface"><font size=6>sceNetCnfInterface<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>インタフェースごとの設定情報<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfInterface</b> {
	int <i>type</i>;
	u_char *<i>vendor</i>;
	u_char *<i>product</i>;
	u_char *<i>location</i>;
	u_char <i>dhcp</i>;
	u_char *<i>dhcp_host_name</i>;
	u_char <i>dhcp_host_name_null_terminated</i>;
	u_char <i>dhcp_release_on_stop</i>;
	u_char *<i>address</i>;
	u_char *<i>netmask</i>;
	u_char *<i>chat_additional</i>;
	int <i>redial_count</i>;
	int <i>redial_interval</i>;
	u_char *<i>outside_number</i>;
	u_char *<i>outside_delay</i>;
	u_char *<i>phone_numbers</i>[sceNetCnf_MAX_PHONE_NUMBERS];
	u_char <i>answer_mode</i>;
	int <i>answer_timeout</i>;
	int <i>dialing_type</i>;
	u_char *<i>chat_login</i>;
	u_char *<i>auth_name</i>;
	u_char *<i>auth_key</i>;
	u_char *<i>peer_name</i>;
	u_char *<i>peer_key</i>;
	int <i>lcp_timeout</i>;
	int <i>ipcp_timeout</i>;
	int <i>idle_timeout</i>;
	int <i>connect_timeout</i>;
	struct {
		u_char <i>mru_nego</i>;
		u_char <i>accm_nego</i>;
		u_char <i>magic_nego</i>;
		u_char <i>prc_nego</i>;
		u_char <i>acc_nego</i>;
		u_char <i>address_nego</i>;
		u_char <i>vjcomp_nego</i>;
		u_char <i>dns1_nego</i>;
		u_char <i>dns2_nego</i>;
		u_char <i>reserved_nego</i>[7];
		u_short <i>mru</i>;
		u_long <i>accm</i>;
		u_char <i>auth</i>;
		u_char <i>f_mru</i>;
		u_char <i>f_accm</i>;
		u_char <i>f_auth</i>;
		u_char *<i>ip_address</i>;
		u_char *<i>ip_mask</i>;
		u_char *<i>dns1</i>;
		u_char *<i>dns2</i>;
		u_long <i>reserved_value</i>[8];
	} want, <i>allow</i>;
	int <i>log_flags</i>;
	u_char <i>force_chap_type</i>;
	u_char <i>omit_empty_frame</i>;
	u_char <i>pppoe</i>;
	u_char <i>pppoe_host_uniq_auto</i>;
	u_char <i>pppoe_reserved</i>[2];
	u_char <i>*pppoe_service_name</i>;
	u_char <i>*pppoe_ac_name</i>;
	int <i>mtu</i>;
	u_char <i>lcp_max_configure</i>;
	u_char <i>lcp_max_terminate</i>;
	u_char <i>ipcp_max_configure</i>;
	u_char <i>ipcp_max_terminate</i>;
	u_char <i>auth_timeout</i>;
	u_char <i>auth_max_failure</i>
	u_char <i>reserved</i>[6];
	int <i>phy_config</i>;
	struct sceNetCnfCommand *<i>cmd_head</i>;
	struct sceNetCnfCommand *<i>cmd_tail</i>;
	struct sceNetCnfUnknownList <i>unknown_list</i>;
} sceNetCnfInterface_t;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ひとつのインタフェースに関する設定情報を保持する構造体で、ひとつのATTACH_CNFファイルに相当します。netcnf.irxはATTACH_CNFファイルを読み込んで解釈し、この構造体としてメモリ上に保持します。各メンバとATTACH_CNF中のキーワードとの対応を次に示します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>メンバ名</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>ATTACH_CNF中の該当キーワード</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>データタイプ</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;type&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>vendor</i>&nbsp;</td>
<td valign="TOP">&nbsp;vendor&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>product</i>&nbsp;</td>
<td valign="TOP">&nbsp;product&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>location</i>&nbsp;</td>
<td valign="TOP">&nbsp;location&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dhcp</i>&nbsp;</td>
<td valign="TOP">&nbsp;dhcp&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dhcp_host_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;dhcp_host_name&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dhcp_host_name_ null&nbsp;<br>&nbsp;_terminated</i>&nbsp;</td>
<td valign="TOP">&nbsp;dhcp_host_name_null&nbsp;<br>&nbsp;_terminated&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dhcp_release_on_stop</i>&nbsp;</td>
<td valign="TOP">&nbsp;dhcp_release_on_stop&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>address</i>&nbsp;</td>
<td valign="TOP">&nbsp;address&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>netmask</i>&nbsp;</td>
<td valign="TOP">&nbsp;netmask&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chat_additional</i>&nbsp;</td>
<td valign="TOP">&nbsp;chat_additional&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>redial_count</i>&nbsp;</td>
<td valign="TOP">&nbsp;redial_count&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>redial_interval</i>&nbsp;</td>
<td valign="TOP">&nbsp;redial_interval&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>outside_number</i>&nbsp;</td>
<td valign="TOP">&nbsp;outside_number&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>outside_delay</i>&nbsp;</td>
<td valign="TOP">&nbsp;outside_delay&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>phone_numbers</i>&nbsp;</td>
<td valign="TOP">&nbsp;phone_number[0..9]&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>answer_mode</i>&nbsp;</td>
<td valign="TOP">&nbsp;answer_mode&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>answer_timeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;answer_timeout&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dialing_type</i>&nbsp;</td>
<td valign="TOP">&nbsp;dailing_type&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chat_login</i>&nbsp;</td>
<td valign="TOP">&nbsp;chat_login&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>auth_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;auth_name&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>auth_key</i>&nbsp;</td>
<td valign="TOP">&nbsp;auth_key&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>peer_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;peer_name&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>peer_key</i>&nbsp;</td>
<td valign="TOP">&nbsp;peer_key&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>lcp_timeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;lcp_timeout&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ipcp_timeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;ipcp_timeout&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>idle_timeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;idle_timeout&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>connect_timeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;connect_timeout&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.mru_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.mru_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.accm_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.accm_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.magic_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.magic_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.prc_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.prc_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.acc_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.acc_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.address_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.address_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.vjcomp_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.vjcomp_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.dns1_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.dns1_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.dns2_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.dns2_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.reserved_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;（将来の拡張用）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.mru</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.mru&nbsp;<br>&nbsp;（want.f_mruが1ならば有効）&nbsp;</td>
<td valign="TOP">&nbsp;number2&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.accm</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.accm&nbsp;<br>&nbsp;（want.f_accmが1ならば有効）&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.auth</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.auth&nbsp;<br>&nbsp;（want.f_authが1ならば有効）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.f_mru</i>&nbsp;</td>
<td valign="TOP">&nbsp;（want.mruの設定があれば1、&nbsp;<br>&nbsp;なければ0）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.f_accm</i>&nbsp;</td>
<td valign="TOP">&nbsp;（want.accmの設定があれば1、&nbsp;<br>&nbsp;なければ0）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.f_auth</i>&nbsp;</td>
<td valign="TOP">&nbsp;（want.authの設定があれば1、&nbsp;<br>&nbsp;なければ0）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.ip_address</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.ip_address&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.ip_mask</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.ip_mask&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.dns1</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.dns1&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.dns2</i>&nbsp;</td>
<td valign="TOP">&nbsp;want.dns2&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>want.reserved_value</i>&nbsp;</td>
<td valign="TOP">&nbsp;（将来の拡張用）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.mru_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.mru_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.accm_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.accm_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.magic_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.magic_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.prc_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.prc_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.acc_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.acc_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.address_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.address_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.vjcomp_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.vjcomp_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.dns1_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow_dns1_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.dns2_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.dns2_nego&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.reserved_nego</i>&nbsp;</td>
<td valign="TOP">&nbsp;（将来の拡張用）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.mru</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.mru&nbsp;<br>&nbsp;（allow.f_mruが1ならば有効）&nbsp;</td>
<td valign="TOP">&nbsp;number2&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.accm</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.accm&nbsp;<br>&nbsp;（allow.f_accmが1ならば有効）&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.auth</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.auth&nbsp;<br>&nbsp;（allow.f_authが1ならば有効）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.f_mru</i>&nbsp;</td>
<td valign="TOP">&nbsp;（allow.mruの設定があれば1、&nbsp;<br>&nbsp;なければ0）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.f_accm</i>&nbsp;</td>
<td valign="TOP">&nbsp;（allow.accmの設定があれば1、&nbsp;<br>&nbsp;なければ0）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.f_auth</i>&nbsp;</td>
<td valign="TOP">&nbsp;（allow.authの設定があれば1、&nbsp;<br>&nbsp;なければ0）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.ip_address</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.ip_address&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.ip_mask</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.ip_mask&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.dns1</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.dns1&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.dns2</i>&nbsp;</td>
<td valign="TOP">&nbsp;allow.dns2&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>allow.reserved_value</i>&nbsp;</td>
<td valign="TOP">&nbsp;（将来の拡張用）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>log_flags</i>&nbsp;</td>
<td valign="TOP">&nbsp;log_flags&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>force_chap_type</i>&nbsp;</td>
<td valign="TOP">&nbsp;force_chap_type（設定が&nbsp;<br>&nbsp;ないときはsceNetCnf_BOOL&nbsp;<br>&nbsp;_DEFAULT＝0xff）&nbsp;</td>
<td valign="TOP">&nbsp;number1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>omit_empty_frame</i>&nbsp;</td>
<td valign="TOP">&nbsp;omit_empty_frame&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pppoe</i>&nbsp;</td>
<td valign="TOP">&nbsp;pppoe&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pppoe_host_uniq_auto</i>&nbsp;</td>
<td valign="TOP">&nbsp;pppoe_host_uniq_auto&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pppoe_reserved</i>&nbsp;</td>
<td valign="TOP">&nbsp;（将来の拡張用）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pppoe_service_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;pppoe_service_name&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pppoe_ac_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;pppoe_ac_name&nbsp;</td>
<td valign="TOP">&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>mtu</i>&nbsp;</td>
<td valign="TOP">&nbsp;mtu&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>lcp_max_configure</i>&nbsp;</td>
<td valign="TOP">&nbsp;lcp_max_configure&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>lcp_max_terminate</i>&nbsp;</td>
<td valign="TOP">&nbsp;lcp_max_terminate&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ipcp_max_configure</i>&nbsp;</td>
<td valign="TOP">&nbsp;ipcp_max_configure&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ipcp_max_terminate</i>&nbsp;</td>
<td valign="TOP">&nbsp;ipcp_max_terminate&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>auth_timeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;auth_timeout&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>auth_max_failure</i>&nbsp;</td>
<td valign="TOP">&nbsp;auth_max_failure&nbsp;</td>
<td valign="TOP">&nbsp;bool&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>reserved</i>&nbsp;</td>
<td valign="TOP">&nbsp;（将来の拡張用）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>phy_config</i>&nbsp;</td>
<td valign="TOP">&nbsp;phy_config&nbsp;</td>
<td valign="TOP">&nbsp;number4&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cmd_head</i>&nbsp;</td>
<td valign="TOP">&nbsp;nameserver / route&nbsp;<br>&nbsp;（双方向キューの先頭への&nbsp;<br>&nbsp;ポインタ）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cmd_tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;nameserver / route&nbsp;<br>&nbsp;（双方向キューの末尾への&nbsp;<br>&nbsp;ポインタ）&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>unknown_list</i>&nbsp;</td>
<td valign="TOP">&nbsp;未定義キーワードと引数のリスト&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">データタイプ欄の表示はそれぞれ次の内容を表します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>データタイプ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>内容</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;string&nbsp;</td>
<td valign="TOP">&nbsp;文字列。設定がない場合はNULL。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;bool&nbsp;</td>
<td valign="TOP">&nbsp;ブール値。設定がない場合は0xff&nbsp;<br>&nbsp;（sceNetCnf_BOOL_DEFAULT）。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;number1&nbsp;</td>
<td valign="TOP">&nbsp;1バイトの数値。&nbsp;<br>&nbsp;設定がない場合の値は各メンバ毎に指定。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;number2&nbsp;</td>
<td valign="TOP">&nbsp;2バイトの数値。&nbsp;<br>&nbsp;設定がない場合の値は各メンバ毎に指定。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;number4&nbsp;</td>
<td valign="TOP">&nbsp;4バイトの数値。設定がない場合は-1。&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">boolタイプのメンバには以下の数値が設定されます。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>内容</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0xff&nbsp;</td>
<td valign="TOP">&nbsp;設定しない&nbsp;<br>&nbsp;（ATTACH_CNFにキーワードが書き込まれない）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x00&nbsp;</td>
<td valign="TOP">&nbsp;設定しない&nbsp;<br>&nbsp;（ATTACH_CNFにキーワードが書き込まれる）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x01&nbsp;</td>
<td valign="TOP">&nbsp;設定する&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">以下のメンバのおける数値と対応するキーワードの引数との関係は以下のように指定されています。メンバのいくつかはnetcnf.hにおいて数値に対応する文字列が定義されています。<br><br><i>type</i>の値は次のいずれかになります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>文字列</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>引数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_IFC_TYPE_ANY&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;下位レイヤの種別指定なし&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_IFC_TYPE_ETH&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;eth&nbsp;</td>
<td valign="TOP">&nbsp;USB-Ethernetに対応&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_IFC_TYPE_PPP&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;ppp&nbsp;</td>
<td valign="TOP">&nbsp;PPP接続に対応&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_IFC_TYPE_NIC&nbsp;</td>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;nic&nbsp;</td>
<td valign="TOP">&nbsp;Ethernet (Network Adaptor)に対応&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>dialing_type</i>の値は次のいずれかになります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>文字列</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>引数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_DIALING_TYPE_DEFAULT&nbsp;</td>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;設定しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_DIALING_TYPE_TONE&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;tone&nbsp;</td>
<td valign="TOP">&nbsp;トーン回線（アナログ）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_DIALING_TYPE_PULSE&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;pulse&nbsp;</td>
<td valign="TOP">&nbsp;パルス回線（アナログ）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_DIALING_TYPE_ANY&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;any&nbsp;</td>
<td valign="TOP">&nbsp;上記以外の回線&nbsp;<br>&nbsp;（デジタル等）&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>phy_config</i>の値は次のいずれかになります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>文字列</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>引数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;設定しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_AUTO&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;phy_config auto&nbsp;</td>
<td valign="TOP">&nbsp;Auto Negotiation Mode&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_10&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;phy_config 10&nbsp;</td>
<td valign="TOP">&nbsp;10BaseT,&nbsp;<br>&nbsp;Half-Duplex&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_10_FD&nbsp;</td>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;phy_config 10_fd&nbsp;</td>
<td valign="TOP">&nbsp;10BaseT,&nbsp;<br>&nbsp;Full-Duplex,&nbsp;<br>&nbsp;No-Flow-Control&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_10_FD_PAUSE&nbsp;</td>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;phy_config 10_fd_pause&nbsp;</td>
<td valign="TOP">&nbsp;10BaseT,&nbsp;<br>&nbsp;Full-Duplex,&nbsp;<br>&nbsp;Flow-Control&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_TX&nbsp;</td>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;phy_config tx&nbsp;</td>
<td valign="TOP">&nbsp;100BaseTX,&nbsp;<br>&nbsp;Half-Duplex&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_TX_FD&nbsp;</td>
<td valign="TOP">&nbsp;6&nbsp;</td>
<td valign="TOP">&nbsp;phy_config tx_fd&nbsp;</td>
<td valign="TOP">&nbsp;100BaseTX,&nbsp;<br>&nbsp;Full-Duplex,&nbsp;<br>&nbsp;No-Flow-Control&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnf_PHYCONFIG&nbsp;<br>&nbsp;_TX_FD_PAUSE&nbsp;</td>
<td valign="TOP">&nbsp;7&nbsp;</td>
<td valign="TOP">&nbsp;phy_config tx_fd_pause&nbsp;</td>
<td valign="TOP">&nbsp;100BaseTX,&nbsp;<br>&nbsp;Full-Duplex,&nbsp;<br>&nbsp;Flow-Control&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>want.auth,allow.auth</i>の値は次のいずれかになります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>引数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;any&nbsp;</td>
<td valign="TOP">&nbsp;PAP,CHAPによる認証を要求しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;pap&nbsp;</td>
<td valign="TOP">&nbsp;PAPによる認証のみを要求する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;chap&nbsp;</td>
<td valign="TOP">&nbsp;CHAPによる認証のみを要求する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;pap/chap&nbsp;</td>
<td valign="TOP">&nbsp;まずPAPによって認証を要求し、その結果接続を&nbsp;<br>&nbsp;拒否されたら、次にCHAPによって認証を要求する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;chap/pap&nbsp;</td>
<td valign="TOP">&nbsp;まずCHAPによって認証を要求し、その結果接続を&nbsp;<br>&nbsp;拒否されたら、次にPAPによって認証を要求する&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>force_chap_type</i>の値は次のいずれかになります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>引数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;認証アルゴリズムを制限しない。&nbsp;<br>&nbsp;（ATTACH_CNFにforce_chap_type&nbsp;<br>&nbsp;キーワードが書き込まれない）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;no&nbsp;</td>
<td valign="TOP">&nbsp;認証アルゴリズムを制限しない。&nbsp;<br>&nbsp;（ATTACH_CNFにforce_chap_type noの&nbsp;<br>&nbsp;キーワード及び引数が書き込まれる）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;md5&nbsp;</td>
<td valign="TOP">&nbsp;MD5のみに制限する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x80&nbsp;</td>
<td valign="TOP">&nbsp;ms&nbsp;</td>
<td valign="TOP">&nbsp;MS(Version1)のみに制限する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x80&nbsp;</td>
<td valign="TOP">&nbsp;ms-v1&nbsp;</td>
<td valign="TOP">&nbsp;MS(Version1)のみに制限する（msと同じ）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0x81&nbsp;</td>
<td valign="TOP">&nbsp;ms-v2&nbsp;</td>
<td valign="TOP">&nbsp;MS(Version2)のみに制限する&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>log_flags</i>のbitの意味は次のようになります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>bit</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>引数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;phase&nbsp;</td>
<td valign="TOP">&nbsp;PPPの状態&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;cp&nbsp;</td>
<td valign="TOP">&nbsp;LCP, IPCPの状態&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;auth&nbsp;</td>
<td valign="TOP">&nbsp;PAP, CHAPの状態&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;chat&nbsp;</td>
<td valign="TOP">&nbsp;チャット処理とその応答&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;private&nbsp;</td>
<td valign="TOP">&nbsp;チャットスクリプト中のプライベート情報&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;dll&nbsp;</td>
<td valign="TOP">&nbsp;DLLレベルでのデータのやり取り&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;6&nbsp;</td>
<td valign="TOP">&nbsp;dump&nbsp;</td>
<td valign="TOP">&nbsp;DLLデータのパケットダンプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;16&nbsp;</td>
<td valign="TOP">&nbsp;timer&nbsp;</td>
<td valign="TOP">&nbsp;タイマ関係の情報&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;17&nbsp;</td>
<td valign="TOP">&nbsp;event&nbsp;</td>
<td valign="TOP">&nbsp;PPPへのイベント&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfCtl">sceNetCnfCtl</a>,<a href="#sceNetCnfPair">sceNetCnfPair</a>,<a href="#sceNetCnfEnv">sceNetCnfEnv</a>,<a href="#sceNetCnfInitIFC">sceNetCnfInitIFC</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfList"><font size=6>sceNetCnfList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定管理ファイルデータ<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfList</b> {
	int <i>type</i>;
	int <i>stat</i>;
	char <i>sys_name</i>[256];
	char <i>usr_name</i>[256];
} sceNetCnfList_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>stat</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイルステータス&nbsp;<br>&nbsp;1: 有効なファイル（現バージョンでは1で固定）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>sys_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイル名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定名&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">設定管理ファイル中の各エントリに対応する構造体です。netcnf.irxは設定管理ファイルを読み込んで解釈し、この構造体としてメモリ上に保持します。あなたのネットワーク設定ファイルの種類は共通ネットワーク設定における以下のファイルに対応します。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;組み合わせ&nbsp;</td>
<td valign="TOP">&nbsp;NET_CNF&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;接続プロバイダ設定&nbsp;</td>
<td valign="TOP">&nbsp;ATTACH_CNF(ifcファイル)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;接続機器設定&nbsp;</td>
<td valign="TOP">&nbsp;ATTACH_CNF(devファイル)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfGetList">sceNetCnfGetList</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfPair"><font size=6>sceNetCnfPair<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>interface キーワード情報<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfPair</b> {
	struct sceNetCnfPair *<i>forw</i>;
	struct sceNetCnfPair *<i>back</i>;
	u_char *<i>display_name</i>;
	u_char *<i>attach_ifc</i>;
	u_char *<i>attach_dev</i>;
	struct sceNetCnfInterface *<i>ifc</i>;
	struct sceNetCnfInterface *<i>dev</i>;
	struct sceNetCnfUnknownList <i>unknown_list</i>;
	struct sceNetCnfCtl *<i>ctl</i>;
} sceNetCnfPair_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>forw</i>&nbsp;</td>
<td valign="TOP">&nbsp;順方向リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>back</i>&nbsp;</td>
<td valign="TOP">&nbsp;逆方向リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>display_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;表示名称&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>attach_ifc</i>&nbsp;</td>
<td valign="TOP">&nbsp;ifcファイル名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>attach_dev</i>&nbsp;</td>
<td valign="TOP">&nbsp;devファイル名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ifc</i>&nbsp;</td>
<td valign="TOP">&nbsp;インターフェース定義データへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dev</i>&nbsp;</td>
<td valign="TOP">&nbsp;デバイス定義データへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>unknown_list</i>&nbsp;</td>
<td valign="TOP">&nbsp;未定義のキーワードと引数のリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ctl</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定制御用情報へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">NET_CNFファイル中のあるひとつのinterfaceキーワードに対応するデータ構造です。netcnf.irxは設定ファイルを読み込んで解釈し、このデータ構造としてメモリ上に保持します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfRoot"><font size=6>sceNetCnfRoot<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>NET_CNF情報<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfRoot</b> {
	struct sceNetCnfPair *<i>pair_head</i>;
	struct sceNetCnfPair *<i>pair_tail</i>;
	int <i>version</i>;
	u_char *<i>chat_additional</i>;
	int <i>redial_count</i>;
	int <i>redial_interval</i>;
	u_char *<i>outside_number</i>;
	u_char *<i>outside_delay</i>;
	int <i>dialing_type</i>;
	struct sceNetCnfUnknownList <i>unknown_list</i>;
} sceNetCnfRoot_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>pair _head</i>&nbsp;</td>
<td valign="TOP">&nbsp;interfaceキーワード用のデータ構造リストの先頭&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pair_tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;interfaceキーワード用のデータ構造リストの最後&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>version</i>&nbsp;</td>
<td valign="TOP">&nbsp;データ構造のバージョン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chat_additional</i>&nbsp;</td>
<td valign="TOP">&nbsp;chat_addtionalのスクリプト文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>redial_count</i>&nbsp;</td>
<td valign="TOP">&nbsp;redial_countのデータ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>redial_interval</i>&nbsp;</td>
<td valign="TOP">&nbsp;redial_intervalのデータ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>outside_number</i>&nbsp;</td>
<td valign="TOP">&nbsp;outside_numberのデータ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>outside_delay</i>&nbsp;</td>
<td valign="TOP">&nbsp;outside_delayのデータ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dialing_type</i>&nbsp;</td>
<td valign="TOP">&nbsp;dialing_typeのデータ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>unknown_list</i>&nbsp;</td>
<td valign="TOP">&nbsp;未定義のキーワードと引数のリスト&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">あるひとつのNET_CNFファイルに相当するデータ構造です。netcnf.irxは設定ファイルを読み込んで解釈し、このデータ構造としてメモリ上に保持します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfRoutingEntry"><font size=6>sceNetCnfRoutingEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>経路制御表の各エントリ<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sce</b>NetCnf<b>RoutingEntry</b> {
	struct sceNetCnfAddress <i>dstaddr</i>;
	struct sceNetCnfAddress <i>gateway</i>;
	struct sceNetCnfAddress <i>genmask</i>;
	int <i>flags</i>;
	int <i>mss</i>;
	int <i>window</i>;
	char <i>interface</i>[8 + 1];
} sceNetCnfRoutingEntry_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dstaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;宛先アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>gateway</i>&nbsp;</td>
<td valign="TOP">&nbsp;次ホップルータアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>genmask</i>&nbsp;</td>
<td valign="TOP">&nbsp;サブネットマスク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>flags</i>&nbsp;</td>
<td valign="TOP">&nbsp;状態を示すフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>mss</i>&nbsp;</td>
<td valign="TOP">&nbsp;最大セグメントサイズ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>window</i>&nbsp;</td>
<td valign="TOP">&nbsp;TCPのウインドウサイズ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>interface</i>&nbsp;</td>
<td valign="TOP">&nbsp;ネットワークインタフェース名&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">経路制御表の各エントリの情報を格納する構造体です。<br><i>flags</i>には次のビットフラグの和が入ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnfRoutingF_Up&nbsp;</td>
<td valign="TOP">&nbsp;0x01&nbsp;</td>
<td valign="TOP">&nbsp;経路が有効&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnfRoutingF_Host&nbsp;</td>
<td valign="TOP">&nbsp;0x02&nbsp;</td>
<td valign="TOP">&nbsp;直接配送（ルータを介さない）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnfRoutingF_Gateway&nbsp;</td>
<td valign="TOP">&nbsp;0x04&nbsp;</td>
<td valign="TOP">&nbsp;間接配送（ルータを介する）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnfRoutingF_Dynamic&nbsp;</td>
<td valign="TOP">&nbsp;0x08&nbsp;</td>
<td valign="TOP">&nbsp;動的に設定された&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetCnfRoutingF_Modified&nbsp;</td>
<td valign="TOP">&nbsp;0x10&nbsp;</td>
<td valign="TOP">&nbsp;同エントリの変更あり&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">最大セグメントサイズ（<i>mss</i>）とウィンドウサイズ（<i>window</i>）は、値の設定と参照はできますが、現在のところNETCNF内部ではその値を使用していません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfAddress">sceNetCnfAddress</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfUnknown"><font size=6>sceNetCnfUnknown<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>未定義キーワードと引数用データ<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfUnknown</b> {
	struct sceNetCnfUnknown *<i>forw</i>;
	struct sceNetCnfUnknown *<i>back</i>;
	// u_char unknown_keyword_and_arguments[0];
} sceNetCnfUnknown_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>forw</i>&nbsp;</td>
<td valign="TOP">&nbsp;順方向リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>back</i>&nbsp;</td>
<td valign="TOP">&nbsp;逆方向リンク&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">将来の仕様拡張時に追加される（現時点では）未定義のキーワードと引数を保存するデータ構造です。netcnf.irxは設定ファイルを読み込んで解釈し、この構造体としてメモリ上に保持します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfUnknownList">sceNetCnfUnknownList</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfUnknownList"><font size=6>sceNetCnfUnknownList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>未定義キーワードと引数のリスト<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>sceNetCnfUnknownList</b> {
	struct sceNetCnfUnknown *<i>head</i>;
	struct sceNetCnfUnknown *<i>tail</i>;
} sceNetCnfUnknownList_t;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>head</i>&nbsp;</td>
<td valign="TOP">&nbsp;先頭へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;最後へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">将来の仕様拡張時に追加される（現時点では）未定義のキーワードと引数を保存する双方向キューの先頭と末尾を示すデータ構造です。netcnf.irxは設定ファイルを読み込んで解釈し、この構造体としてメモリ上に保持します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceNetCnfInterface">sceNetCnfInterface</a><br><br><br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>設定ファイル関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfAddEntry"><font size=6>sceNetCnfAddEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定管理ファイルへのエントリの追加<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfAddEntry</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	char *<i>usr_name</i>,
	sceNetCnfEnv_t *<i>e</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;セーブ環境&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_NG&nbsp;</td>
<td valign="TOP">&nbsp;設定ファイルの書き込み失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-5&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_WRITE_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル書き込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_TYPE&nbsp;</td>
<td valign="TOP">&nbsp;typeが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-11&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_USR_NAME&nbsp;</td>
<td valign="TOP">&nbsp;usr_nameが不正または&nbsp;<br>&nbsp;既に使われている名前&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-12&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_TOO_MANY_ENTRIES&nbsp;</td>
<td valign="TOP">&nbsp;以下に定めるエントリ数の&nbsp;<br>&nbsp;上限を超えた&nbsp;<br>&nbsp;-メモリーカード(PS2)&nbsp;<br>&nbsp;　 組み合わせ　6&nbsp;<br>&nbsp;　 接続機器設定　4&nbsp;<br>&nbsp;　 接続プロバイダ設定　4&nbsp;<br>&nbsp;-ハードディスクドライブ&nbsp;<br>&nbsp;　 組み合わせ　10&nbsp;<br>&nbsp;　 接続機器設定　30&nbsp;<br>&nbsp;　 接続プロバイダ設定　30&nbsp;<br>&nbsp;（その他のデバイスの上限は&nbsp;<br>&nbsp;ファイル の種類ごとに1000個）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-14&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SYNTAX_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;type==1のファイルを指定した時、&nbsp;<br>&nbsp;第４引数がNULLである、あるいは&nbsp;<br>&nbsp;第４引数のメンバifcがNULLで&nbsp;<br>&nbsp;ある。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-16&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_CAPACITY_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;残り容量が94Kbytes未満&nbsp;<br>&nbsp;(メモリーカード(PS2))&nbsp;<br>&nbsp;残り容量が244Kbytes未満&nbsp;<br>&nbsp;(ハードディスクドライブ)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-20&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_AOL_CONFIGURATION&nbsp;</td>
<td valign="TOP">&nbsp;AOLの設定を追加しようと&nbsp;<br>&nbsp;している&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">設定管理ファイル<i>fname</i>に、<i>type</i>と<i>usr_name</i>で指定されたエントリを追加するとともに、セーブ環境<i>e</i>で示された設定データをテキストイメージに展開してファイルに保存します。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br><br></div>
<div style="margin-left:50px;">保存ディレクトリが存在しない場合は自動的に作成され、アイコン及び icon.sys ファイルが追加されます。また、呼び出し時ディレクトリ内をチェックし、不要なファイルを削除します。アイコン及び icon.sys が不正な名称、サイズだった場合も修正をします。<br>設定名は type == 0 の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">Combination"index"<br><br></div>
<div style="margin-left:50px;">"index" には対象デバイス毎に以下の制限があります。これ以外の "index" が指定された場合、 sceNETCNF_INVALID_USR_NAME が返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;全デバイス共通&nbsp;</td>
<td valign="TOP">&nbsp;"index" が5桁以上の場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;メモリーカード(PS2)&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上6以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;ハードディスクドライブ&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上10以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;その他&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上1000以下でない場合。&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">セーブ環境中で設定が必要なメンバは、テキストイメージ展開用の領域を表すmem_baseとmem_lastです。dir_name, arg_fname, reqはsceNetCnfAddEntry()中の処理で自動的に設定されます。<br><br>設定データを読み込んだロード環境に変更を加え、それをセーブ環境として保存する場合は、セーブ処理の直前で次のようにしてください。<br><br></div>
<div style="margin-left:70px;">e-&gt;mem_base = e-&gt;mem_ptr;<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfAddress2String"><font size=6>sceNetCnfAddress2String<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>内部形式IPアドレスからドット形式への変換<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfAddress2String</b>(
	char *<i>buf</i>,
	int <i>len</i>,
	sceNetCnfAddress_t *<i>paddr</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換結果を格納するバッファアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>len</i>&nbsp;</td>
<td valign="TOP">&nbsp;バッファ長（バイト数）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>paddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;内部形式IPアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_NG&nbsp;</td>
<td valign="TOP">&nbsp;変換に失敗&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">内部形式のIPアドレスをドット形式の文字列に変換します。<br>表示およびデバッグ用の関数です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfAllocMem"><font size=6>sceNetCnfAllocMem<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>メモリ領域の確保<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
void *<b>sceNetCnfAllocMem</b>(
	sceNetCnfEnv_t *<i>e</i>,
	int <i>size</i>,
	int <i>align</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;ロード/セーブ環境&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;確保するメモリのバイト数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>align</i>&nbsp;</td>
<td valign="TOP">&nbsp;確保するメモリ領域の先頭のアライメント&nbsp;<br>&nbsp;0: バイトアライメント&nbsp;<br>&nbsp;2: ワードアライメント&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;!= NULL&nbsp;</td>
<td valign="TOP">&nbsp;確保成功&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;== NULL&nbsp;</td>
<td valign="TOP">&nbsp;確保失敗&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>e</i>で指定されたロード/セーブ環境内のメモリプールから、<i>size</i>と<i>align</i>の指定にしたがってメモリ領域を確保します。<br>メモリ領域を確保すると、<i>e</i>-&gt;mem_ptrは更新されます。確保に失敗した場合は<i>e</i>-&gt;alloc_errがインクリメントされます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfCheckCapacity"><font size=6>sceNetCnfCheckCapacity<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>残り容量をチェックする<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfCheckCapacity</b>(
	char *<i>fname</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;94Kbytes以上である(メモリーカード(PS2))&nbsp;<br>&nbsp;244Kbytes以上である(ハードディスクドライブ)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-16&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_CAPACITY_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;94Kbytes未満である(メモリーカード(PS2))&nbsp;<br>&nbsp;244Kbytes未満である(ハードディスクドライブ)&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">設定管理ファイルが存在するデバイスの残り容量をチェックします。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfCheckSpecialProvider"><font size=6>sceNetCnfCheckSpecialProvider<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>特殊プロバイダの設定ファイルであるかどうかをチェックする<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfCheckSpecialProvider</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	char *<i>usr_name</i>,
	sceNetCnfEnv_t *<i>e</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0:組み合わせ&nbsp;<br>&nbsp;1:接続プロバイダ設定&nbsp;<br>&nbsp;2:接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;ロード環境&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;特殊プロバイダの設定ではありません。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルサイズ+1バイトの領域が&nbsp;<br>&nbsp;確保できません。&nbsp;<br>&nbsp;指定された設定ファイルサイズ+1バイトの&nbsp;<br>&nbsp;領域が確保できません。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルが開けません。指定された&nbsp;<br>&nbsp;設定ファイルが開けません。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルの読み込み中にエラーが&nbsp;<br>&nbsp;発生しました。指定されたファイルの&nbsp;<br>&nbsp;読み込み中にエラーが発生しました。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのサイズ取得中にエラーが&nbsp;<br>&nbsp;発生しました。指定された設定ファイルの&nbsp;<br>&nbsp;サイズ取得中にエラーが発生しました。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-8&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_ENTRY_NOT_FOUND&nbsp;</td>
<td valign="TOP">&nbsp;指定された設定名のエントリが設定管理&nbsp;<br>&nbsp;ファイルにありません。&nbsp;<br>&nbsp;(設定名の文字列長が0だった場合も文字列長&nbsp;<br>&nbsp;が0のエントリがない限りこちらのエラーが&nbsp;<br>&nbsp;優先されます。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルパスが指定されていません。&nbsp;<br>&nbsp;(fname == NULL or 文字列長が 0)設定管理&nbsp;<br>&nbsp;ファイルパスのデバイスの指定が不正です。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_TYPE&nbsp;</td>
<td valign="TOP">&nbsp;未知のtypeが指定されています。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-11&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_USR_NAME&nbsp;</td>
<td valign="TOP">&nbsp;設定が指定されていません。&nbsp;<br>&nbsp;(usr_name == NULL or 文字列長が0)&nbsp;<br>&nbsp;組み合わせのインデックスが不正です。&nbsp;<br>&nbsp;設定管理ファイルでmc...を指定している場合&nbsp;<br>&nbsp;1〜6の範囲にありません。&nbsp;<br>&nbsp;設定管理ファイルでpfs...を指定している場合&nbsp;<br>&nbsp;１〜１０の範囲にありません。&nbsp;<br>&nbsp;その他のデバイスを指定している場合&nbsp;<br>&nbsp;１〜１０００の範囲にありません。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-13&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ID_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;復号化を指定されましたが、復号化できま&nbsp;<br>&nbsp;せん。&nbsp;<br>&nbsp;(復号化のためのキーが取得できません。)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-15&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_MAGIC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;他の"PlayStation 2"で作成されたファイルを&nbsp;<br>&nbsp;読み込もうとしています。&nbsp;<br>&nbsp;符号化しているファイルを復号化せずに&nbsp;<br>&nbsp;読み込もうとしています。&nbsp;<br>&nbsp;符号化していないファイルを復号化して&nbsp;<br>&nbsp;呼び込もうとしています。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;I/Oエラーが発生しました。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-20&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_AOL_CONFIGURATION&nbsp;</td>
<td valign="TOP">&nbsp;AOL(America Online)の設定です。&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定された設定名を持つあなたのネットワーク設定ファイルが特殊プロバイダの設定ファイルであるかどうかを判定します。現時点で特殊プロバイダとして指定されているプロバイダは以下の通りです。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>プロバイダ名</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>返り値</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;AOL(America Online)&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_AOL_CONFIGURATION&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">特殊プロバイダと判断されたあなたのネットワーク設定ファイルの取り扱いについては「あなたのネットワーク設定ファイル使用規定」(yncf)を参照して下さい。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfConvA2S"><font size=6>sceNetCnfConvA2S<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATコマンドをチャットスクリプトに変換する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfConvA2S</b>(
	char *<i>sp</i>,
	char *<i>dp</i>,
	int <i>len</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>sp</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換前の文字列が設定してあるバッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dp</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換後の文字列が出力されるバッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>len</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換後の文字列が出力されるバッファの大きさ(バイト単位)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;ATコマンドからチャットスクリプト&nbsp;<br>&nbsp;への変換を&nbsp;<br>&nbsp;実行した&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;変換を実行しなかった&nbsp;<br>&nbsp;（spからdpへのコピーは事項されます）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-19&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_TOO_LONG_STR&nbsp;</td>
<td valign="TOP">&nbsp;変換前の文字列が長過ぎる&nbsp;<br>&nbsp;（変換後の文字列が出力される&nbsp;<br>&nbsp;バッファが足りない）&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATコマンドからチャットスクリプトへの変換を行います。入力文字列をATコマンドとして認識させるには、以下の条件を満たさなければなりません。この条件を満たさなかった場合変換は行われません。<br></div>
<div style="margin-left:35px;"><ul>
         <li> 1つ以上の空白文字(SP:0x20, HT:0x09)で区切られたブロックの先頭がAT(大文字、小文字に依存しない)である。
</ul></div>
<div style="margin-left:50px;">ATコマンドからチャットスクリプトへの変換ルールは以下の通りです。<br></div>
<div style="margin-left:35px;"><ul>
         <li> 先頭と最後の0個以上の空白文字(SP:0x20, HT:0x09)は読み捨てます。
         <li> ATからブロックの最後までをコピーし、“ OK ”を追加します。
         <li> 変換後の先頭に“"" ”を、最後に“\c”を入れます。
</ul></div>
<div style="margin-left:50px;">ATコマンドとしての入力文字列には以下の制限が存在します。<br></div>
<div style="margin-left:35px;"><ul>
         <li> チャットスクリプトで規定しているスクリプト表現（「共通ネットワーク設定ライブラリ概要（overview）」の「7 チャットスクリプトの仕様」で記述されている特殊文字列、空の文字列、タイムアウト時間の指定、リトライの指定、アボート文字列の指定を指します）は使用できません。
         <li> 空白(SP:0x20, HT:0x09)を指定することはできません。
</ul></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfConvS2A"><font size=6>sceNetCnfConvS2A<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チャットスクリプトをATコマンドに変換する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfConvS2A</b>(
	char *<i>sp</i>,
	char *<i>dp</i>,
	int <i>len</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>sp</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換前の文字列が設定してあるバッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dp</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換後の文字列が出力されるバッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>len</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換後の文字列が出力されるバッファの大きさ(バイト単位)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;チャットスクリプトから&nbsp;<br>&nbsp;ATコマンドへの変換を&nbsp;<br>&nbsp;実行した&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;変換を実行しなかった&nbsp;<br>&nbsp;（spからdpへのコピーは事項されます）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-19&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_TOO_LONG_STR&nbsp;</td>
<td valign="TOP">&nbsp;変換前の文字列が長過ぎる&nbsp;<br>&nbsp;（変換後の文字列が出力される&nbsp;<br>&nbsp;バッファが足りない）&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チャットスクリプトからATコマンドへの変換を行います。入力文字列をATコマンドに変換可能なチャットスクリプトとして認識させるには、以下の条件を満たさなければなりません。この条件を満たさなかった場合変換は行われません。<br></div>
<div style="margin-left:35px;"><ul>
         <li> 先頭ブロックが“""”である。
         <li> 最終ブロックが“\c”である。
         <li> 1 つ以上の空白文字で区切られた 2つのブロックの組の最初のブロックの先頭がAT(大文字、小文字に依存しない)であり、２番目のブロックが“OK”である。（先頭ブロックと最終ブロックを除く）
</ul></div>
<div style="margin-left:50px;">チャットスクリプトからATコマンドへの変換ルールは以下の通りです。<br></div>
<div style="margin-left:35px;"><ul>
         <li> 先頭と最後の0個以上の空白文字(SP:0x20, HT:0x09)は読み捨てます。
         <li> 先頭ブロックと最終ブロックを取り除いた残りのブロックの“OK”以外のブロックをコピーします。
</ul></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfDeleteAll"><font size=6>sceNetCnfDeleteAll<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>あなたのネットワーク設定ファイルの削除<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfDeleteAll</b>(
	char *<i>dev</i> 
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dev</i>&nbsp;</td>
<td valign="TOP">&nbsp;デバイス名。("mc?:", "pfs?:" のみサポート)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-7&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_REMOVE_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;削除失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-17&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_UNKNOWN_DEVICE&nbsp;</td>
<td valign="TOP">&nbsp;未知のデバイス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたデバイスに存在するあなたのネットワーク設定ファイルをディレクトリ毎削除します。あなたのネットワーク設定ファイルが存在しない場合は 0 を返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfDeleteEntry"><font size=6>sceNetCnfDeleteEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定管理ファイルのエントリの削除<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfDeleteEntry</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	char *<i>usr_name</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;現在の設定名&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;削除成功&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-5&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_WRITE_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル書き込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-7&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_REMOVE_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;削除失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-11&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_&nbsp;<br>&nbsp;INVALID_USR_NAME&nbsp;</td>
<td valign="TOP">&nbsp;usr_nameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-16&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_CAPACITY_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルを更新するため&nbsp;<br>&nbsp;の残り容量が足りない&nbsp;<br>&nbsp;残り容量が94Kbytes未満&nbsp;<br>&nbsp;(メモリーカード(PS2))&nbsp;<br>&nbsp;残り容量が244Kbytes未満&nbsp;<br>&nbsp;(ハードディスクドライブ)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">設定管理ファイル<i>fname</i>から、<i>type</i>と<i>usr_name</i>で指定されたエントリを削除し、さらに、そのエントリ中に示されている設定ファイルを削除します。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br><br></div>
<div style="margin-left:50px;">また、呼び出し時ディレクトリ内をチェックし、不要なファイルを削除します。アイコン及び icon.sys が不正な名称、サイズだった場合も修正をします。<br>設定名は type == 0 の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">Combination"index"<br><br></div>
<div style="margin-left:50px;">"index" には対象デバイス毎に以下の制限があります。これ以外の "index" が指定された場合、 sceNETCNF_INVALID_USR_NAME が返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;全デバイス共通&nbsp;</td>
<td valign="TOP">&nbsp;"index" が5桁以上の場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;メモリーカード(PS2)&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上6以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;ハードディスクドライブ&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上10以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;その他&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上1000以下でない場合。&nbsp;</td>
</tr>
</table>
</div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfEditEntry"><font size=6>sceNetCnfEditEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定管理ファイル上のエントリの編集<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfEditEntry</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	char *<i>usr_name</i>,
	char *<i>new_usr_name</i>,
	sceNetCnfEnv_t *<i>e</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;現在の設定名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>new_usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;変更後の設定名（変更しない場合はNULL）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;セーブ環境&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-5&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_WRITE_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル書き込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-8&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ENTRY_&nbsp;<br>&nbsp;NOT_FOUND&nbsp;</td>
<td valign="TOP">&nbsp;エントリが存在しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_INVALID_&nbsp;<br>&nbsp;FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_INVALID_TYPE&nbsp;</td>
<td valign="TOP">&nbsp;typeが0,1,2以外である&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-11&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_INVALID_&nbsp;<br>&nbsp;USR_NAME&nbsp;</td>
<td valign="TOP">&nbsp;usr_nameが不正または&nbsp;<br>&nbsp;new_user_nameが既に使われている&nbsp;<br>&nbsp;設定名と同じ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-14&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SYNTAX_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;type == 1のファイルを指定したとき&nbsp;<br>&nbsp;第５引数がNULLである、あるいは&nbsp;<br>&nbsp;第５引数のメンバifcがNULLである。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-15&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_MAGIC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;他の"PlayStation 2"で作成された設定&nbsp;<br>&nbsp;ファイルを編集しようとしている。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-16&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_CAPACITY_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;残り容量が94Kbytes未満&nbsp;<br>&nbsp;(メモリーカード(PS2))&nbsp;<br>&nbsp;残り容量が244Kbytes未満&nbsp;<br>&nbsp;(ハードディスクドライブ)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-20&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_AOL_CONFIGURATION&nbsp;</td>
<td valign="TOP">&nbsp;AOLの設定を編集しようとしている。&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">設定管理ファイル<i>fname</i>の中で<i>usr_name</i>で指定されたエントリを編集し、セーブ環境<i>e</i>で示された設定データをファイルに保存します。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br><br></div>
<div style="margin-left:50px;">また、呼び出し時ディレクトリ内をチェックし、不要なファイルを削除します。アイコン及び icon.sys が不正な名称、サイズだった場合も修正をします。<br>設定名は type == 0 の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">Combination"index"<br><br></div>
<div style="margin-left:50px;">"index" には対象デバイス毎に以下の制限があります。これ以外の "index" が指定された場合、 sceNETCNF_INVALID_USR_NAME が返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;全デバイス共通&nbsp;</td>
<td valign="TOP">&nbsp;"index" が5桁以上の場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;メモリーカード(PS2)&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上6以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;ハードディスクドライブ&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上10以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;その他&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上1000以下でない場合。&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">セーブ環境中で設定しておく必要のあるメンバはmem_baseおよびmem_lastです。このメモリ領域は、格納する設定ファイルのテキストイメージのデータを保持するために使われます。dir_name, arg_fname, reqメンバは、関数内部で自動的に設定されますので、指定する必要はありません。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ロード環境とセーブ環境を共用するためには、セーブ処理を行う直前で<br></div>
<div style="margin-left:70px;">e-&gt;mem_base = e-&gt;mem_ptr;<br></div>
<div style="margin-left:50px;">としてください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfGetCount"><font size=6>sceNetCnfGetCount<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ファイル数の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfGetCount</b>(
	char *<i>fname</i>,
	int <i>type</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;指定した種類の有効なファイルの数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>fname</i>で指定された設定管理ファイル中に、<i>typeで</i>指定された種類のファイルがいくつ記載されているかを取得します。<br><i>fname</i>で指定された設定管理ファイルが存在しない場合は、エラーではなく0を返します。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfGetList"><font size=6>sceNetCnfGetList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ファイルリストの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfGetList</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	sceNetCnfList_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定ファイル&nbsp;<br>&nbsp;2: 接続機器設定ファイル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイルリストの先頭へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;指定した種類の有効なファイルの数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>fname</i>で指定された設定管理ファイルに記載されている、<i>type</i>で指定された種類の設定ファイルのリストを取得します。<i>p</i>の指す領域はあらかじめsceNetCnfGetCount()で設定ファイルの個数を求めて、必要なサイズだけAllocSysMemory()で確保しておく必要があります。<br><i>fname</i>で指定された設定管理ファイルが存在しない場合は、エラーではなく0を返します。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfInitIFC"><font size=6>sceNetCnfInitIFC<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>インターフェースごとの設定情報の初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfInitIFC</b>(
	sceNetCnfInterface_t *<i>ifc</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>ifc</i>&nbsp;</td>
<td valign="TOP">&nbsp;初期化するインターフェースごとの設定情報へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>ifc</i>で指定されたsceNetCnfInterface_t構造体（インタフェースごとの設定情報）の各メンバを「未設定」の状態に初期化します。release 2.5より前のsceNetCnfInitIFC()では「未設定」の定義が存在しないメンバに対しては何も行いませんので、使用する際には必ず bzero(ifc, sizeof(sceNetCnfInterface_t)); を行うようにして下さい。release 2.5以降のsceNetCnfInitIFC()では「未設定」定義が存在しないメンバに対してはsceNetCnfInitIFC()内部で bzero(ifc, sizeof(sceNetCnfInterface_t)); を実行しています。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfLoadConf"><font size=6>sceNetCnfLoadConf<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定ファイルのロード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfLoadConf</b>(
	sceNetCnfEnv_t *<i>e</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;ロード環境&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-14&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SYNTAX_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;構文エラー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-15&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_MAGIC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;マジックが存在しない、正しくない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>e</i>-&gt;arg_fnameで示される設定ファイルをロードし、ロード環境<i>e</i>内に保存します。<br><i>e</i>-&gt;reqがsceNetCnf_REQ_NETのときはNET_CNFファイルとしてロードし、<i>e</i>-&gt;root以下にデータを格納します。sceNetCnf_REQ_ATTACHのときはATTACH_CNFファイルとしてロードし、<i>e</i>-&gt;ifc以下にデータを格納します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この関数は設定をネットワークスタックに伝えるプログラムのために用意されたものです。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfLoadDial"><font size=6>sceNetCnfLoadDial<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ダイアリング定義ファイルのロード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfLoadDial</b>(
	sceNetCnfEnv_t *<i>e</i>,
	sceNetCnfPair_t *<i>pair</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;ロード環境&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pair</i>&nbsp;</td>
<td valign="TOP">&nbsp;interfaceキーワード情報&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-14&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SYNTAX_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;構文エラー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-15&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_MAGIC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;マジックが存在しない、正しくない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>e</i>-&gt;arg_fnameで示されるダイアリング定義ファイルをロードし、<i>pair</i>-&gt;ctl-&gt;dialに格納します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この関数は設定をネットワークスタックに伝えるプログラムのために用意されたものです。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfLoadEntry"><font size=6>sceNetCnfLoadEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定ファイルのロード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfLoadEntry</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	char *<i>usr_name</i>,
	sceNetCnfEnv_t *<i>e</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;ロード環境&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_NG&nbsp;</td>
<td valign="TOP">&nbsp;ロード時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-8&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_ENTRY_NOT_FOUND&nbsp;</td>
<td valign="TOP">&nbsp;usr_nameで指定された&nbsp;<br>&nbsp;エントリがない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-11&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_USR_NAME&nbsp;</td>
<td valign="TOP">&nbsp;usr_nameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-14&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_SYNTAX_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;構文エラー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-15&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_MAGIC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;マジックが存在しない、&nbsp;<br>&nbsp;正しくない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">設定管理ファイル<i>fname</i>中の、<i>usr_name</i>で指定されたエントリの設定データを、ロード環境<i>e</i>を用いて読み込みます。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br><br></div>
<div style="margin-left:50px;">設定名は type == 0 の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">Combination"index"<br><br></div>
<div style="margin-left:50px;">"index" には対象デバイス毎に以下の制限があります。これ以外の "index" が指定された場合、 sceNETCNF_INVALID_USR_NAME が返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;全デバイス共通&nbsp;</td>
<td valign="TOP">&nbsp;"index" が5桁以上の場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;メモリーカード(PS2)&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上6以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;ハードディスクドライブ&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上10以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;その他&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上1000以下でない場合。&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">ロード環境 <i>e</i> のメンバのうち、呼び出し時に設定しておく必要のあるものは以下の通りです。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;mem_ptr&nbsp;</td>
<td valign="TOP">&nbsp;メモリ領域中の次に使うアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;mem_last&nbsp;</td>
<td valign="TOP">&nbsp;メモリ領域の最後のバイト + 1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;f_no_check_magic&nbsp;</td>
<td valign="TOP">&nbsp;開発中で特別な事情がない限り 0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;f_no_decode&nbsp;</td>
<td valign="TOP">&nbsp;開発時なら 1 でも可、タイトルでは通常 0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;f_verbose&nbsp;</td>
<td valign="TOP">&nbsp;開発時なら 1 でも可、タイトルでは 0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;file_err&nbsp;</td>
<td valign="TOP">&nbsp;0 に初期化が必要&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;alloc_err&nbsp;</td>
<td valign="TOP">&nbsp;0 に初期化が必要&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;syntax_err&nbsp;</td>
<td valign="TOP">&nbsp;0 に初期化が必要&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">dir_name, arg_fname, reqはsceNetCnfLoadEntry()内部の処理で自動的に設定されます。<br>同じロード環境に対して追加処理がない場合は常に、用意したメモリ領域の先頭アドレスをmem_ptrに、最後の次のアドレスをmem_lastに設定します。<br>追加処理がある場合は最初の読み込み時にのみ、mem_ptr, mem_lastを設定します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfMergeConf"><font size=6>sceNetCnfMergeConf<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定データのマージ<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfMergeConf</b>(
	sceNetCnfEnv_t *<i>e</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>e</i>&nbsp;</td>
<td valign="TOP">&nbsp;ロード環境&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>e</i>-&gt;rootおよび<i>e</i>-&gt;pair_headからのリスト中のifc,devデータの内容を優先順位に従ってマージし、その結果を各interfaceキーワード情報内のctlメンバとして格納します。また、各interfaceキーワード情報内のdialメンバ領域の確保も行います。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この関数は設定をネットワークスタックに伝えるプログラムのために用意されたものです。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfName2Address"><font size=6>sceNetCnfName2Address<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>内部形式IPアドレスへの変換<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfName2Address</b>(
	sceNetCnfAddress_t *<i>paddr</i>,
	char *<i>name</i>,
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>paddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;内部形式IPアドレスを受け取る構造体変数のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>name</i>&nbsp;</td>
<td valign="TOP">&nbsp;ドット形式のIPアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_NG&nbsp;</td>
<td valign="TOP">&nbsp;変換に失敗&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ドット形式で表されたIPアドレスを内部形式のIPアドレスに変換し、<i>paddr</i>の指す領域に格納します。<br>ドット形式のIPアドレスとは、以下のいずれかの形式を指します。<br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;(1)&nbsp;</td>
<td valign="TOP">&nbsp;<i>num8.num8.num8.num8</i>&nbsp;</td>
<td valign="TOP">&nbsp;(Class C)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;(2)&nbsp;</td>
<td valign="TOP">&nbsp;<i>num8.num8.num16</i>&nbsp;</td>
<td valign="TOP">&nbsp;(Class B)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;(3)&nbsp;</td>
<td valign="TOP">&nbsp;<i>num8.num24 </i>&nbsp;</td>
<td valign="TOP">&nbsp;(Class A)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;(4)&nbsp;</td>
<td valign="TOP">&nbsp;<i>num32</i>&nbsp;</td>
<td valign="TOP">&nbsp;(直接指定)&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;num8 &nbsp;</td>
<td valign="TOP">&nbsp;unsigned 8bitで表現可能な範囲の8/10/16進数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;num16&nbsp;</td>
<td valign="TOP">&nbsp;unsigned 16bitで表現可能な範囲の8/10/16進数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;num24&nbsp;</td>
<td valign="TOP">&nbsp;unsigned 24bitで表現可能な範囲の8/10/16進数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;num32&nbsp;</td>
<td valign="TOP">&nbsp;unsigned 32bitで表現可能な範囲の8/10/16進数&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">8/10/16進数の表記規則はC言語でのそれと同様です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceNetCnfSetLatestEntry"><font size=6>sceNetCnfSetLatestEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>設定管理ファイル上のリスト位置の変更<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;netcnf.h&gt;
int <b>sceNetCnfSetLatestEntry</b>(
	char *<i>fname</i>,
	int <i>type</i>,
	char *<i>usr_name</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fname</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定管理ファイルのパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;あなたのネットワーク設定ファイルの種類&nbsp;<br>&nbsp;0: 組み合わせ&nbsp;<br>&nbsp;1: 接続プロバイダ設定&nbsp;<br>&nbsp;2: 接続機器設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>usr_name</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定名&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以上&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;成功&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_ALLOC_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;メモリの確保に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-3&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_OPEN_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルをオープンできない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-4&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_READ_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル読み込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-5&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_WRITE_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイル書き込み時にエラー発生&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-6&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_SEEK_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;ファイルサイズの取得に失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-9&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_FNAME&nbsp;</td>
<td valign="TOP">&nbsp;fnameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-11&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF&nbsp;<br>&nbsp;_INVALID_USR_NAME&nbsp;</td>
<td valign="TOP">&nbsp;usr_nameが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-18&nbsp;</td>
<td valign="TOP">&nbsp;sceNETCNF_IO_ERROR&nbsp;</td>
<td valign="TOP">&nbsp;入出力エラー発生&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>fname</i>で指定した設定管理ファイル中のエントリ<i>usr_name</i>を設定管理ファイルの先頭に移動させます。接続のたびにこの関数を呼び出すようにすれば、設定管理ファイル中の各エントリは接続した順序で並ぶようになります。<br>設定管理ファイルのパス名はデバイスが mc?:, pfs?: の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">mc?:/BWNETCNF/BWNETCNF<br>pfs?:/etc/network/net.db<br><br></div>
<div style="margin-left:50px;">設定名は type == 0 の場合強制的に以下のように設定されます。<br><br></div>
<div style="margin-left:70px;">Combination"index"<br><br></div>
<div style="margin-left:50px;">"index" には対象デバイス毎に以下の制限があります。これ以外の "index" が指定された場合、 sceNETCNF_INVALID_USR_NAME が返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;全デバイス共通&nbsp;</td>
<td valign="TOP">&nbsp;"index" が5桁以上の場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;メモリーカード(PS2)&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上6以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;ハードディスクドライブ&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上10以下でない場合。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;その他&nbsp;</td>
<td valign="TOP">&nbsp;"index" が1以上1000以下でない場合。&nbsp;</td>
</tr>
</table>
</div>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
