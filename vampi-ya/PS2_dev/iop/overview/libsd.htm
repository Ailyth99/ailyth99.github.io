<html lang="ja">
<!-- 見出し　１，部見出し -->
<head>

<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<script language="JavaScript">
<!--
  function lj(ch,fm)
  {
    if ( parent.index ) {
      if ( ch == "libref" ){ parent.index.location.href="../libref/category.htm"; }
      else if ( ch == "../ee/libref" ){ parent.index.location.href="../../ee/libref/category.htm"; }
      else if ( ch == "../iop/libref" ){ parent.index.location.href="../../iop/libref/category.htm"; }
      else if ( ch == "../iop/overview" ){ parent.index.location.href="../../iop/overview/category.htm"; }
      else if ( ch == "../ee/overview" ){ parent.index.location.href="../../ee/overview/category.htm"; }
      else if ( ch == "overview" ){ parent.index.location.href="../overview/category.htm"; }
    }
    if ( parent.main ) {
      if ( fm != "" ){ parent.main.location.href=fm; }
    } else {
      if ( fm != "" ){ location.href=fm; }
    }
  }
//-->
</script>
<title>低レベルサウンドライブラリ</title>
<meta http-equiv="Content-Type"content= text/html; charset=Shift_JIS >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
<tr><td align= right >
<script language="JavaScript">
<!--
   var p,q;
   if ( parent.index ) {
   p = parent.index.location;
   q = p.toString();
   result = q.match(/\/category\.htm/gi);
   if(result == "/category.htm"){
          document.writeln("<a href=\"JavaScript:lj('libref','../libref/sd_rf.htm')\"><img src=\"./gif/arrow.png\" border=0>構造体／関数一覧</a>");
    }
}
// -->
</script>
</td></tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
低レベルサウンドライブラリ
</h1></center>
</a>
<div align=center>
<table border=0 bgcolor=#F5F5F5 width=90%><tr><td>
<h2><u>
        <b>目次</b><br>
</u></h2>

<ul>
<p><a href="#Heading3_1">  1 <b>ライブラリ概要</b></a>
    <ul>
    <a href="#Heading4_1_1"> <b>概要</b><br></a>
    <a href="#Heading4_1_2"> <b>レジスタマクロ</b><br></a>
    </ul>
<p><a href="#Heading3_2">  2 <b>レジスタマクロ一覧</b></a>
    <ul>
    <a href="#Heading4_2_1"> <b>基本パラメータレジスタマクロ</b><br></a>
    <a href="#Heading4_2_2"> <b>ボイス制御パラメータレジスタマクロ</b><br></a>
    <a href="#Heading4_2_3"> <b>アドレス値レジスタマクロ</b><br></a>
    <a href="#Heading4_2_4"> <b>エントリ（擬似レジスタマクロ）</b><br></a>
    <a href="#Heading4_2_5"> <b>注意：SPDIF（光デジタル）出力の設定</b><br></a>
    </ul>
<p><a href="#Heading3_3">  3 <b>バイパス機能とビットストリーム音声出力</b></a>
    <ul>
    <a href="#Heading4_3_1"> <b>ビットストリーム音声出力の概要</b><br></a>
    <a href="#Heading4_3_2"> <b>注意事項</b><br></a>
    <a href="#Heading4_3_3"> <b>ビットストリーム音声データのデータ形式</b><br></a>
    <a href="#Heading4_3_4"> <b>処理の実際</b><br></a>
    <a href="#Heading4_3_5"> <b>バイパス処理のみの動作</b><br></a>
    </ul>
<p><a href="#Heading3_4">  4 <b>SPU2の概要およびSPUとの相違</b></a>
    <ul>
    <a href="#Heading4_4_1"> <b>SPU2の概要</b><br></a>
    <a href="#Heading4_4_2"> <b>コアとSPUとの相違点</b><br></a>
    <a href="#Heading4_4_3"> <b>SPU2とSPUとの相違点</b><br></a>
    <a href="#Heading4_4_4"> <b>内部信号 / 機能接続</b><br></a>
    <a href="#Heading4_4_5"> <b>メモリマップ</b><br></a>
    </ul>
<br></td></tr></table></div>

<!-- 見出し　２，章見出し -->
<a name=#"Heading2">

<!-- 見出し　３，節見出し -->
<a name="Heading3_1">
<h2>
 1 <b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_1_1">
<a href="#Heading3_1"> 1. </a>1 <b>概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">libsdは、"PlayStation 2"のサウンドデバイス（SPU2および周辺回路）を制御するための低レベルライブラリです。サウンドデバイスへのアクセスには、必ずlibsdを使用してください。<br>libsdでは、公開されているSPU2レジスタへのアクセス、SPU2ローカルメモリとの波形データ・サウンドデータの転送、SPU2からの割り込みに対する処理の設定、エフェクト属性の設定・取得、などの関数が用意されています。また、一連のSPU2レジスタへのアクセスをまとめて行うバッチ機能が用意されています。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_1_2">
<a href="#Heading3_1"> 1. </a>2 <b>レジスタマクロ</b><br>
</a>
</h3>
<div style="margin-left:50px;">libsdでは、レジスタラッパAPIとレジスタマクロとを用いてSPU2レジスタにアクセスします。SPU2レジスタは、基本パラメータレジスタ／ボイス制御パラメータレジスタ／アドレス値レジスタの3種に分類され、それぞれに対して値を設定／取得するレジスタラッパAPIが別々に用意されています。また、SPU2の一部の機能に対しては擬似レジスタが定義されていて、他のレジスタラッパAPIと同様に使用できるAPIが用意されています。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>レジスタ種別</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>レジスタマクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値の設定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値の取得</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;基本パラメータ&nbsp;<br>&nbsp;レジスタ&nbsp;</td>
<td valign="TOP">&nbsp;SD_VP_*/SD_P_*&nbsp;</td>
<td valign="TOP">&nbsp;sceSdSetParam()&nbsp;</td>
<td valign="TOP">&nbsp;sceSdGetParam()&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;ボイス制御&nbsp;<br>&nbsp;パラメータレジスタ&nbsp;</td>
<td valign="TOP">&nbsp;SD_S_*&nbsp;</td>
<td valign="TOP">&nbsp;sceSdSetSwitch()&nbsp;</td>
<td valign="TOP">&nbsp;sceSdGetSwitch()&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;アドレス値レジスタ&nbsp;</td>
<td valign="TOP">&nbsp;SD_VA_*/SD_A_*&nbsp;</td>
<td valign="TOP">&nbsp;sceSdSetAddr()&nbsp;</td>
<td valign="TOP">&nbsp;sceSdGetAddr()&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;擬似レジスタ&nbsp;</td>
<td valign="TOP">&nbsp;SD_C_*&nbsp;</td>
<td valign="TOP">&nbsp;sceSdSetCore&nbsp;<br>&nbsp;Attr()&nbsp;</td>
<td valign="TOP">&nbsp;sceSdGetCore&nbsp;<br>&nbsp;Attr()&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">各コアに同名のレジスタがありますので、レジスタマクロは必ずコア指定マクロ（SD_CORE_0 / SD_CORE_1）とビットごとのORをとって使用します。また、各ボイスに同名のレジスタがあるもの（SD_V*）については、さらにボイス指定マクロ（SD_VOICE_00〜SD_VOICE_23）とビットごとのORをとって使用します。<br></div>

<div style="margin-left:40px;"><h4><b>（例）</b><br></h4></div>

<div style="margin-left:80px;">sceSdSetParam( SD_CORE_0|SD_P_MVOLL , 0x3fff ) ;<br>sceSdSetParam( SD_CORE_0|SD_VOICE_05|SD_VP_PITCH , 0x1000 );<br></div>

<!-- 見出し　３，節見出し -->
<a name="Heading3_2">
<h2>
 2 <b>レジスタマクロ一覧</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">レジスタマクロの一覧を次に示します。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_1">
<a href="#Heading3_2"> 2. </a>1 <b>基本パラメータレジスタマクロ</b><br>
</a>
</h3>
<div style="margin-left:50px;">設定：sceSdSetParam()<br>取得：sceSdGetParam()<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>レジスタマクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>コア指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>ボイス指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>機能</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_VOLL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;ボイスボリューム（左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_VOLR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;ボイスボリューム（右）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_PITCH&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;発音時のピッチ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_ADSR1&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;エンベロープ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_ADSR2&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;エンベロープ（２）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_ENVX&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;エンベロープ現在値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_VOLXL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;ボリューム現在値（左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VP_VOLXR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;ボリューム現在値（右）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_MMIX&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ボイスミキシング後の出力指定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_MVOLL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;マスターボリューム（左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_MVOLR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;マスターボリューム（右）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_EVOLL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;エフェクトリターンボリューム&nbsp;<br>&nbsp;（左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_EVOLR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;エフェクトリターンボリューム&nbsp;<br>&nbsp;（右）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_AVOLL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_1&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;コア外部入力のボリューム(左)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_AVOLR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_1&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;コア外部入力のボリューム(右)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_BVOLL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;サウンドデータ入力のボリューム&nbsp;<br>&nbsp;（左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_BVOLR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;サウンドデータ入力のボリューム&nbsp;<br>&nbsp;（右）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_MVOLXL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;マスターボリュームの現在値(左)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_P_MVOLXR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;マスターボリュームの現在値(右)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_2">
<a href="#Heading3_2"> 2. </a>2 <b>ボイス制御パラメータレジスタマクロ</b><br>
</a>
</h3>
<div style="margin-left:50px;">設定：sceSdSetSwitch()<br>取得：sceSdGetSwitch()<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>レジスタマクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>コア指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>ボイス指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>機能</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_PMON&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ピッチ変調の指定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_NON&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ノイズ発生器への割り当て&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_KON&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;キーオン（ボイス発音開始）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_KOFF&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;キーオフ（ボイス発音終了）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_ENDX&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;エンドポイント通過フラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_VMIXL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ボイス出力のミキシング指定&nbsp;<br>&nbsp;（Dry 左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_VMIXR&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ボイス出力のミキシング指定&nbsp;<br>&nbsp;（Dry 右）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_VMIXEL&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ボイス出力のミキシング指定&nbsp;<br>&nbsp;（Wet 左）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_S_VMIXER&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ボイス出力のミキシング指定&nbsp;<br>&nbsp;（Wet 右）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_3">
<a href="#Heading3_2"> 2. </a>3 <b>アドレス値レジスタマクロ</b><br>
</a>
</h3>
<div style="margin-left:50px;">設定：sceSdSetAddr()<br>取得：sceSdGetAddr()<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>レジスタマクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>コア指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>ボイス指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>機能</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VA_SSA&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;波形データの先頭アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VA_LSAX&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;ループポイントのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_VA_NAX&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;SD_VOICE_??&nbsp;</td>
<td valign="TOP">&nbsp;次に読みこまれるべき波形&nbsp;<br>&nbsp;データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_A_ESA&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;エフェクト処理用作業領域&nbsp;<br>&nbsp;の先頭アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_A_EEA&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;エフェクト処理用作業領域&nbsp;<br>&nbsp;の終端アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_A_TSA&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;転送開始アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_A_IRQA&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;割り込みアドレスの指定&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_4">
<a href="#Heading3_2"> 2. </a>4 <b>エントリ（擬似レジスタマクロ）</b><br>
</a>
</h3>
<div style="margin-left:50px;">設定：sceSdSetCoreAttr<br>取得：sceSdGetCoreAttr<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>コア指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>ボイス指定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>機能</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_C_EFFECT_ENABLE&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;エフェクト領域への&nbsp;<br>&nbsp;書き込み許可&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_C_IRQ_ENABLE&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;IRQ割り込み許可&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_C_MUTE_ENABLE&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ミュート&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_C_NOISE_CLK&nbsp;</td>
<td valign="TOP">&nbsp;SD_CORE_?&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;ノイズ発生器のM系列&nbsp;<br>&nbsp;シフト周波数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SD_C_SPDIF_MODE&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;---&nbsp;</td>
<td valign="TOP">&nbsp;SPDIFの設定（マスク）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_2_5">
<a href="#Heading3_2"> 2. </a>5 <b>注意：SPDIF（光デジタル）出力の設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">SPU2からSPDIFへ出力される信号はIEC958規格に沿っていなければなりません。必要な設定のほとんどはライブラリの初期化時に行なわれますが、以下の3点はアプリケーションに委ねられていますので、間違いなく設定してください。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>項目</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>設定値</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td rowspan= 2  valign="top">&nbsp;メディア&nbsp;<br>&nbsp;(カテゴリコード)&nbsp;</td>
<td valign="top">&nbsp;SD_SPDIF_MEDIA_DVD&nbsp;</td>
<td valign="top">&nbsp;DVD&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SD_SPDIF_MEDIA_CD&nbsp;</td>
<td valign="top">&nbsp;CD（デフォルト）&nbsp;</td>
</tr>
<tr>
<td rowspan= 3  valign="top">&nbsp;出力内容&nbsp;</td>
<td valign="top">&nbsp;SD_SPDIF_OUT_OFF&nbsp;</td>
<td valign="top">&nbsp;SPDIFに何も出力しない&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SD_SPDIF_OUT_PCM&nbsp;</td>
<td valign="top">&nbsp;アナログ出力と同じ音をPCM&nbsp;<br>&nbsp;で出力する（デフォルト）&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SD_SPDIF_OUT&nbsp;<br>&nbsp;_BITSTREAM&nbsp;</td>
<td valign="top">&nbsp;Core0の入力ブロックに入力&nbsp;<br>&nbsp;されたデータをビットストリ&nbsp;<br>&nbsp;ームとして出力する&nbsp;</td>
</tr>
<tr>
<td rowspan= 2  valign="top">&nbsp;デジタル録音&nbsp;</td>
<td valign="top">&nbsp;SD_SPDIF_COPY&nbsp;<br>&nbsp;_NORMAL&nbsp;</td>
<td valign="top">&nbsp;通常モード（１世代録音可）&nbsp;<br>&nbsp;（デフォルト）&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SD_SPDIF_COPY&nbsp;<br>&nbsp;_PROHIBIT&nbsp;</td>
<td valign="top">&nbsp;デジタル録音禁止&nbsp;</td>
</tr></table>
</div>
<br>
<br>
<div style="margin-left:50px;">設定はsceSdSetCoreAttr()を用いて、次のように行います。どちらかのコアで設定すれば、両方のコアに対して有効になります。<br></div>

<div style="margin-left:40px;"><h4><b>（例）DVD・PCM出力・デジタル録音禁止</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>sceSdSetCoreAttr(
	SD_C_SPDIF_MODE,
	SPU_SPDIF_MEDIA_DVD | SD_SPDIF_OUT_PCM | SD_SPDIF_COPY_PROHIBIT
);
</pre></font></div>

<!-- 見出し　３，節見出し -->
<a name="Heading3_3">
<h2>
 3 <b>バイパス機能とビットストリーム音声出力</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">SPU2は、"PlayStation 2"に標準搭載されている光デジタル出力に対して民生用3Dサウンドの（非PCM）ビットストリーム音声データを（SPU2の内部処理をバイパスして）出力する能力、ならびにPCM音声データをSPU2の内部処理をバイパスして出力する能力を持ちます。<br>その際に用いられるデータ形式と処理方法を、実際のコードを掲げて説明します。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_3_1">
<a href="#Heading3_3"> 3. </a>1 <b>ビットストリーム音声出力の概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">ビットストリーム音声データは通常のPCM音声データとは異なり高度に符号化されたデータであるため、1ビットも変更せずに、そのデータの復号（decode）を行うAVアンプなどの機器へ伝送される必要があります。<br>通常の音声データと同じようにSPU2サウンドデータ入力にビットストリーム音声データを転送しますと、SPU2内部でのボリューム演算によって各ビットの値を厳密には保証できません。<br>このためSPU2では、SPU2 CORE0サウンドデータ入力について、内部処理をバイパスして光デジタル出力に直接出力する機能（「バイパス処理」機能）を持っています。この機能を用いることにより、ビットストリーム音声データを扱うことができます。<br><br>プログラム上での処理としては、以下の3つの手順を行います。<br></div>
    <div style="margin-left:55px;"><ol>
         <li VALUE=1> ミュート：設定を変更する際にノイズが出力されないよう、ボリュームを0にします。</li>
         <li VALUE=2> 光デジタル出力の設定：コア属性を変更する関数によって、光デジタル出力とバイパス処理のスイッチを設定し、ビットストリーム音声データを流せる状態にします。</li>
         <li VALUE=3> データ転送：あらかじめ適切な形式に配置したデータをSPU2 CORE0サウンドデータ入力に転送します。</li>
</ol></div>
</ul></div>
<div style="margin-left:50px;">サウンドデータ入力に転送するデータ形式には、バイパス処理の使用によらず、一定のデータ形式が要求されます。さらにバイパス処理を行う際には特別なデータ形式が必要となります。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_3_2">
<a href="#Heading3_3"> 3. </a>2 <b>注意事項</b><br>
</a>
</h3>

<div style="margin-left:40px;"><h4><b>ライセンス</b><br></h4></div>

<div style="margin-left:67px;">ビットストリーム音声データをタイトルアプリケーションで使用するためには、一般的に、ビットストリーム音声データのフォーマットを考案・提供・管理している各ライセンス提供者との契約・認証など事前の協議や手続きが必要になります。詳しくは、利用したいビットストリーム音声データフォーマットのライセンス提供者へお問い合わせください。<br></div>

<div style="margin-left:40px;"><h4><b>アナログ出力との併用</b><br></h4></div>

<div style="margin-left:67px;">SPU2にはビットストリーム音声データをデコードする機能はありません。光デジタル出力へ出力するサウンドをアナログ出力へも出力したい場合は、PCM形式のデータもあらかじめ用意しておくか、EEなどでソフトウェア的にデコードし2チャンネルにダウンミックスして、アナログ出力側に出力する（たとえばSPU2 CORE1サウンドデータ入力に入力する）必要があります。<br></div>

<div style="margin-left:40px;"><h4><b>中断・再開時の処理</b><br></h4></div>

<div style="margin-left:67px;">ビットストリーム音声データを中断・再開するなど、データ転送が不連続な状態が発生した場合に、光デジタル出力を受けるAVアンプなどの機器の挙動は機器によって異なります。SPU2はデータを転送するのみで、再送の際に状態を再設定する処理などは行いません。ビットストリーム音声データの特性に応じて、適宜ソフトウェアで対応を行ってください。たとえば、停止する際にはある一定単位（データのブロックサイズ）でのみ停止する、再送時にはビットストリーム音声データの型と停止時の残りサイズなどのヘッダ情報を付けて送る、といったような処理が必要になります。<br>ビットストリーム音声データをデジタルインタフェースで転送する際のフォーマットについて、詳しくはIEC（国際電気標準会議）が定める国際標準規格IEC61937およびそれに関連するドキュメントをご参照ください。また、お使いになるエンコーダのドキュメントもご参照ください。ビットストリーム音声データフォーマットのライセンス提供者へお問い合わせいただく必要もあることと思います。<br></div>

<div style="margin-left:40px;"><h4><b>データ量</b><br></h4></div>

<div style="margin-left:67px;">データ形式の制約上、通常のサウンドデータ入力へのデータ転送に比べて、単位時間あたりのデータ量が2倍になります。転送レートとともにIOPメモリの使用量にもご注意ください。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_3_3">
<a href="#Heading3_3"> 3. </a>3 <b>ビットストリーム音声データのデータ形式</b><br>
</a>
</h3>
<div style="margin-left:50px;">ビットストリーム音声データを扱う際のデータ形式について説明します。<br>まず、SPU2サウンドデータ入力へ転送するデータは一般に次の形式でなければなりません。<br></div>
<div style="margin-left:40px;"><ul>
         <li> リトルエンディアンであること。
         <li> LチャンネルとRチャンネルのデータが512バイトごとにインターリーブされていること。
</ul></div>
<div style="margin-left:50px;"></div>
<div style="margin-left:50px;"></div>
<div align=center>
<p>
<img src="gif/libsd001.gif"><p>
<b>SPU2サウンドデータ入力用データ形式</b>

</div>
<br>
<div style="margin-left:50px;">さらにビットストリーム音声データについては次の条件が加わります。<br></div>
<div style="margin-left:40px;"><ul>
         <li> 実データはLチャンネル側に順次配置され、Rチャンネル側はすべて0であること。
</ul></div>
<div style="margin-left:50px;"></div>
<div style="margin-left:50px;"></div>
<div align=center>
<p>
<img src="gif/libsd002.gif"><p>
<b>ビットストリーム音声データ形式</b>

</div>
<br>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_3_4">
<a href="#Heading3_3"> 3. </a>4 <b>処理の実際</b><br>
</a>
</h3>
<div style="margin-left:50px;">ビットストリーム音声データを扱う処理方法を、実際のコードを掲げて説明します。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_3_4_1"><h4>
(1)&nbsp;<b>ミュート</b><br></h4>
</a></div>
<div style="margin-left:67px;">基本パラメータセット用レジスタラッパ関数sceSdSetParam()を用いて、SPU2 CORE0サウンドデータ入力のボリュームBVOLの値を0にします。これを行わないとノイズが出力されてしまいますので、必ず設定を行ってください。<br></div>

<div style="margin-left:40px;"><h4><b>コード例：</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>/* SPU2 CORE0 BVOL を L/R 両方とも 0 に */
sceSdSetParam (SD_CORE_0 | SD_P_BVOLL, 0);
sceSdSetParam (SD_CORE_0 | SD_P_BVOLR, 0);
</pre></font></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_3_4_2"><h4>
(2)&nbsp;<b>光デジタル出力の設定</b><br></h4>
</a></div>
<div style="margin-left:67px;">コア属性設定関数sceSdSetCoreAttr()を用いて、SD_C_SPDIF_MODEの「出力する種類」に SD_SPDIF_OUT_BITSTREAMを指定します。この指定により、同時にバイパス処理が有効になります。<br></div>

<div style="margin-left:40px;"><h4><b>コード例：</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>/* メディアはDVD・出力はビットストリーム・デジタル録音は禁止 */
sceSdSetCoreAttr(SD_C_SPDIF_MODE, 
	(SD_SPDIF_MEDIA_DVD | SD_SPDIF_OUT_BITSTREAM | SD_SPDIF_COPY_PROHIBIT));
</pre></font></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_3_4_3"><h4>
(3)&nbsp;<b>データ転送</b><br></h4>
</a></div>
<div style="margin-left:67px;">サウンドデータ入力へのデータ転送 (ブロック転送) を行う関数sceSdBlockTrans()を用いて、先に示した形式のビットストリーム音声データを転送します。<br></div>

<div style="margin-left:40px;"><h4><b>コード例：</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>sceSdBlockTrans(SD_CORE_0, (SD_TRANS_MODE_WRITE | SD_BLOCK_LOOP),
			buffer_top_addr, buffer_size);
</pre></font></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_3_4_4"><h4>
(4)&nbsp;<b>ビットストリーム音声データの転送終了</b><br></h4>
</a></div>
<div style="margin-left:67px;">通常のサウンドデータと同様に、サウンドデータ入力へのデータ転送 (ブロック転送) の停止を指定します。<br></div>

<div style="margin-left:40px;"><h4><b>コード例：</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>sceSdBlockTrans (SD_CORE_0, SD_TRANS_MODE_STOP, NULL, 0);
</pre></font></div>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:67px;">この後、通常のサウンド出力を光デジタル出力に出力させたい場合は、光デジタル出力の設定を通常の形に戻します。また必要に応じて、SPU2 CORE0サウンドデータ入力のボリュームBVOLの値を設定します。<br></div>

<div style="margin-left:40px;"><h4><b>コード例：</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>/* メディアは DVD・出力は PCM・デジタル録音は許可 */
sceSdSetCoreAttr (SD_C_SPDIF_MODE, 
		(SD_SPDIF_MEDIA_DVD | SD_SPDIF_OUT_PCM | SD_SPDIF_COPY_NORMAL));
/* SPU2 CORE0 BVOL を L/R 両方とも 0x7fff に */
sceSdSetParam (SD_CORE_0 | SD_P_BVOLL, 0x7fff);
sceSdSetParam (SD_CORE_0 | SD_P_BVOLR, 0x7fff);
</pre></font></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_3_5">
<a href="#Heading3_3"> 3. </a>5 <b>バイパス処理のみの動作</b><br>
</a>
</h3>
<div style="margin-left:50px;">SPU2 CORE0サウンドデータ入力では、ビットストリーム音声データだけではなく、通常のPCM音声データをバイパス処理することもできます。<br>この場合のデータ形式は、ビットストリーム音声データと同様に、必要なデータをLチャンネル領域に配置し、Rチャンネル領域はすべて0とします。Lチャンネル領域には16ビットPCM音声データをL/R交互に各128サンプル、計256サンプルずつを配置します。<br></div>
<div style="margin-left:50px;"></div>
<div align=center>
<p>
<img src="gif/libsd003.gif"><p>
<b>バイパス処理用のPCM音声データ形式</b>

</div>
<br>
<div style="margin-left:50px;">プログラム上の処理は、sceSdSetCoreAttr()の引数SD_C_SPDIF_MODEの「出力する種類」にSD_SPDIF_OUT_BYPASSを指定することを除いて、ビットストリーム音声データの処理と同様です。<br></div>

<div style="margin-left:40px;"><h4><b>コード例：</b><br></h4></div>

        <div style="margin-left:80px;"><pre><font size=3>/* メディアは DVD・出力はバイパス処理・デジタル録音は禁止 */
sceSdSetCoreAttr(SD_C_SPDIF_MODE, 
		(SD_SPDIF_MEDIA_DVD | SD_SPDIF_OUT_BYPASS | SD_SPDIF_COPY_PROHIBIT));
</pre></font></div>
<div style="margin-left:50px;"><br>バイパス機能を使用すると、上に示したようにデータ転送量が通常の2倍になります。また、アナログ出力には正常に出力されず、音量の調整もできません。このような特徴を踏まえて、ビットストリームデータを扱うなど特別な意図がある場合に十分検討したうえで使用してください。<br></div>

<!-- 見出し　３，節見出し -->
<a name="Heading3_4">
<h2>
 4 <b>SPU2の概要およびSPUとの相違</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">"PlayStation 2"のサウンドプロセッサSPU2のハードウェア概要と、"PlayStation"のサウンドプロセッサSPUとの相違を簡単に説明します。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_4_1">
<a href="#Heading3_4"> 4. </a>1 <b>SPU2の概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">SPU2はふたつのコアから構成され、ローカルメモリと外部入出力を持つ音響合成プロセッサです。<br>各コア（CORE0およびCORE1）は、"PlayStation"にて提供されていたSPUのボイス処理からエフェクト処理、およびマスターボリューム処理までの基本機能と同等の処理を行い、それぞれ24ボイスのサウンド生成機能を持ちます。<br>さらに、各種スイッチング機能や16ビットPCMデータのサウンドデータ入出力の機能が追加されています。<br>CORE0およびCORE1は機能的に同等で、独立して動作します。CORE0の出力はCORE1に入力され、最終的にミキシングされたサウンドがCORE1から出力されるように接続されています。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_4_2">
<a href="#Heading3_4"> 4. </a>2 <b>コアとSPUとの相違点</b><br>
</a>
</h3>
<div style="margin-left:50px;">以下に掲げる項目において、SPU2の各コアとSPUとで相違があります。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_1"><h4>
(1)&nbsp;<b>処理分解能 / サンプリング周波数</b><br></h4>
</a></div>
<div style="margin-left:67px;">コアの処理は48kHzの単位で行われます。発音処理の分解能、およびサンプリング周波数も48kHzとなります。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_2"><h4>
(2)&nbsp;<b>波形データの処理中位置を読みだし可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">各ボイス毎に、ボイス処理が次にどの波形データを使用するかをアドレスとして読みだすことができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_3"><h4>
(3)&nbsp;<b>ループエンドの通過確認が可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">ボイス処理がループエンドに達したことを示すフラグをボイス毎に持ち、ループ情報を持つ波形データのループエンド通過を確認することができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_4"><h4>
(4)&nbsp;<b>ドライ / ウェット出力に対して個別にミキシングのスイッチングが可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">ボイスボリュームによるパンポット制御に加えて、各ボイス毎にドライ / ウェット各L / Rチャンネルへのミキシングのon / offを制御することができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_5"><h4>
(5)&nbsp;<b>16 / 24bitストレートPCMのサウンドデータ入力</b><br></h4>
</a></div>
<div style="margin-left:67px;">16 / 24bitストレートPCMデータをホスト側からサウンドデータとして入力（データ転送）し、ボイス処理のミキシング結果とミックスすることができます。入力バッファとしてローカルメモリを使用しますが、形としてはSPUのコア外部入力に該当します。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_6"><h4>
(6)&nbsp;<b>ボリューム処理を行わない16bitサウンドデータ入力</b><br></h4>
</a></div>
<div style="margin-left:67px;">エンコードされた16bitサウンドデータを、ホストからデジタル出力に直接出力（データ転送）することができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_7"><h4>
(7)&nbsp;<b>ミキシング結果のサウンドデータ出力</b><br></h4>
</a></div>
<div style="margin-left:67px;">24ボイスの出力が最終的にミキシングされた、ドライ / ウェット各L / Rチャンネル、計4チャンネルのサウンドデータをホスト側に転送することができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_8"><h4>
(8)&nbsp;<b>サウンドデータ入出力処理の負荷を軽減させる"Auto DMA転送"</b><br></h4>
</a></div>
<div style="margin-left:67px;">サウンドデータ処理におけるデータ転送においてホスト側の割り込み負荷を軽減させる"Auto DMA転送"が、DMA転送のモードのひとつとして追加されています。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_2_9"><h4>
(9)&nbsp;<b>エフェクト作業領域が制限付きで移動可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">128KB単位でエフェクト作業領域の終了位置を指定することができます。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_4_3">
<a href="#Heading3_4"> 4. </a>3 <b>SPU2とSPUとの相違点</b><br>
</a>
</h3>
<div style="margin-left:50px;">以下に掲げる項目において、SPU2全体とSPUとで相違があります。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_1"><h4>
(1)&nbsp;<b>ローカルメモリ容量の増大</b><br></h4>
</a></div>
<div style="margin-left:67px;">SPU2は2MBのローカルメモリ（サウンドバッファ）を持ちます。ローカルメモリはふたつのコアに対してひとつだけ存在し、2MB全域をどちらのコアからもアクセス可能です。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_2"><h4>
(2)&nbsp;<b>ローカルメモリ内の予約領域の追加</b><br></h4>
</a></div>
<div style="margin-left:67px;">ふたつのコアがあること、およびサウンドデータ入出力のバッファ領域としてローカルメモリが使われるため、ローカルメモリ先頭部分の予約領域が増大しています。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_3"><h4>
(3)&nbsp;<b>2つのDMA転送を同時に発行可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">各コアはそれぞれDMA転送機能を独立に持ち、並列に動作させることができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_4"><h4>
(4)&nbsp;<b>2つの割り込みを同時に発行可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">各コアはそれぞれハードウェア割り込みを独立に持ち、並列に動作させることができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_5"><h4>
(5)&nbsp;<b>2つのリバーブを個別に設定可能</b><br></h4>
</a></div>
<div style="margin-left:67px;">各コアはそれぞれリバーブ処理機能を独立に持ち、違う設定でリバーブ処理を行うことができます。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_6"><h4>
(6)&nbsp;<b>CORE0の出力がCORE1の入力として接続</b><br></h4>
</a></div>
<div style="margin-left:67px;">CORE0で生成された24ボイス+リバーブ処理のサウンドがCORE1に入力されます。このサウンドにさらにCORE1側のリバーブ処理を付加することも可能です。CORE0の出力がつながるCORE1の入力は、SPUのCD入力に該当します。<br></div>

<!-- 見出し　５，（１） -->
<div style="margin-left:40px;"><a name="Heading5_4_3_7"><h4>
(7)&nbsp;<b>アナログ / デジタル各1系統の出力</b><br></h4>
</a></div>
<div style="margin-left:67px;">アナログ / デジタル各1系統の出力を持ち、それぞれon / offの切り替えが可能です。<br></div>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_4_4">
<a href="#Heading3_4"> 4. </a>4 <b>内部信号 / 機能接続</b><br>
</a>
</h3>
<div style="margin-left:50px;">SPU2コアとローカルメモリの接続を次に示します。<br></div>
<div style="margin-left:50px;"></div>
<div align=center>
<p>
<img src="gif/libsd004.gif"><p>

</div>
<br>
<div style="margin-left:50px;">コア内部の接続を次に示します。<br></div>
<div style="margin-left:50px;"></div>
<div align=center>
<p>
<img src="gif/libsd005.gif"><p>

</div>
<br>

<!-- 見出し　４，小見出し -->
<h3>
<a name="Heading4_4_5">
<a href="#Heading3_4"> 4. </a>5 <b>メモリマップ</b><br>
</a>
</h3>
<div style="margin-left:50px;">ローカルメモリのメモリマップを次に示します。<br></div>
<div style="margin-left:50px;"></div>
<div style="margin-left:67px;">
<p>
<img src="gif/libsd006.gif"><p>

</div>
<br>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
