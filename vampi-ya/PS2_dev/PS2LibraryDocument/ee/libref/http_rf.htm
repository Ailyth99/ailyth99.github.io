<html lang="ja">
<!-- 見出し　１，部見出し -->
<head>

<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<script language="JavaScript">
<!--
  function lj(ch,fm)
  {
    if ( parent.index ) {
      if ( ch == "libref" ){ parent.index.location.href="../libref/category.htm"; }
      else if ( ch == "../ee/libref" ){ parent.index.location.href="../../ee/libref/category.htm"; }
      else if ( ch == "../iop/libref" ){ parent.index.location.href="../../iop/libref/category.htm"; }
      else if ( ch == "../iop/overview" ){ parent.index.location.href="../../iop/overview/category.htm"; }
      else if ( ch == "../ee/overview" ){ parent.index.location.href="../../ee/overview/category.htm"; }
      else if ( ch == "overview" ){ parent.index.location.href="../overview/category.htm"; }
    }
    if ( parent.main ) {
      if ( fm != "" ){ parent.main.location.href=fm; }
    } else {
      if ( fm != "" ){ location.href=fm; }
    }
  }
//-->
</script>

<title>HTTPライブラリ</title>
<meta http-equiv="Content-Type"content= text/html; charset=UTF-8 >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
<tr><td align= right >
<script language="JavaScript">
<!--
   var p,q;
   if ( parent.index ) {
   p = parent.index.location;
   q = p.toString();
   result = q.match(/\/category\.htm/gi);
   if(result == "/category.htm"){
          document.writeln("<a href=\"JavaScript:lj('overview','../overview/libhttp.htm')\"><img src=\"./gif/arrow.png\" border=0>ライブラリ概要</a>");
    }
}
// -->
</script>
</td></tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
HTTPライブラリ
</h1></center>
</a>
<font size=4><b>構造体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPAuth_t"> sceHTTPAuth_t<br></a></td>
<td>&nbsp;</td><td>認証構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPAuthInfo_t"> sceHTTPAuthInfo_t<br></a></td>
<td>&nbsp;</td><td>ダイジェスト認証情報構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPAuthList_t"> sceHTTPAuthList_t<br></a></td>
<td>&nbsp;</td><td>認証リスト構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPClient_t"> sceHTTPClient_t<br></a></td>
<td>&nbsp;</td><td>HTTPクライアント構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPCookie_t"> sceHTTPCookie_t<br></a></td>
<td>&nbsp;</td><td>クッキー構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPCookieList_t"> sceHTTPCookieList_t<br></a></td>
<td>&nbsp;</td><td>クッキーリスト構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPDigest_t"> sceHTTPDigest_t<br></a></td>
<td>&nbsp;</td><td>ダイジェスト認証要求構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPHeaderList_t"> sceHTTPHeaderList_t<br></a></td>
<td>&nbsp;</td><td>ヘッダリスト構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilter_t"> sceHTTPMimeFilter_t<br></a></td>
<td>&nbsp;</td><td>MIMEフィルタ構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPParsedURI_t"> sceHTTPParsedURI_t<br></a></td>
<td>&nbsp;</td><td>解析済URI構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPResponse_t"> sceHTTPResponse_t<br></a></td>
<td>&nbsp;</td><td>HTTPレスポンス構造体<br></td></tr>
</table><br>
<font size=4><b>関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceBASE64Encoder"> sceBASE64Encoder<br></a></td>
<td>&nbsp;</td><td>BASE64エンコード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceBASE64LineDecoder"> sceBASE64LineDecoder<br></a></td>
<td>&nbsp;</td><td>BASE64行デコード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPAbortRequest"> sceHTTPAbortRequest<br></a></td>
<td>&nbsp;</td><td>HTTP要求の中止<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPAddCookieList"> sceHTTPAddCookieList<br></a></td>
<td>&nbsp;</td><td>クッキーリストの追加<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPAddHeaderList"> sceHTTPAddHeaderList<br></a></td>
<td>&nbsp;</td><td>ヘッダーリストの追加<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPCleanUpResponse"> sceHTTPCleanUpResponse<br></a></td>
<td>&nbsp;</td><td>HTTP応答の初期状態への復帰<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPCloneURI"> sceHTTPCloneURI<br></a></td>
<td>&nbsp;</td><td>解析済URIの複製<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPClose"> sceHTTPClose<br></a></td>
<td>&nbsp;</td><td>HTTPコネクションのクローズ<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPCreate"> sceHTTPCreate<br></a></td>
<td>&nbsp;</td><td>HTTPクライアントオブジェクトの作成<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPDeleteCookieListEntry"> sceHTTPDeleteCookieListEntry<br></a></td>
<td>&nbsp;</td><td>クッキーリストからの削除<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPDestroy"> sceHTTPDestroy<br></a></td>
<td>&nbsp;</td><td>HTTPクライアントオブジェクトの解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPErrorString"> sceHTTPErrorString<br></a></td>
<td>&nbsp;</td><td>HTTP応答ステータスの文字列化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFilterCookieList"> sceHTTPFilterCookieList<br></a></td>
<td>&nbsp;</td><td>クッキーリストのフィルタリング<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFindAbsoluteURI"> sceHTTPFindAbsoluteURI<br></a></td>
<td>&nbsp;</td><td>URIの補完<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFreeAuthInfo"> sceHTTPFreeAuthInfo<br></a></td>
<td>&nbsp;</td><td>認証確認情報の解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFreeAuthList"> sceHTTPFreeAuthList<br></a></td>
<td>&nbsp;</td><td>認証チャレンジリストの解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFreeCookieList"> sceHTTPFreeCookieList<br></a></td>
<td>&nbsp;</td><td>クッキーリストの解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFreeHeaderList"> sceHTTPFreeHeaderList<br></a></td>
<td>&nbsp;</td><td>ヘッダーリストの解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFreeLocations"> sceHTTPFreeLocations<br></a></td>
<td>&nbsp;</td><td>リダイレクトロケーション配列の解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPFreeURI"> sceHTTPFreeURI<br></a></td>
<td>&nbsp;</td><td>解析済URIの解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetClientError"> sceHTTPGetClientError<br></a></td>
<td>&nbsp;</td><td>HTTPクライアント内部エラーコードの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetContentLength"> sceHTTPGetContentLength<br></a></td>
<td>&nbsp;</td><td>GET トランザクション時コンテンツ長の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetOption"> sceHTTPGetOption<br></a></td>
<td>&nbsp;</td><td>HTTPオプションの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetPostedBytes"> sceHTTPGetPostedBytes<br></a></td>
<td>&nbsp;</td><td>POST時送信量の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetResolveError"> sceHTTPGetResolveError<br></a></td>
<td>&nbsp;</td><td>アドレス解決エラーコードの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetResponse"> sceHTTPGetResponse<br></a></td>
<td>&nbsp;</td><td>HTTP応答の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetSocketError"> sceHTTPGetSocketError<br></a></td>
<td>&nbsp;</td><td>ソケットエラーコードの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPGetTransferedBytes"> sceHTTPGetTransferedBytes<br></a></td>
<td>&nbsp;</td><td>転送量の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPInit"> sceHTTPInit<br></a></td>
<td>&nbsp;</td><td>ライブラリの初期化（HTTP用）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPIsAbsoluteURI"> sceHTTPIsAbsoluteURI<br></a></td>
<td>&nbsp;</td><td>絶対URIかどうかの検査<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterApply"> sceHTTPMimeFilterApply<br></a></td>
<td>&nbsp;</td><td>MIMEフィルタ処理<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterChangeOutput"> sceHTTPMimeFilterChangeOutput<br></a></td>
<td>&nbsp;</td><td>MIMEフィルタの出力先変更<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterCreate"> sceHTTPMimeFilterCreate<br></a></td>
<td>&nbsp;</td><td>MIMEフィルタの作成<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterFree"> sceHTTPMimeFilterFree<br></a></td>
<td>&nbsp;</td><td>MIMEフィルタの解放<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterGetHeaderList"> sceHTTPMimeFilterGetHeaderList<br></a></td>
<td>&nbsp;</td><td>MIMEヘッダーの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterGetMultipartType"> sceHTTPMimeFilterGetMultipartType<br></a></td>
<td>&nbsp;</td><td>MIMEマルチパートタイプの問い合わせ<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterGetStringOutput"> sceHTTPMimeFilterGetStringOutput<br></a></td>
<td>&nbsp;</td><td>MIMEのメモリ出力の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMimeFilterParseHeaders"> sceHTTPMimeFilterParseHeaders<br></a></td>
<td>&nbsp;</td><td>MIMEヘッダーの解析<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPNextHeader"> sceHTTPNextHeader<br></a></td>
<td>&nbsp;</td><td>ヘッダーリストの次の要素の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPOpen"> sceHTTPOpen<br></a></td>
<td>&nbsp;</td><td>HTTPコネクションのオープン<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPParseAuth"> sceHTTPParseAuth<br></a></td>
<td>&nbsp;</td><td>応答中の認証チャレンジの解析<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPParseAuthInfo"> sceHTTPParseAuthInfo<br></a></td>
<td>&nbsp;</td><td>応答中の認証確認情報の解析<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPParseCookie"> sceHTTPParseCookie<br></a></td>
<td>&nbsp;</td><td>応答中のクッキーの解析<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPParseLocations"> sceHTTPParseLocations<br></a></td>
<td>&nbsp;</td><td>応答中のリダイレクトロケーションの解析<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPParseURI"> sceHTTPParseURI<br></a></td>
<td>&nbsp;</td><td>URIの解析<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPRequest"> sceHTTPRequest<br></a></td>
<td>&nbsp;</td><td>HTTPトランザクションの実行<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPSetBasicAuth"> sceHTTPSetBasicAuth<br></a></td>
<td>&nbsp;</td><td>ベーシック認証の設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPSetCookie"> sceHTTPSetCookie<br></a></td>
<td>&nbsp;</td><td>クッキー設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPSetDigestAuth"> sceHTTPSetDigestAuth<br></a></td>
<td>&nbsp;</td><td>ダイジェスト認証の設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPSetOption"> sceHTTPSetOption<br></a></td>
<td>&nbsp;</td><td>HTTPオプションの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPSetRedirection"> sceHTTPSetRedirection<br></a></td>
<td>&nbsp;</td><td>リダイレクションの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPTerminate"> sceHTTPTerminate<br></a></td>
<td>&nbsp;</td><td>ライブラリの終了処理（HTTP用）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPUnparseURI"> sceHTTPUnparseURI<br></a></td>
<td>&nbsp;</td><td>解析済URIからURI文字列を作成<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPVerifyAuthInfo"> sceHTTPVerifyAuthInfo<br></a></td>
<td>&nbsp;</td><td>認証確認情報の検証<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceQPrintableEncoder"> sceQPrintableEncoder<br></a></td>
<td>&nbsp;</td><td>quoted-printableエンコード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceQPrintableLineDecoder"> sceQPrintableLineDecoder<br></a></td>
<td>&nbsp;</td><td>quoted-printable行デコード<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceURLEscape"> sceURLEscape<br></a></td>
<td>&nbsp;</td><td>URLエスケープ処理<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceURLUnescape"> sceURLUnescape<br></a></td>
<td>&nbsp;</td><td>URLアンエスケープ処理<br></td></tr>
</table><br>
<font size=4><b>大域変数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPLibVersion"> sceHTTPLibVersion<br></a></td>
<td>&nbsp;</td><td>ライブラリのバージョン<br></td></tr>
</table><br>
<font size=4><b>定数定義</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPMethod_t"> sceHTTPMethod_t<br></a></td>
<td>&nbsp;</td><td>HTTPメソッド定数<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPOption_t"> sceHTTPOption_t<br></a></td>
<td>&nbsp;</td><td>HTTPオプション定数<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceHTTPStatusCode_t"> sceHTTPStatusCode_t<br></a></td>
<td>&nbsp;</td><td>HTTP1.1応答ステータス<br></td></tr>
</table>

<!-- 見出し　１，部見出し -->
<br></td></tr></table></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>構造体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPAuth_t"><font size=6>sceHTTPAuth_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>認証構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPAuth {
	int <i>type</i>;
	char *<i>realm</i>;
	char **<i>domains</i>;
	char *<i>uri</i>;
	char *<i>nonce</i>;
	char *<i>opaque</i>;
	int <i>stale</i>;
	int <i>algorithm</i>;
	int <i>qop;</i>
	int <i>proxy</i>;
} <b>sceHTTPAuth_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;認証タイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>realm</i>&nbsp;</td>
<td valign="TOP">&nbsp;realm文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>domains</i>&nbsp;</td>
<td valign="TOP">&nbsp;ドメイン文字列配列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>uri</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>nonce</i>&nbsp;</td>
<td valign="TOP">&nbsp;nonce文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>opaque</i>&nbsp;</td>
<td valign="TOP">&nbsp;opaque文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>stale</i>&nbsp;</td>
<td valign="TOP">&nbsp;stale値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>algorithm</i>&nbsp;</td>
<td valign="TOP">&nbsp;アルゴリスム&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>qop</i>&nbsp;</td>
<td valign="TOP">&nbsp;QOP値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>proxy</i>&nbsp;</td>
<td valign="TOP">&nbsp;proxyフラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サーバからの認証チャレンジを表すための構造体。<br>認証タイプは整数で表現されていて、ベーシック認証とダイジェスト認証を表す次の定数が定義されている。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;sceHTTPAuth_BASIC&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPAuth_DIGEST&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">ベーシック認証では<i>type, realm, proxy</i>以外のフィールドは使用されない。ダイジェスト認証の場合の各フィールドの意味はRFC2617でWWW-Authenticateヘッダーについて規定されているものと同じ。<br>0 でない proxy フィールドは Proxy-Authenticateヘッダーを示す。<br>ドメインパラメータの値は一般に複数のドメイン名を含むため文字列配列によって表されている。この配列で最後のドメイン名の次の要素はNULLポインタ。<br><i>stale</i>値は次のいずれかの定数で表され、0は<i>stale</i>パラメータがないことを示す。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;sceHTTPDigestStale_TRUE&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPDigestStale_FALSE&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">アルゴリズムは次のいずれかの定数で表され、0は<i>algorithm</i> パラメータがないことを示す。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;sceHTTPDigestAlg_MD5&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPDigestAlg_MD5SESS&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">QOP値は次のビットフラグの論理和で表される。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;sceHTTPDigestQOP_AUTH&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPDigestQOP_AUTHINT&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPFreeAuthList">sceHTTPFreeAuthList</a>()<a href="#"></a>,<a href="#sceHTTPParseAuth">sceHTTPParseAuth</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPAuthInfo_t"><font size=6>sceHTTPAuthInfo_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ダイジェスト認証情報構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPAuthInfo {
	char *<i>nextnonce</i>;
	char *<i>rspauth</i>;
	char *<i>cnonce</i>;
	int <i>nc</i>;
	int <i>qop</i>;
	int <i>proxy</i>;
} <b>sceHTTPAuthInfo_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>nextnoce</i>&nbsp;</td>
<td valign="TOP">&nbsp;nextnonce文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>rspauth</i>&nbsp;</td>
<td valign="TOP">&nbsp;rspauth文字列配列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cnonce</i>&nbsp;</td>
<td valign="TOP">&nbsp;cnonce文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>nc</i>&nbsp;</td>
<td valign="TOP">&nbsp;nc(nonce count)値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>qop</i>&nbsp;</td>
<td valign="TOP">&nbsp;QOP値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>proxy</i>&nbsp;</td>
<td valign="TOP">&nbsp;proxyフラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ダイジェスト認証時に認証確認情報を表すための構造体。<br><i>proxy</i>を除く各フィールドの意味はRFC2617でAuthentication-Infoヘッダーについて規定されているものと同じ。<i>qop</i>についてはsceHTTPAuth_tの解説を参照のこと。<br>0 でない <i>proxy</i> フィールドは Proxy-Authentication-Infoヘッダーを示す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParseAuthInfo">sceHTTPParseAuthInfo</a>()<a href="#"></a>,<a href="#sceHTTPFreeAuthInfo">sceHTTPFreeAuthInfo</a>()<br><a href="#sceHTTPverifyAuthInfo">sceHTTPverifyAuthInfo</a>()<a href="#"></a>,<a href="#sceHTTPAuth_t">sceHTTPAuth_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPAuthList_t"><font size=6>sceHTTPAuthList_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>認証リスト構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPAuthList {
	struct sceHTTPAuthList *<i>forw</i>, *<i>back</i>;
	struct sceHTTPAuth <i>auth</i>;
} <b>sceHTTPAuthList_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>forw</i>&nbsp;</td>
<td valign="TOP">&nbsp;前方リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>back</i>&nbsp;</td>
<td valign="TOP">&nbsp;後方リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>auth</i>&nbsp;</td>
<td valign="TOP">&nbsp;認証チャレンジ構造体&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">認証チャレンジの二重リンクドリストを表すための構造体。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPFreeAuthList">sceHTTPFreeAuthList</a>()<a href="#"></a>,<a href="#sceHTTPParseAuth">sceHTTPParseAuth</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPClient_t"><font size=6>sceHTTPClient_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPクライアント構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPClient {
	char *<i>name</i>;
	int <i>http_ver</i>;
	int <i>http_rev</i>;
	int <i>rtimeout</i>;
	int <i>ttimeout</i>
	int <i>laptime</i>;
	int <i>prot</i>;
	int <i>state</i>;
	int <i>errnum</i>;
	int <i>net_errno</i>;
	int <i>net_herrno</i>;
	int <i>reloading</i>;
	int <i>keep_alive</i>;
	int <i>keep_count</i>;
	int <i>non_blocking</i>;
	int <i>otimeout</i>;
	int <i>c_wait0</i>;
	int <i>c_wait1</i>;
	int <i>c_tcount</i>;
	int <i>c_timer</i>;
	int <i>t_stacksize</i>;
	int <i>t_priority</i>;
	int <i>t_thread</i>;
	void *<i>t_stack</i>;
	int <i>t_rtn</i>;
	void (*<i>t_notify</i>)(struct sceHTTPClient *, int, void *);
 	void <i>*t_notify_opt</i>;
	int <i>t_busy</i>;
	void (*<i>t_hash</i>)(struct sceHTTPClient *, sceHTTPSize_t, void *);
 	void <i>*t_hash_opt</i>;
	int <i>t_hashbytes</i>;
	unsigned int <i>t_sent</i>;
	unsigned int <i>max_olength</i>;
	struct sceHTTPParsedURI_t *<i>proxy</i>;
	sceHTTPMethod_t <i>method</i>;
	struct sceHTTPParsedURI_t *<i>puri</i>;
	sceHTTPHeaderList_t *<i>iheaders</i>;
	char *<i>idata</i>;
	int <i>ilength</i>;
	int <i>iflags</i>;
	int <i>fd</i>;
	void (*<i>writef</i>)(struct sceHTTPClient *, unsigned char *, unsigned int);
	int <i>hflags</i>;
	sceHTTPResponse_t <i>response</i>;
	void (*<i>chunkf</i>)(struct sceHTTPClient *, unsigned char *, unsigned int, void *);
	void <i>*chunkf_opt</i>;
	int <i>recv_thread</i>;
	int <i>send_thread</i>;
	void *<i>io_rstack</i>;
	void *<i>io_sstack</i>;
	int <i>io_desc</i>;
	char * <i>io_buf</i>;
	int <i>io_len</i>;
	int <i>io_rtn</i>;
	int <i>io_timer</i>;
	int <i>io_rwait</i>, <i>io_rdone</i>;
	int <i>io_swait</i>, <i>io_sdone</i>;
	int <i>io_flags</i>;
	int <i>io_tcount</i>;
} <b>sceHTTPClient_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>name</i>&nbsp;</td>
<td valign="TOP">&nbsp;ユーザエージェント名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>http_ver</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP プロトコルバージョン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>http_rev</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP プロトコルリビジョン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>rtimeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;レスポンスタイムアウト(秒)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ttimeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;データ転送タイムアウト(秒)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>laptime</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力ラップタイム&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>prot</i>&nbsp;</td>
<td valign="TOP">&nbsp;プロトコル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>state</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションステート&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>errnum</i>&nbsp;</td>
<td valign="TOP">&nbsp;エラー番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>net_errno</i>&nbsp;</td>
<td valign="TOP">&nbsp;ネットワークエラー番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>net_herrno</i>&nbsp;</td>
<td valign="TOP">&nbsp;アドレス解決エラー番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>reloading</i>&nbsp;</td>
<td valign="TOP">&nbsp;リロードフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>keep_alive</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続保持時間(秒)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>keep_count</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続保持回数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>non_blocking</i>&nbsp;</td>
<td valign="TOP">&nbsp;ノンブロッキングモード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>abort_req</i>&nbsp;</td>
<td valign="TOP">&nbsp;アボート要求フラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>otimeout</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続タイムアウト(秒)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>c_wait0</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続通知用セマフォア ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>c_wait1</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続通知用セマフォア ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>c_tcount</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続用タイマーカウンタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>c_timer</i>&nbsp;</td>
<td valign="TOP">&nbsp;接続用タイマー ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_stacksize</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションスレッドスタックサイズ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_priority</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションスレッドプライオリティ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_thread</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションスレッド ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_stack</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションスレッドスタック&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_rtn</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクション終了コード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_notify</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクション終了通知用コールバック関数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_notify_opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクション終了通知用コールバック関数&nbsp;<br>&nbsp;に対するユーザ定義引数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_busy</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションビジーフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_hash</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションハッシュコールバック関数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_hash_opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションハッシュコールバック関数に対するユーザ定義引数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>hashbytes</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクションビジーフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t_sent</i>&nbsp;</td>
<td valign="TOP">&nbsp;PUT 時送信量&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>max_olength</i>&nbsp;</td>
<td valign="TOP">&nbsp;最大応答データ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>proxy</i>&nbsp;</td>
<td valign="TOP">&nbsp;解析済プロクシー URI&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>method</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP 要求メソッド&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>puri</i>&nbsp;</td>
<td valign="TOP">&nbsp;解析済 URI&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>iheaders</i>&nbsp;</td>
<td valign="TOP">&nbsp;要求ヘッダー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>idata</i>&nbsp;</td>
<td valign="TOP">&nbsp;要求データ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilength</i>&nbsp;</td>
<td valign="TOP">&nbsp;要求データ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>iflags</i>&nbsp;</td>
<td valign="TOP">&nbsp;要求データフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilength</i>&nbsp;</td>
<td valign="TOP">&nbsp;要求データ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fd</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイルディスクリプタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>writef</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイルライト関数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>hflags</i>&nbsp;</td>
<td valign="TOP">&nbsp;ヘッダーフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chunkf</i>&nbsp;</td>
<td valign="TOP">&nbsp;チャンク受信通知用コールバック関数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chunkf_opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;チャンク受信通知用コールバック関数に&nbsp;<br>&nbsp;対するユーザ定義引数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>recv_thread</i>&nbsp;</td>
<td valign="TOP">&nbsp;受信スレッド ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>send_thread</i>&nbsp;</td>
<td valign="TOP">&nbsp;送信スレッド ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_rstack</i>&nbsp;</td>
<td valign="TOP">&nbsp;受信スレッドスタック&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_sstack</i>&nbsp;</td>
<td valign="TOP">&nbsp;送信スレッドスタック&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_desc</i>&nbsp;</td>
<td valign="TOP">&nbsp;ソケットディスクリプタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力バッファ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_len</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力バッファ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_rtn</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力返り値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_timer</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力タイマー ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_rwait</i>&nbsp;</td>
<td valign="TOP">&nbsp;受信要求セマフォア ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_rdone</i>&nbsp;</td>
<td valign="TOP">&nbsp;受信完了セマフォア ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_swait</i>&nbsp;</td>
<td valign="TOP">&nbsp;送信要求セマフォア ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_sdone</i>&nbsp;</td>
<td valign="TOP">&nbsp;送信完了セマフォア ID&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_flags</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力フラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>io_tcount</i>&nbsp;</td>
<td valign="TOP">&nbsp;入出力タイマーカウンタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTPクライアントがトランザクションを行うための構造体。ユーザがこの構造体メンバへ直接アクセスすることはない。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPCreate">sceHTTPCreate</a>()<a href="#"></a>,<a href="#sceHTTPDestroy">sceHTTPDestroy</a>()<a href="#"></a>,<a href="#sceHTTPRequest">sceHTTPRequest</a>()<br><a href="#sceHTTPGetResponse">sceHTTPGetResponse</a>()<a href="#"></a>,<a href="#sceHTTPGetOption">sceHTTPGetOption</a>()<a href="#"></a>,<a href="#sceHTTPSetOption">sceHTTPSetOption</a>()<br><a href="#sceHTTPOpen">sceHTTPOpen</a>()<a href="#"></a>,<a href="#sceHTTPClose">sceHTTPClose</a>()<a href="#"></a>,<a href="#sceHTTPGetClientError">sceHTTPGetClientError</a>()<br><a href="#sceHTTPGetTransferBytes">sceHTTPGetTransferBytes</a>()<br><a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a>,<a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPCookie_t"><font size=6>sceHTTPCookie_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキー構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPCookie {
	char *<i>name</i>;
	char *<i>value</i>;
	char *<i>domain</i>;
	char *<i>path</i>;
	int <i>expires</i>;
	int <i>secure</i>;
	int <i>version</i>;
	int <i>maxage</i>;
} <b>sceHTTPCookie_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>name</i>&nbsp;</td>
<td valign="TOP">&nbsp;名前&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>value</i>&nbsp;</td>
<td valign="TOP">&nbsp;値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>domain</i>&nbsp;</td>
<td valign="TOP">&nbsp;有効ドメイン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>path</i>&nbsp;</td>
<td valign="TOP">&nbsp;有効パス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>expires</i>&nbsp;</td>
<td valign="TOP">&nbsp;期限&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>secure</i>&nbsp;</td>
<td valign="TOP">&nbsp;セキュアフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>version</i>&nbsp;</td>
<td valign="TOP">&nbsp;バージョン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>maxage</i>&nbsp;</td>
<td valign="TOP">&nbsp;期限（バージョン1型）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クッキーを表すための構造体。<br><i>expires</i>の値はGMTで1970年1月1日からの秒数で表される時刻。<br>セキュアフラグの値が0でないことは、このクッキーを用いる場合サーバとの通信がセキュアに行われなければならないことを意味する。<br><i>maxage</i>はこのクッキーがRFC2109で規定されたもの（<i>version</i>が1）であるときに用いられ、値は現在からの秒数。型 sceHTTPTime_t は 64-bit 符号つき整数として定義される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPsceHTTPAddCookieList">sceHTTPsceHTTPAddCookieList</a>()<a href="#"></a>,<a href="#sceHTTPParseCookie">sceHTTPParseCookie</a>()<br><a href="#sceHTTPSetCookie">sceHTTPSetCookie</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPCookieList_t"><font size=6>sceHTTPCookieList_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキーリスト構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPCookieList {
	struct sceHTTPCookieList *<i>forw</i>, *<i>back</i>;
	struct sceHTTPCookie <i>cookie</i>;
} <b>sceHTTPCookieList_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>forw</i>&nbsp;</td>
<td valign="TOP">&nbsp;前方リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>back</i>&nbsp;</td>
<td valign="TOP">&nbsp;後方リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cookie</i>&nbsp;</td>
<td valign="TOP">&nbsp;クッキー構造体&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クッキーの二重リンクドリストを表すための構造体。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPsceHTTPAddCookieList">sceHTTPsceHTTPAddCookieList</a>()<a href="#"></a>,<a href="#sceHTTPFreeCookieList">sceHTTPFreeCookieList</a>()<br><a href="#sceHTTPParseCookie">sceHTTPParseCookie</a>()<a href="#"></a>,<a href="#sceHTTPSetCookie">sceHTTPSetCookie</a>()<a href="#"></a>,<a href="#sceHTTPCookie_t">sceHTTPCookie_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPDigest_t"><font size=6>sceHTTPDigest_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ダイジェスト認証要求構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPDigest {
	char *<i>username</i>;
	char *<i>realm</i>;
	char *<i>password</i>;
	char *<i>uri</i>;
	char *<i>nonce</i>;
	char *<i>cnonce</i>;
	char *<i>opaque</i>;
	int <i>algorithm</i>;
	int <i>nc</i>;
	int <i>qop</i>;
	int <i>method</i>;
	char *<i>entity</i>;
	int <i>length</i>;
} <b>sceHTTPDigest_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>username</i>&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ名文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>realm</i>&nbsp;</td>
<td valign="TOP">&nbsp;realm 文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>password</i>&nbsp;</td>
<td valign="TOP">&nbsp;パスワード文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>uri</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI 文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>nonce</i>&nbsp;</td>
<td valign="TOP">&nbsp;nonce 文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cnonce</i>&nbsp;</td>
<td valign="TOP">&nbsp;cnonce 文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>opaque</i>&nbsp;</td>
<td valign="TOP">&nbsp;opaque 文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>algorithm</i>&nbsp;</td>
<td valign="TOP">&nbsp;アルゴリズム&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>nc</i>&nbsp;</td>
<td valign="TOP">&nbsp;カウント(整数)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>qop</i>&nbsp;</td>
<td valign="TOP">&nbsp;QOP 値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>method</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP メソッド&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>entity</i>&nbsp;</td>
<td valign="TOP">&nbsp;データバイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>length</i>&nbsp;</td>
<td valign="TOP">&nbsp;データ列の長さ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ダイジェスト認証要求のための構造体。<br><i>method</i>, <i>entity</i>, <i>length</i>以外のフィールドの意味はRFC2617で規定されるものと同じ。また<i>algorithm</i>, <i>qop</i>についてはsceHTTPAuth_tの解説に示したのと同じ定数定義がなされている。<br><i>entity</i>と<i>length</i>のフィールドはQOP値がsceHTTPDigestQOP_AUTHINTの場合にのみ用いられる。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPSetDigestAuth">sceHTTPSetDigestAuth</a>()<a href="#"></a>,<a href="#sceHTTPAuth_t">sceHTTPAuth_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPHeaderList_t"><font size=6>sceHTTPHeaderList_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ヘッダリスト構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPHeaderList {
	struct sceHTTPHeaderList *<i>forw</i>, *<i>back</i>;
	char *<i>name</i>;
	char *<i>value</i>;
} <b>sceHTTPHeaderList_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>forw</i>&nbsp;</td>
<td valign="TOP">&nbsp;前方リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>back</i>&nbsp;</td>
<td valign="TOP">&nbsp;後方リンク&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>name</i>&nbsp;</td>
<td valign="TOP">&nbsp;名前&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>value</i>&nbsp;</td>
<td valign="TOP">&nbsp;文字列値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">名前と値（文字列）のペアの二重リンクドリスト。<br>HTTP 要求と応答におけるヘッダー情報を保持する時に用いられる。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPAddHeaderList">sceHTTPAddHeaderList</a>()<a href="#"></a>,<a href="#sceHTTPFreeHeaderList">sceHTTPFreeHeaderList</a>()<br><a href="#sceHTTPNextHeader">sceHTTPNextHeader</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilter_t"><font size=6>sceHTTPMimeFilter_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEフィルタ構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPMimeFilter {
	struct sceHTTPMimeFilter *<i>next</i>;
	struct sceHTTPMimeFilter *<i>prev</i>;
	int <i>itype</i>;
	int <i>idesc</i>;
	unsigned char *<i>ibuf</i>;
	unsigned int <i>ibuflen</i>;
	unsigned char *<i>iptr</i>;
	int <i>idesc_eof</i>;
	int <i>otype</i>;
	int <i>odesc</i>;
	unsigned char *<i>obuf</i>;
	unsigned int <i>obuflen</i>;
	unsigned char *<i>optr</i>;
	sceHTTPHeaderList_t *<i>headers</i>;
	int <i>dflags</i>;
	int (*<i>decoder</i>)(const char *, char *, int);
	unsigned char *<i>dbuf</i>;
	int <i>multipart</i>;
	char *<i>boundary</i>;
} <b>sceHTTPMimeFilter_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>next</i>&nbsp;</td>
<td valign="TOP">&nbsp;マルチパート下位レベルフィルターへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>prev</i>&nbsp;</td>
<td valign="TOP">&nbsp;マルチパート上位レベルフィルターへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>itype</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力タイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>idesc</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイル入力時の入力ファイルディスクリプタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ibuf</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力バッファ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ibuflen</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力バッファ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>iptr</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力ポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>idesc_eof</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力ファイル終端フラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>otype</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力タイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>odesc</i>&nbsp;</td>
<td valign="TOP">&nbsp;ファイル出力時の出力ファイルディスクリプタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>obuf</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力バッファ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>obuflen</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力バッファ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>optr</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力ポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>headers</i>&nbsp;</td>
<td valign="TOP">&nbsp;ヘッダーリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dflags</i>&nbsp;</td>
<td valign="TOP">&nbsp;デコーディング用バッファ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>decoder</i>&nbsp;</td>
<td valign="TOP">&nbsp;デコーディング関数ポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dbuf</i>&nbsp;</td>
<td valign="TOP">&nbsp;デコーディング用バッファ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>multipart</i>&nbsp;</td>
<td valign="TOP">&nbsp;マルチパートフラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>boundary</i>&nbsp;</td>
<td valign="TOP">&nbsp;バウンダリストリング&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIME 処理のための構造体。 ユーザがこの構造体のメンバに直接アクセスすることはない。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilterCreate">sceHTTPMimeFilterCreate</a>()<a href="#"></a>,<a href="#sceHTTPMimeFilterFree">sceHTTPMimeFilterFree</a>()<br><a href="#sceHTTPMimeFilterParseHeaders">sceHTTPMimeFilterParseHeaders</a>()<a href="#"></a>,<a href="#sceHTTPMimeFilterApply">sceHTTPMimeFilterApply</a>()<br><a href="#sceHTTPMimeFilterGetMultipartType">sceHTTPMimeFilterGetMultipartType</a>()<br><a href="#sceHTTPMimeFilterChangeOutput">sceHTTPMimeFilterChangeOutput</a>()<br><a href="#sceHTTPMimeFilterGetStringOutput">sceHTTPMimeFilterGetStringOutput</a>()<br><a href="#sceHTTPMimeFilterGetHeaderList">sceHTTPMimeFilterGetHeaderList</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPParsedURI_t"><font size=6>sceHTTPParsedURI_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>解析済URI構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPParsedURI {
	char *<i>scheme</i>;
	char *<i>username</i>;
	char *<i>password</i>;
	char *<i>hostname</i>;
	int <i>port</i>;
	char *<i>filename</i>;
	char *<i>search</i>;
} <b>sceHTTPParsedURI_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>scheme</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI プロトコルスキーム名（"http"）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>username</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI ユーザ名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>password</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI パスワード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>hostname</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI ホスト名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>port</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI ポート番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>filename</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI ファイルパス名&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>search</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI サーチパート&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">解析済 URI を保持するための構造体。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#secsceHTTPParseURI">secsceHTTPParseURI</a>()<a href="#"></a>,<a href="#sceHTTPFreeURI">sceHTTPFreeURI</a>()<a href="#"></a>,<a href="#sceHTTPCloneURI">sceHTTPCloneURI</a>()<br><a href="#sceHTTPUnparseURI">sceHTTPUnparseURI</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPResponse_t"><font size=6>sceHTTPResponse_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPレスポンス構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct sceHTTPResponse {
	int <i>http_ver</i>;
	int <i>http_rev</i>;
	sceHTTPStatusCode_t <i>code</i>;
	char *<i>reason</i>;
	int <i>server_prot</i>;
	sceHTTPHeaderList_t *<i>headers</i>;
	unsigned char *<i>entity</i>;
	sceHTTPSize_t <i>length</i>;
	int <i>interrupted</i>;
	int <i>date</i>;
	sceHTTPSize_t <i>content_length</i>;
} <b>sceHTTPResponse_t</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>http_ver</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ HTTP バージョン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>http_rev</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ HTTP リビジョン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>code</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ応答ステータスコード(整数型)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>reason</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ応答リザルトフレーズ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>server_prot</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバプロトコル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>headers</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ応答ヘッダーリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>entity</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ応答データ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>length</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ応答データ長(バイト数)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>interrupted</i>&nbsp;</td>
<td valign="TOP">&nbsp;トランザクション中断フラグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>date</i>&nbsp;</td>
<td valign="TOP">&nbsp;サーバ応答が行われた時間&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>content_length</i>&nbsp;</td>
<td valign="TOP">&nbsp;コンテンツ長(バイト数)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サーバからの HTTP 応答を保持するための構造体。<br><i>code</i> はRFC2616 で規定されているコードを表す。<br><i>server_prot</i> を表す定数として<br><br>　　sceHTTPProt_HTTP　　0<br><br>が定義されている。<br><i>date</i>はGMTで1970年1月1日からの経過秒で表される。<br>content_lengthはサーバ応答ヘッダーリスト中にContent-Lengthヘッダーが存在すればそれが示すコンテンツ長、存在しない場合 -1 となる。型 sceHTTPTime_t, sceHTTPSize_t は 64-bit 符号つき整数として定義される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPGetResponse">sceHTTPGetResponse</a>()<a href="#"></a>,<a href="#sceHTTPCleanUpResponse">sceHTTPCleanUpResponse</a>()<br><a href="#sceHTTPErrorString">sceHTTPErrorString</a>()<a href="#"></a>,<a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceBASE64Encoder"><font size=6>sceBASE64Encoder<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>BASE64エンコード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceBASE64Encoder</b>(
	unsigned const char *<i>in</i>,
	unsigned char *<i>out</i>,
	int <i>ilen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>in</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>out</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilen</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力の長さ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力バイト数<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>と<i>ilen</i>とで指定された入力バイト列をBASE64エンコードし、<i>out</i>で指定されたメモリ領域へ出力する。<br>出力用のメモリ領域は (<i>ilen</i> + 2) / 3 * 4 以上の大きさでなくてはならない。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceBASE64LineDecoder"><font size=6>sceBASE64LineDecoder<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>BASE64行デコード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceBASE64LineDecoder</b>(
	unsigned const char *<i>in</i>,
	unsigned char *<i>out</i>,
	int <i>ilen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>in</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>out</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilen</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力の長さ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;出力バイト数&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>と<i>ilen</i>とで指定された入力バイト列（BASE64エンコードされたデータの1行分）をデコードして、<i>out</i>で指定されたメモリ領域へ出力する。入力バイト列は終端にRFC822改行（CRとLFの連続）を含めず、長さは76バイトかそれ以下でなければならない。<i>ilen</i>にこれ以上の値を指定しても無視される。<br>出力用のメモリ領域は60バイト以上の大きさがなければならない。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPAbortRequest"><font size=6>sceHTTPAbortRequest<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTP要求の中止<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPAbortRequest</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client</i>　　HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTPトランザクション要求を中止する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPAddCookieList"><font size=6>sceHTTPAddCookieList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキーリストの追加<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPCookieList_t *<b>sceHTTPAddCookieList</b>(
	sceHTTPCookieList_t *<i>p</i>,
	sceHTTPCookie_t *<i>cp</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;クッキーリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cp</i>&nbsp;</td>
<td valign="TOP">&nbsp;クッキーへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;追加された要素へのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クッキーリストに新しい要素を追加する。<br><i>cp</i>で与えたクッキーやその要素は複製されて追加される。<br>ただしクッキーリスト中にすでに同じ name, domain, path を持つ要素が存在する場合はそれを上書きし新しい要素はつくらない。<br>この場合は返り値は上書きされた要素へのポインタになる。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPCookieList_t">sceHTTPCookieList_t</a>,<a href="#sceHTTPCookie_t">sceHTTPCookie_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPAddHeaderList"><font size=6>sceHTTPAddHeaderList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ヘッダーリストの追加<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPHeaderList_t *<b>sceHTTPAddHeaderList</b>(
	sceHTTPHeaderList_t *<i>p,</i>
	const char *<i>name,</i>
	const char *<i>value</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;ヘッダーリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>name</i>&nbsp;</td>
<td valign="TOP">&nbsp;追加するヘッダーの名前（アトリビュート）部分&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>value</i>&nbsp;</td>
<td valign="TOP">&nbsp;追加するヘッダーの値部分&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;追加後のヘッダーリスト&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定したヘッダーリストの最後に、<i>name</i>と<i>value</i>で指定した新たな要素を追加する。要素は名前（アトリビュート）と値を表す文字列のペアで、HTTPヘッダーとしては名前:値の形式に対応している。<br><i>name</i>や<i>value</i>の文字列はライブラリ内で複製されて保持されるのでこの関数の呼び出し後に保持する必要はない。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPCleanUpResponse"><font size=6>sceHTTPCleanUpResponse<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTP応答の初期状態への復帰<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPCleanUpResponse</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTP応答を保持する構造体を初期状態に戻す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPCloneURI"><font size=6>sceHTTPCloneURI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>解析済URIの複製<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPParsedURI_t *<b>sceHTTPCloneURI</b>(
	sceHTTPParsedURI_t *<i>puri</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>puri</i>　　複製したい解析済URI構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、複製した解析済URI構造体へのポインタを、エラーの場合、NULLを返す。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>puri</i>の複製を作る。メンバも複製される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPClose"><font size=6>sceHTTPClose<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPコネクションのクローズ<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPClose</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client</i>　　クローズしたいHTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サーバとのHTTPコネクションを終了する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPCreate"><font size=6>sceHTTPCreate<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPクライアントオブジェクトの作成<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPClient_t *<b>sceHTTPCreate</b>(
	<i>void</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、作成したHTTPクライアントへのポインタ（非0値）を返す。<br>エラーの場合、NULLを返す。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">新しいHTTPクライアントトランザクションを行うための構造体を取得し、そのポインタを返す。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPCreate() 関数の呼び出しが成功した場合で内部的に２つのスレッドが作成される。 このスレッドの優先度は sceHTTPO_ThreadValueオプションを用いて sceHTTPGetOption(), sceHTTPSetOption() 関数で取得や設定を行うことができる。この内部的に作成されたスレッドはsceHTTPDestroy() 関数で解放される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPDeleteCookieListEntry"><font size=6>sceHTTPDeleteCookieListEntry<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキーリストからの削除<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPCookieList_t *<b>sceHTTPDeleteCookieListEntry</b>(
	sceHTTPCookieList_t *<i>p</i>,
	sceHTTPCookieList_t *<i>ep</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;クッキーリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ep</i>&nbsp;</td>
<td valign="TOP">&nbsp;削除したいクッキーリストエントリへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">削除後のクッキーリスト<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クッキーリストからあるエントリを削除し、エントリが確保していたメモリを解放する。 返り値は <i>p</i> が <i>ep</i> と異なるときは <i>p</i> を、等しいときは <i>p</i> の次のエントリへのポインタとなる。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPCookieList_t">sceHTTPCookieList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPDestroy"><font size=6>sceHTTPDestroy<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPクライアントオブジェクトの解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPDestroy</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>解放したいHTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTPクライアントトランザクションを行うための構造体を解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPErrorString"><font size=6>sceHTTPErrorString<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTP応答ステータスの文字列化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const char *<b>sceHTTPErrorString</b>(
	sceHTTPStatusCode_t <i>error</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>error</i>　　HTTP応答コード<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、<i>error</i>に対応する説明文字列を返す。エラーの場合、NULLを返す。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">RFC2616で規定されたHTTP応答コードの説明文字列を返す。文字列は静的に与えられる。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPStatusCode_t">sceHTTPStatusCode_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFilterCookieList"><font size=6>sceHTTPFilterCookieList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキーリストのフィルタリング<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPCookieList_t *<b>sceHTTPFilterCookieList</b>(
	sceHTTPCookieList_t *<i>list</i>,
	int (*<i>filter</i>)(sceHTTPCookie_t *, void *),
	void *<i>arg</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>list</i>&nbsp;</td>
<td valign="TOP">&nbsp;クッキーリスト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>filter</i>&nbsp;</td>
<td valign="TOP">&nbsp;フィルター関数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>arg</i>&nbsp;</td>
<td valign="TOP">&nbsp;フィルター関数ユーザ定義引数&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;新しいクッキーリストへのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クッキーリストを先頭から調べ、それぞれのクッキーとユーザ定義引数を引数にフィルター関数を呼び、その返り値が非零のときにそのクッキーの複製を新しいクッキーリストに追加する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPCookieList_t">sceHTTPCookieList_t</a>,<a href="#sceHTTPCookie_t">sceHTTPCookie_t</a><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFindAbsoluteURI"><font size=6>sceHTTPFindAbsoluteURI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>URIの補完<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>char *<b>sceHTTPFindAbsoluteURI</b>(
	const char *<i>uri</i>,
	const char *<i>base</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>uri</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>base</i>&nbsp;</td>
<td valign="TOP">&nbsp;ベースURI文字列&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、補完されたURI文字列を、エラーの場合、NULLを返す。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>uri</i>を*<i>base</i>に基づいて絶対URIに補完する。<br>補完された URI 文字列はライブラリ内で malloc() 関数で確保されるので不必要になった時点で free() 関数で解放する。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFreeAuthInfo"><font size=6>sceHTTPFreeAuthInfo<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>認証確認情報の解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPFreeAuthInfo</b>(
	sceHTTPAuthInfo_t *<i>ip</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>ip　</i>　認証確認情報構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>ip</i>で指定された認証確認情報構造体を解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPAuthInfo_t">sceHTTPAuthInfo_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFreeAuthList"><font size=6>sceHTTPFreeAuthList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>認証チャレンジリストの解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPFreeAuthList</b>(
	sceHTTPAuthList_t *<i>p</i>,
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　</i>　認証チャレンジリスト<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定された認証チャレンジリストの全要素を解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPAuthList_t">sceHTTPAuthList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFreeCookieList"><font size=6>sceHTTPFreeCookieList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキーリストの解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPFreeCookieList</b>(
	sceHTTPCookieList_t *<i>p</i>,
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　　</i>クッキーリスト<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定されたクッキーリストのすべての要素を解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPCookieList_t">sceHTTPCookieList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFreeHeaderList"><font size=6>sceHTTPFreeHeaderList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ヘッダーリストの解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPFreeHeaderList</b>(
	sceHTTPHeaderList_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　</i>　ヘッダーリスト<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定したヘッダーリストの全要素を解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFreeLocations"><font size=6>sceHTTPFreeLocations<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>リダイレクトロケーション配列の解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPFreeLocations</b>(
	char **<i>locations</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>locations</i>　　ロケーション配列へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPParseLocations()関数で取得したURI文字列の配列を、その要素とともにすべて解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParseLocations">sceHTTPParseLocations</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPFreeURI"><font size=6>sceHTTPFreeURI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>解析済URIの解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPFreeURI</b>(
	sceHTTPParsedURI_t *<i>puri</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>puri</i>　　解放したい解析済URI構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>puri</i>で指定した解析済URI構造体を解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetClientError"><font size=6>sceHTTPGetClientError<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPクライアント内部エラーコードの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPGetClientError</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client</i>で指定されたHTTPクライアントの内部エラーコード<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">メモリ不足など内部的なエラーが起きた場合にその理由を示すコードを返す。現在の内部エラーコードは次のように定義されている。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_KERNEL&nbsp;</td>
<td valign="TOP">&nbsp;-1001&nbsp;</td>
<td valign="TOP">&nbsp;カーネルコール失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_NOMEM&nbsp;</td>
<td valign="TOP">&nbsp;-1002&nbsp;</td>
<td valign="TOP">&nbsp;メモリ不足&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_IO&nbsp;</td>
<td valign="TOP">&nbsp;-1003&nbsp;</td>
<td valign="TOP">&nbsp;IO失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_INVAL&nbsp;</td>
<td valign="TOP">&nbsp;-1004&nbsp;</td>
<td valign="TOP">&nbsp;不正な数値の発見&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_TIMEOUT&nbsp;</td>
<td valign="TOP">&nbsp;-1005&nbsp;</td>
<td valign="TOP">&nbsp;タイムアウト&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_RESOLV&nbsp;</td>
<td valign="TOP">&nbsp;-1006&nbsp;</td>
<td valign="TOP">&nbsp;ホスト名解決失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_SOCKET&nbsp;</td>
<td valign="TOP">&nbsp;-1007&nbsp;</td>
<td valign="TOP">&nbsp;ソケット取得失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_CONNECT&nbsp;</td>
<td valign="TOP">&nbsp;-1008&nbsp;</td>
<td valign="TOP">&nbsp;接続失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_SSL&nbsp;</td>
<td valign="TOP">&nbsp;-1009&nbsp;</td>
<td valign="TOP">&nbsp;SSLエラー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_NOTYET&nbsp;</td>
<td valign="TOP">&nbsp;-1010&nbsp;</td>
<td valign="TOP">&nbsp;存在しない機能の呼び出し&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_INTR&nbsp;</td>
<td valign="TOP">&nbsp;-1011&nbsp;</td>
<td valign="TOP">&nbsp;中断&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_PROXY&nbsp;</td>
<td valign="TOP">&nbsp;-1012&nbsp;</td>
<td valign="TOP">&nbsp;プロクシへのコマンド失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_BUSY&nbsp;</td>
<td valign="TOP">&nbsp;-1013&nbsp;</td>
<td valign="TOP">&nbsp;接続ビジー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPError_WRITEF&nbsp;</td>
<td valign="TOP">&nbsp;-1014&nbsp;</td>
<td valign="TOP">&nbsp;ファイルライト関数エラー&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetContentLength"><font size=6>sceHTTPGetContentLength<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>GET トランザクション時コンテンツ長の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPSize_t <b>sceHTTP GetContentLength</b> (
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client</i>　　 HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;まだ応答ヘッダーを全部取得していない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;コンテンツ長指定なし&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;その他&nbsp;</td>
<td valign="TOP">&nbsp;コンテンツ長&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">GET によるトランザクション中に Content-Length ヘッダーによってコンテンツ長を取得できた場合それを返す。応答中に Content-Lengthヘッダーがない場合は -1 を返す。 GET によるトランザクション中またはその後以外に呼びだした場合は 0 を返す。<br>型 sceHTTPSize_t は 64-bit 符号つき整数として定義される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetOption"><font size=6>sceHTTPGetOption<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPオプションの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPGetOption</b>(
	sceHTTPClient_t *<i>client</i>,
	sceHTTPOption_t <i>opt</i>,
	...
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP クライアントオブジェクトへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;オプション番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>...</i>&nbsp;</td>
<td valign="TOP">&nbsp;オプション番号によって定まる個数の追加引数がある&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTPトランザクションでのさまざまなオプションの設定値を取得する。<i>opt</i>には取得したいオプションを表すsceHTTPOption_t型のenum値を指定し、設定値を引き取るための追加引数を適宜指定する。たとえばリクエストデータとバイト長を取得する場合、<i>opt</i>にはsceHTTPO_RequestEntityを指定し、追加引数は２つあるので次のような形で呼び出すことになる。<br><br></div>
        <div style="margin-left:93px;"><pre><font size=3>char *data;
int length;

sceHTTPGetOption(client, sceHTTPO_RequestEntity, &data, &length);
</pre></font></div>
<div style="margin-left:50px;"><br><i>opt</i>に指定する値とそれに応じた追加引数は次のとおり。<br></div>

<div style="margin-left:40px;"><h4><b>ユーザエージェント名の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ClientName</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;char **namep&nbsp;</td>
<td valign="TOP">&nbsp;取得したユーザエージェント名を格納する&nbsp;<br>&nbsp;変数へのポインタ&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>HTTPリビジョンの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_HTTPRevision</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int **revisionp&nbsp;</td>
<td valign="TOP">&nbsp;取得したHTTPリビジョンを格納する&nbsp;<br>&nbsp;整数変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>HTTPメソッドの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_Method</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPMethod_t *mtdp&nbsp;</td>
<td valign="TOP">&nbsp;取得したHTTPメソッド定数を格納する&nbsp;<br>&nbsp;変数へのポインタ。HTTPメソッド定数の&nbsp;<br>&nbsp;詳細はsceHTTPMethod_tの解説を参照の&nbsp;<br>&nbsp;こと&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>解析済URIの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt </i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ParsedURI</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPParsedURI_t **urip&nbsp;</td>
<td valign="TOP">&nbsp;取得した解析済URIを格納する変数への&nbsp;<br>&nbsp;ポインタ。取得した解析済URIを変更、&nbsp;<br>&nbsp;解放してはならない。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>解析済プロキシURIの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ProxyURI</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPParsedURI_t **pxyp&nbsp;</td>
<td valign="TOP">&nbsp;取得した解析済プロキシURIを格納する&nbsp;<br>&nbsp;変数へのポインタ。取得した解析済&nbsp;<br>&nbsp;プロキシURIを変更、解放してはならない。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>要求ヘッダーリストの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_RequestHeaders</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderList_t **hdp&nbsp;</td>
<td valign="TOP">&nbsp;取得した要求ヘッダーリストを格納する&nbsp;<br>&nbsp;変数へのポインタ。取得した要求ヘッダー&nbsp;<br>&nbsp;リストを変更、解放してはならない。&nbsp;<br>&nbsp;クライアント構造体中の要求ヘッダー&nbsp;<br>&nbsp;リストを解放したい場合は&nbsp;<br>&nbsp;sceHTTPSetOption() 関数を利用すること。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>リクエストデータおよびそのバイト長の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_RequestEntity</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;char **datap&nbsp;</td>
<td valign="TOP">&nbsp;取得したリクエストデータを格納する&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;unsigned int *lengthp&nbsp;</td>
<td valign="TOP">&nbsp;取得したリクエストデータのサイズを&nbsp;<br>&nbsp;格納する整数変数へのポインタ。&nbsp;<br>&nbsp;取得したリクエストデータを変更、&nbsp;<br>&nbsp;解放してはならない。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>オープン時接続タイムアウト値の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_OpenTimeout</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *timeoutp&nbsp;</td>
<td valign="TOP">&nbsp;取得したタイムアウト値（秒）を格納する&nbsp;<br>&nbsp;整数変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>レスポンスヘッダー取得タイムアウト値の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ResponseTimeout</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *timoutp&nbsp;</td>
<td valign="TOP">&nbsp;取得したタイムアウト値（秒）を格納する&nbsp;<br>&nbsp;整数変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>レスポンスデータ取得タイムアウト値の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_TransferTimeout</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *timoutp&nbsp;</td>
<td valign="TOP">&nbsp;取得したタイムアウト値（秒）を格納する&nbsp;<br>&nbsp;整数変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>ブロッキングモードの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_BlockingMode</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *blkmodep&nbsp;</td>
<td valign="TOP">&nbsp;取得したモードを格納する整数変数への&nbsp;<br>&nbsp;ポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>トランザクション終了時コールバック関数とユーザ定義引数の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_EndOfTransactionCB</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void **funcp&nbsp;</td>
<td valign="TOP">&nbsp;コールバック関数へのポインタを格納する&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void **uoptp&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ定義引数を格納する変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>チャンク受信時コールバック関数とユーザ定義引数の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ReceiveChunkCB</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void **funcp&nbsp;</td>
<td valign="TOP">&nbsp;コールバック関数へのポインタを格納する&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void **uoptp&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ定義引数を格納する変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>トランザクションハッシュコールバック関数とユーザ定義引数の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_HashCB</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void **funcp&nbsp;</td>
<td valign="TOP">&nbsp;コールバック関数へのポインタを格納する変数へ&nbsp;<br>&nbsp;のポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void **uoptp&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ定義引数を格納する変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>トランザクションハッシュ単位量の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_HashSize</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;unsigned int *sizep&nbsp;</td>
<td valign="TOP">&nbsp;取得したハッシュ単位量（バイト）を格納する整数&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>ノンブロックモード時トランザクション実行スレッドのスタックサイズおよび優先度の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ThreadValue</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *stacksize&nbsp;</td>
<td valign="TOP">&nbsp;取得したスタックサイズを格納する&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *priority&nbsp;</td>
<td valign="TOP">&nbsp;取得した優先度を格納する変数への&nbsp;<br>&nbsp;ポインタ。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>接続保持パラメータの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="top">&nbsp;<b>sceHTTPO_KeepAlive</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;int *timeout&nbsp;</td>
<td valign="top">&nbsp;取得した接続保持時間（秒）を格納する&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;int *maxcount&nbsp;</td>
<td valign="top">&nbsp;取得した最大接続保持回数を格納する&nbsp;<br>&nbsp;変数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;int priority&nbsp;</td>
<td valign="top">&nbsp;優先度（デフォルトは63）&nbsp;</td>
</tr></table>
</div>

<div style="margin-left:40px;"><h4><b>ローカルファイルディスクリプタの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="top">&nbsp;<b>sceHTTPO_LocalFile</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;int *descp&nbsp;</td>
<td valign="top">&nbsp;取得したディスクリプタを格納する整数変数への&nbsp;<br>&nbsp;ポインタ。&nbsp;</td>
</tr></table>
</div>

<div style="margin-left:40px;"><h4><b>ファイルライト関数の取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="top">&nbsp;<b>sceHTTPO_FileWriteFunction</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;void **funcp&nbsp;</td>
<td valign="top">&nbsp;ファイルライト関数へのポインタを格納する変数&nbsp;<br>&nbsp;へのポインタ。&nbsp;</td>
</tr></table>
</div>

<div style="margin-left:40px;"><h4><b>ディフォルトヘッダー制御フラグの取得</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="top">&nbsp;<b>sceHTTPO_DefaultHeaders</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;int *flagsp&nbsp;</td>
<td valign="top">&nbsp;取得したフラグを格納する整数変数へのポインタ。&nbsp;</td>
</tr></table>
</div>
<div style="margin-left:50px;">フラグには次に示すビット定義がある。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>入出力先</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderF_Accept&nbsp;</td>
<td valign="TOP">&nbsp;Accept: */*;q=0.01 を追加 &nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderF_AcceptCharset&nbsp;</td>
<td valign="TOP">&nbsp;Accept-Charset: iso-8859-1;q=0.を追加&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderF_UserAgent&nbsp;</td>
<td valign="TOP">&nbsp;User-Agent ヘッダーを追加 &nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オプション番号は<b>sceHTTPO_KeepAlive</b>はsceHTTPGetOption()のみで使われ、接続保持時間と最大接続保持回数が応答中に明示されていればその値を、明示されていなければプロトコルに従うそれぞれのデフォルト値を取得する。0が返された場合は接続が保持されないだろうということを、-1が返された場合は接続が保持されるが時間や回数は不明であることを意味する。このオプションはいくつかのHTTP/1.0対応クライアント・サーバへの互換性のためにのみ設けられている。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPOption_t">sceHTTPOption_t</a>,<a href="#sceHTTPMethod_t">sceHTTPMethod_t</a>,<a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a>,<br><a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetPostedBytes"><font size=6>sceHTTPGetPostedBytes<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>POST時送信量の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPSize_t <b>sceHTTP GetPostedBytes</b> (
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client</i>　　 HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;正または0&nbsp;</td>
<td valign="TOP">&nbsp;現在のデータ送信量&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">POST メソッドによるHTTPトランザクション中、その時点でのデータ送信量を示す。現在のメソッドが POST メソッドでない場合はエラーになる。型 sceHTTPSize_t は 64-bit 符号つき整数として定義される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPSetOptions">sceHTTPSetOptions</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetResolveError"><font size=6>sceHTTPGetResolveError<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>アドレス解決エラーコードの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPGetResolveError</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ソケットレイヤの返すエラーコード<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPOpen() 関数内部で呼び出されるソケットレイヤのアドレス解決関数が失敗した場合に、ソケットレイヤの返す詳細なエラーコードを取得する。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPOpen() 関数はエラーがあったとき -1を返すが、このときさらにsceHTTPGetClientError()関数の返す値が sceHTTPError_RESOLV であればソケットレイヤのアドレス解決関数が失敗したことを示す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPGetClientError">sceHTTPGetClientError</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetResponse"><font size=6>sceHTTPGetResponse<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTP応答の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPResponse_t *<b>sceHTTPGetResponse</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取得したHTTP応答構造体へのポインタ<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTP応答を保持する構造体へのポインタを返す。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この構造体は HTTP クライアント構造体とともにsceHTTPDestroy()関数で解放される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPResponse_t">sceHTTPResponse_t</a>,<a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetSocketError"><font size=6>sceHTTPGetSocketError<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ソケットエラーコードの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPGetSocketError</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ソケットレイヤの返すエラーコード<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPOpen() および sceHTTPRequest()関数内部で呼び出されるソケットレイヤの関数が失敗した場合に、ソケットレイヤの返す詳細なエラーコードを取得する。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPOpen() および sceHTTPRequest()関数はエラーがあったとき-1を返すが、 このとき sceHTTPGetClientError()関数の返す値がsceHTTPError_IO、sceHTTPError_RESOLV、sceHTTPError_SOCKET、sceHTTPError_CONNECT の場合ソケットレイヤの関数が失敗したことを示す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPGetClientError">sceHTTPGetClientError</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPGetTransferedBytes"><font size=6>sceHTTPGetTransferedBytes<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>転送量の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPSize_t <b>sceHTTPGetTransferedBytes</b> (
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client</i>　　 HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在のデータ転送量<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTPトランザクション中、その時点でのデータ転送量を返す。PUT メソッド実行中は送信量を、それ以外のメソッド実行中は応答時のデータ受信量を示す。型 sceHTTPSize_t は 64-bit 符号つき整数として定義される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPSetOptions">sceHTTPSetOptions</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPInit"><font size=6>sceHTTPInit<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ライブラリの初期化（HTTP用）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPInit</b>(
	<i>void</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;異常終了&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libhttpを初期化する。libhttpの他の関数を使用するより前に呼び出しておく必要がある。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPIsAbsoluteURI"><font size=6>sceHTTPIsAbsoluteURI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>絶対URIかどうかの検査<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPIsAbsoluteURI</b>(
	const char *<i>uri</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>uri</i>&nbsp;</td>
<td valign="TOP">&nbsp;URI文字列&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;絶対URI&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;相対URI&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>uri</i>が絶対URIかどうかを調べる。*<i>uri</i>は不正な形式のURIであってはならない。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterApply"><font size=6>sceHTTPMimeFilterApply<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEフィルタ処理<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPMimeFilterApply</b>(
	sceHTTPMimeFilter_t *<i>p</i>,
	int *<i>closep</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIMEフィルタへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>closep</i>&nbsp;</td>
<td valign="TOP">&nbsp;パート終端状態を設定する変数へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIMEパート本体を処理し、次のパートがあればそれに進む。処理されたパートがマルチパートの最後のパートで引数<i>closep</i>が0でなければ、*<i>closep</i>に非0を返す。<br>このように、*<i>p</i>が下位フィルタでパート終端に出会ったときには、*<i>p</i>はこの関数の中で解放される。この後で*<i>p</i>を参照してはならない。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterChangeOutput"><font size=6>sceHTTPMimeFilterChangeOutput<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEフィルタの出力先変更<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPMimeFilterChangeOutput</b>(
	sceHTTPMimeFilter_t *<i>p,</i>
	int <i>otype</i>,
	void *<i>oarg</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIMEフィルタへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>otype</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力タイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>oarg</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力を表すポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定したMIMEフィルタの出力先を、<i>otype</i>と<i>oarg</i>で指定したように変更する。<br><i>otype</i>と<i>oarg</i>の指定方法はsceHTTPMimeFilterCreate()の解説を参照すること。<br>以前に指定されていた出力先がメモリだった場合、出力先のメモリ領域はライブラリ内部で確保されたものであるので自動的に解放される。一方、以前の出力先がファイルだった場合、そのファイルのクローズは自動的には行われない。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a>,<a href="#sceHTTPMimeFilterCreate">sceHTTPMimeFilterCreate</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterCreate"><font size=6>sceHTTPMimeFilterCreate<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEフィルタの作成<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPMimeFilter_t *<b>sceHTTPMimeFilterCreate</b>(
	int <i>itype</i>,
	void *<i>iarg</i>,
	int <i>ilen</i>,
	int <i>otype</i>,
	void *<i>oarg</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>itype</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力タイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>iarg</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力を表すポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilen</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>otype</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力タイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>oarg</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力を表すポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、作成したMIMEフィルタへのポインタを、エラーの場合、NULLを返す。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">入出力を指定してMIME処理をおこなうフィルタを作成する。<br><br><i>itype</i>および<i>otype</i>には、入出力のタイプを次のいずれかで指定する。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>入出力先</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPMimeFilter_FILE&nbsp;</td>
<td valign="TOP">&nbsp;ファイル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPMimeFilter_STRING&nbsp;</td>
<td valign="TOP">&nbsp;メモリ&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">ファイルを指定するとき（<i>itype</i> / <i>otype</i>がsceHTTPMimeFilter_FILEのとき）、<i>iarg</i> / <i>oarg</i>にはファイルディスクリプタ番号を (void *) へキャストして指定する。ファイルからの入力のとき（<i>itype</i>がsceHTTPMimeFilter_FILEのとき）は、<i>ilen</i>は無視される。<br>メモリからの入力を指定するとき（<i>itype</i>がsceHTTPMimeFilter_STRINGのとき）、<i>iarg</i>には入力となるメモリ上のバイト列、<i>ilen</i>にはその長さを指定する。<br>メモリへの出力を指定するとき（<i>otype</i>がsceHTTPMimeFilter_STRINGのとき）、出力先のメモリ領域はライブラリが自動的に確保するので、sceHTTPMimeFilterGetStringOutput()で結果とその長さを取得する（出力結果のバイト列は0終端されていない）。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a>,<a href="#sceHTTPMimeFilterGetStringOutput">sceHTTPMimeFilterGetStringOutput</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterFree"><font size=6>sceHTTPMimeFilterFree<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEフィルタの解放<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPMimeFilterFree</b>(
	sceHTTPMimeFilter_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIMEフィルタへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定したMIMEフィルタを解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterGetHeaderList"><font size=6>sceHTTPMimeFilterGetHeaderList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEヘッダーの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPHeaderList_t *<b>sceHTTPMimeFilterGetHeaderList</b>(
	sceHTTPMimeFilter_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　　</i>MIMEフィルタへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;ヘッダーリストへのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPMimeFilterParseHeaders()で解析したMIMEパートのヘッダーを、ヘッダーリストとして返す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a>,<a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a>,<a href="#sceHTTPMimeFilterParseHeaders">sceHTTPMimeFilterParseHeaders</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterGetMultipartType"><font size=6>sceHTTPMimeFilterGetMultipartType<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEマルチパートタイプの問い合わせ<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPMimeFilterGetMultipartType</b>(
	sceHTTPMimeFilter_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　　</i>MIME フィルタへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;マルチパートではない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;それ以外&nbsp;</td>
<td valign="TOP">&nbsp;マルチパートのタイプを表す整数値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">処理対象のパートがマルチパートでないなら0を、マルチパートならそのタイプを返す。<br>マルチパートのタイプは、そのパートのContent-Typeヘッダーに含まれるMultipart/タイプ文字列によって決まるが、それを表す次の定数が定義されている。<br><br></div>
<div style="margin-left:70px;">sceHTTPMultipart_MIXED<br>sceHTTPMultipart_BYTERANGES<br>sceHTTPMultipart_ALTERNATIVE<br></div>
<div style="margin-left:50px;"><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterGetStringOutput"><font size=6>sceHTTPMimeFilterGetStringOutput<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEのメモリ出力の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPMimeFilterGetStringOutput</b>(
	sceHTTPMimeFilter_t *<i>p</i>
	char **<i>odatap</i>,
	int *<i>olenp</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIMEフィルタへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>odatap</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力の先頭番地を格納する変数へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>olenp</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力のバイト数を格納する変数へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIMEフィルタ*<i>p</i>の出力先がメモリであるとき、その先頭番地と長さを<i>odatap</i>と<i>olenp</i>で指定した変数に返す。<br>*<i>odatap</i>で返されたメモリ領域（MIMEフィルタが出力したバイト列）はsceHTTPMimeFilterFree()では解放されないので、ユーザがfree()関数を用いて解放する必要がある。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a>,<a href="#sceHTTPMimeFilterCreate">sceHTTPMimeFilterCreate</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMimeFilterParseHeaders"><font size=6>sceHTTPMimeFilterParseHeaders<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIMEヘッダーの解析<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPMimeFilterParseHeaders</b>(
	sceHTTPMimeFilter_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　　</i>MIMEフィルタへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で指定されたMIMEフィルタで、現在のレベルのMIMEパートのヘッダーを解析する。マルチパートを示すContent-Typeヘッダーを発見した場合は、各パートを処理するための新しいMIMEフィルタを、現在のフィルタの下位フィルタとして内部的に生成する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPMimeFilter_t">sceHTTPMimeFilter_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPNextHeader"><font size=6>sceHTTPNextHeader<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ヘッダーリストの次の要素の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPHeaderList_t *<b>sceHTTPNextHeader</b>(
	sceHTTPHeaderList_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p　　</i>ヘッダーリスト<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;次の要素へのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;次の要素がない時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッダーリスト上の次要素へのポインタを返す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPOpen"><font size=6>sceHTTPOpen<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPコネクションのオープン<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPOpen</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>オープンしたいHTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サーバとのHTTPコネクションを確立する。この関数を呼び出す前にsceHTTPSetOption()を用いて、サーバまたはプロクシの解析済URLを設定する必要がある。<br>この関数はブロックする可能性がある。<br>この関数は内部的にスレッドを作成する。 このスレッドのスタック サイズとスレッド優先度は sceHTTPO_ThreadValue オプションを用いてsceHTTPGetOption(), sceHTTPSetOption() 関数で取得や設定を行うことができる。このスレッドはこの関数の終了で解放される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPSetOption">sceHTTPSetOption</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPParseAuth"><font size=6>sceHTTPParseAuth<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>応答中の認証チャレンジの解析<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPAuthList_t *<b>sceHTTPParseAuth</b>(
	sceHTTPResponse_t *<i>rp</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>rp</i>　　HTTP応答を表す構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;認証チャレンジリストへのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>rp</i>中にあるWWW-Authenticateヘッダーをすべて解析し、認証チャレンジのリストとして返す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPAuthList_t">sceHTTPAuthList_t</a>,<a href="#sceHTTPResponse_t">sceHTTPResponse_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPParseAuthInfo"><font size=6>sceHTTPParseAuthInfo<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>応答中の認証確認情報の解析<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPAuthInfo_t *<b>sceHTTPParseAuthInfo</b>(
	sceHTTPclient_t *<i>client,</i>
	sceHTTPResponse_t *<i>rp</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTPクライアントオブジェクトへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>rp</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP応答を表す構造体へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;認証確認情報構造体へのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>rp</i>中にあるAuthentication-Infoヘッダーを解析して認証確認情報構造体を生成し、それへのポインタを返す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPAuthInfo_t">sceHTTPAuthInfo_t</a>,<a href="#sceHTTPResponse_t">sceHTTPResponse_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPParseCookie"><font size=6>sceHTTPParseCookie<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>応答中のクッキーの解析<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPCookieList_t *<b>sceHTTPParseCookie</b>(
	sceHTTPResponse_t *<i>rp</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>rp</i>　　HTTP応答を表す構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;クッキーリストへのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>rp</i>中にあるSet-Cookieヘッダーをすべて解析し、クッキーリストとして返す。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPCookieList_t">sceHTTPCookieList_t</a>,<a href="#sceHTTPResponse_t">sceHTTPResponse_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPParseLocations"><font size=6>sceHTTPParseLocations<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>応答中のリダイレクトロケーションの解析<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const char **<b>sceHTTPParseLocations</b>(
	sceHTTPResponse_t *<i>rp</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>rp</i>　　HTTP応答を表す構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;URI文字列の配列&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>rp</i>中にあるLocationヘッダーをすべて解析し、URI文字列の配列として返す。配列の終りは要素NULLによって示される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPResponse_t">sceHTTPResponse_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPParseURI"><font size=6>sceHTTPParseURI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>URIの解析<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceHTTPParsedURI_t *<b>sceHTTPParseURI</b>(
	const char *<i>uri</i>,
	int <i>pflag</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>uri</i>&nbsp;</td>
<td valign="TOP">&nbsp;URIを表す文字列&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pflag</i>&nbsp;</td>
<td valign="TOP">&nbsp;解析オプションフラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、解析済URI構造体へのポインタを、エラーの場合、NULLを返す。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>*uri</i>を解析してスキーム / ホスト名 / ポート番号 / ファイルパス / サーチパート等に分解し、解析済URIを表す構造体に格納してこの構造体へのポインタを返す。<br>この構造体の解放はsceHTTPFreeURI()を用いて行う必要がある。<br><i>pflag</i>は解析時のオプションを表すフラグで、次の定数が現在定義されている。必要に応じてビット論理和を用いて指定する。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPParseURI_FILENAME&nbsp;</td>
<td valign="TOP">&nbsp;ファイルパスも解析&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPParseURI_SEARCHPART&nbsp;</td>
<td valign="TOP">&nbsp;サーチパートも解析&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">スキーム / ホスト名 / ポート番号は必ず解析される。ポート番号が<i>*uri</i>に含まれないとき80となる。なおスキームを表す定数として、sceHTTPProt_HTTPが定義されている。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPRequest"><font size=6>sceHTTPRequest<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPトランザクションの実行<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPRequest</b>(
	sceHTTPClient_t *<i>client</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>client　　</i>HTTPクライアントオブジェクトへのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サーバとのHTTPトランザクションを実行する。<br>この関数の呼び出し以前に関数sceHTTPOpen()によってサーバまたはプロクシとのHTTPコネクションが確立している必要がある。<br>この関数はオプション設定によりブロッキングモードまたはノンブロッキングモードで実行される（デフォルトはブロッキングモード。sceHTTPSetOption()を参照のこと）。ブロッキングモードではHTTPトランザクションが終了するまでこの関数から戻らない。ノンブロッキングモードではこの関数はすぐに呼び出し側に復帰し、ユーザが設定するコールバック関数がトランザクション終了時に呼び出される。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">上記のコールバック関数は整数引数を持ち、トランザクションが正常終了したときは0、エラー時は-1が引数として与えられる。<br>ノンブロッキングモードで sceHTTPResponse() 関数の呼び出しが成功した場合で内部的にスレッドが作成される。 このスレッドのスタック サイズとスレッド優先度は sceHTTPO_ThreadValue オプションを用いてsceHTTPGetOption(), sceHTTPSetOption() 関数で取得や設定を行うことができる。この内部的に作成されたスレッドは次のsceHTTPResponse() 関数呼び出しまたは sceHTTPDestroy() 関数で解放される。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPSetOption">sceHTTPSetOption</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPSetBasicAuth"><font size=6>sceHTTPSetBasicAuth<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ベーシック認証の設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPSetBasicAuth</b>(
	sceHTTPClient_t *<i>client</i>,
	const char *<i>user</i>,
	const char *<i>passwd</i>
	int *<i>proxy</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTPトランザクションを行うための構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>user</i>&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ名へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>passwd</i>&nbsp;</td>
<td valign="TOP">&nbsp;パスワードへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>proxy</i>&nbsp;</td>
<td valign="TOP">&nbsp;Proxy-Authorizationヘッダー生成を要求するフラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>user</i>と<i>passwd</i>で指定されたユーザ名とパスワードを、ベーシック型のAuthorizationヘッダーに変換して*<i>client</i>の要求ヘッダーリストに追加する。<br><i>user</i>と<i>passwd</i>で指定される文字列は複製して使われるためこの関数の呼出し後は保持する必要はない。proxy 引数が 0 でないときはAuthorizationヘッダーでなくProxy-Authorizationヘッダーを生成する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPSetCookie"><font size=6>sceHTTPSetCookie<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>クッキー設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPSetCookie</b>(
	sceHTTPClient_t *<i>client</i>,
	sceHTTPCookieList_t *<i>p</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTPクライアント構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;クッキーリストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>p</i>で与えられたクッキーリストを、Cookieヘッダーに変換して*<i>client</i>の要求ヘッダーリストに追加する。<br><i>p</i>で与えられたクッキーリストやその要素は複製されて使われるため、この関数の呼び出し後は保持する必要はない。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceHTTPSetCookie() 関数では与えられたクッキーリストについてパス名、ドメイン名、有効期限などの最低限のチェックしか行わない。sceHTTPParseCookie() 関数で取得したクッキーリストをそのままsceHTTPSetCookie() 関数の引数とすると、セキュリティやプライバシー上の問題を引き起こす可能性があるため、必要なクッキーの正当性チェックはアプリケーション側で行わなければならない。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPCookieList_t">sceHTTPCookieList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPSetDigestAuth"><font size=6>sceHTTPSetDigestAuth<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ダイジェスト認証の設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPSetDigestAuth</b>(
	sceHTTPClient_t *<i>client</i>,
	sceHTTPDigest_t *<i>digest</i>
	int *<i>proxy</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTPトランザクションを行うための構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>digest</i>&nbsp;</td>
<td valign="TOP">&nbsp;ダイジェスト要求構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>proxy</i>&nbsp;</td>
<td valign="TOP">&nbsp;Proxy-Authorizationヘッダー生成を要求するフラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>digest</i>をダイジェスト型のAuthorizationヘッダーに変換して、*<i>client</i>の要求ヘッダーリストに追加する。<i>proxy</i> 引数が 0 でないときはAuthorizationヘッダーでなくProxy-Authorizationヘッダーを生成する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPDigest_t">sceHTTPDigest_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPSetOption"><font size=6>sceHTTPSetOption<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPオプションの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPSetOption</b>(
	sceHTTPClient_t *<i>client</i>,
	sceHTTPOption_t <i>opt</i>,
	<i>...</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTP クライアントオブジェクトへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;オプション番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>...</i>&nbsp;</td>
<td valign="TOP">&nbsp;オプション番号によって定まる個数の追加引数がある&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTPトランザクションでのさまざまなオプションを設定する。<br><i>opt</i>に設定したいオプションを表すsceHTTPOption_t型のenum値を指定し、設定内容をそれぞれに応じた追加引数で指定する。<br>たとえばリクエストデータとデータ長を設定する場合、<i>opt</i>にsceHTTPO_RequestEntityを指定し、追加引数は3つあるので次のような形で呼び出すことになる。<br><br></div>
        <div style="margin-left:93px;"><pre><font size=3>char *data;
int length;

sceHTTPSetOption(client, sceHTTPO_RequestEntity, data, length, 0);

</pre></font></div>
<div style="margin-left:50px;"><i>opt</i>に指定する値とそれに応じた追加引数は次のとおり。<br></div>

<div style="margin-left:40px;"><h4><b>ユーザエージェント名の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ClientName</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;char *name&nbsp;</td>
<td valign="TOP">&nbsp;ユーザエージェント名へのポインタ。&nbsp;<br>&nbsp;デフォルト値は"unknown &nbsp;<br>&nbsp;(sceHTTPLib-　X.X.X)"で、X.X.Xには&nbsp;<br>&nbsp;バージョン番号が入る。サンプルとして&nbsp;<br>&nbsp;設定してある値なので、タイトルアプリ&nbsp;<br>&nbsp;ケーションでは適切な名称に変えて&nbsp;<br>&nbsp;使用すること。&nbsp;<br>&nbsp;nameに指定した文字列は複製されて使用&nbsp;<br>&nbsp;されるので呼び出し後は保持する必要はない。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>HTTPリビジョンの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_HTTPRevision</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int revision&nbsp;</td>
<td valign="TOP">&nbsp;HTTPリビジョン&nbsp;<br>&nbsp;0または1を指定する。デフォルトは0。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>HTTPメソッドの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_Method</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPMethod_t method&nbsp;<br>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;HTTPメソッド定数。&nbsp;<br>&nbsp;詳細はsceHTTPMethod_tの&nbsp;<br>&nbsp;解説を参照のこと。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>解析済URIの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ParsedURI</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPParsedURI_t *uri&nbsp;</td>
<td valign="TOP">&nbsp;解析済URIへのポインタ&nbsp;<br>&nbsp;*uriは複製されて使用されるので&nbsp;<br>&nbsp;呼び出し後は保持する必要がない。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>解析済プロキシURIの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ProxyURI</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPParsedURI_t *proxy&nbsp;</td>
<td valign="TOP">&nbsp;解析済プロキシURIへのポインタ&nbsp;<br>&nbsp;*proxyは複製されて使用されるので&nbsp;<br>&nbsp;呼び出し後は保持する必要がない。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>要求ヘッダーリストの（追加）設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_RequestHeaders</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderList_t *hd&nbsp;</td>
<td valign="TOP">&nbsp;要求ヘッダーリストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int mode&nbsp;</td>
<td valign="TOP">&nbsp;上書きするかどうか&nbsp;<br>&nbsp;　0：追加&nbsp;<br>&nbsp;　1：上書き(古いヘッダーリストは消去・&nbsp;<br>&nbsp;　解放される)&nbsp;<br>&nbsp;  2：要求ヘッダーリスト内に追加&nbsp;<br>&nbsp;ヘッダーリスト内のヘッダと同一&nbsp;<br>&nbsp; name のヘッダーがあれば削除し、追加&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>要求ヘッダーリストからの削除</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_DelRequestHeader</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;char *name&nbsp;</td>
<td valign="TOP">&nbsp;要求ヘッダーリストから削除したい&nbsp;<br>&nbsp;ヘッダーの名前部分。この引数で指定した&nbsp;<br>&nbsp;名前と一致するヘッダーは全て削除される。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>リクエストデータおよびそのバイト長の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_RequestEntity</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;char *data&nbsp;</td>
<td valign="TOP">&nbsp;リクエストデータへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;unsigned int length&nbsp;</td>
<td valign="TOP">&nbsp;リクエストデータ長&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int flags&nbsp;</td>
<td valign="TOP">&nbsp;フラグ&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">フラグには次に示すビット定義がある。この2つのフラグを同時に設定することはできない。また flags が 0 の場合には与えられたリクエストデータは複製されて使われる。複製およびURLエンコード後のデータは次のリクエストデータの設定時または sceHTTPDestroy()関数呼び出し時に解放される。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPInputF_ESCAPE&nbsp;</td>
<td valign="TOP">&nbsp;与えられたリクエストデータをURLエンコードして&nbsp;<br>&nbsp;から設定する。データ長もエンコード後の長さが&nbsp;<br>&nbsp;設定される。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPInputF_LINK&nbsp;</td>
<td valign="TOP">&nbsp;与えられたリクエストデータは複製されず&nbsp;<br>&nbsp;そのままリンクされて使われる。&nbsp;</td>
</tr>
</table>
</div>
<br>

<div style="margin-left:40px;"><h4><b>オープン時接続タイムアウト値の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_OpenTimeout</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int *timoutp&nbsp;</td>
<td valign="TOP">&nbsp;タイムアウト値（秒）。&nbsp;<br>&nbsp;デフォルトは無限大。&nbsp;</td>
</tr>
</table>
</div>
<div style="margin-left:50px;">sceHTTPOpen()関数での接続タイムアウト設定を行う。sceHTTPOpen()関数呼び出し時接続に先だってサーバまたはプロクシサーバの名前解決が行われる場合には指定時間でのタイムアウトが起きないことがある。<br></div>

<div style="margin-left:40px;"><h4><b>レスポンスヘッダー取得タイムアウトの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ResponseTimeout</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int timout&nbsp;</td>
<td valign="TOP">&nbsp;タイムアウト値（秒）。&nbsp;<br>&nbsp;デフォルトは無限大。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>レスポンスデータ取得タイムアウトの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_TransferTimeout</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int timout&nbsp;</td>
<td valign="TOP">&nbsp;タイムアウト値（秒）。&nbsp;<br>&nbsp;デフォルトは無限大。&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>ブロッキングモードの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_BlockingMode</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int blkmode&nbsp;</td>
<td valign="TOP">&nbsp;ブロッキングモード&nbsp;<br>&nbsp;　0: ノンブロッキングモード&nbsp;<br>&nbsp;　1: ブロッキングモード（デフォルト）&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>トランザクション終了時コールバック関数とユーザ設定引数の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_EndOfTransactionCB</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void (*func)(sceHTTPClient_t &nbsp;<br>&nbsp;*client, int flags, void *uopt)&nbsp;</td>
<td valign="TOP">&nbsp;トランザクション終了時コールバック&nbsp;<br>&nbsp;関数へのポインタ。コールバック関数&nbsp;<br>&nbsp;への引数flagsは、トランザクションが&nbsp;<br>&nbsp;正常終了したときは0、エラー時は-1となる。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void *uopt&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ定義引数&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>チャンク受信時コールバック関数とユーザ定義引数の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ReceiveChunkCB</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void (*func)(sceHTTPClient_t *client, &nbsp;<br>&nbsp;char *cdata, int clen, void *uopt)&nbsp;</td>
<td valign="TOP">&nbsp;チャンク受信時コールバック&nbsp;<br>&nbsp;関数へのポインタ。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void *uopt&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ定義引数&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>トランザクションハッシュコールバック関数とユーザ定義引数の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_HashCB</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void (*func)(sceHTTPClient_t *client, &nbsp;<br>&nbsp;sceHTTPSize_t length, void *uopt)&nbsp;</td>
<td valign="TOP">&nbsp;ハッシュコールバック関数へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void *uopt&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ定義引数&nbsp;</td>
</tr>
</table>
</div>
<div style="margin-left:50px;">型 sceHTTPSize_t は 64-bit 符号つき整数として定義される。<br><br>トランザクションハッシュコールバック関数の設定が行われていればトランザクション中、コンテンツ部の受信バイト数が設定されているトランザクションハッシュ単位量の倍数以上になるたびにこの関数がコールバックされる。 呼び出しされたとき、第二引数はその時点でのコンテンツ受信バイト数を示す。 この関数はコンテンツ部に先行するレスポンスヘッダー部を受信した直後にも第二引数を 0 として呼び出されるので、最初のトランザクションハッシュコールバック関数の呼び出しでレスポンスヘッダー部の受信終了を知ることができる。<br><br></div>

<div style="margin-left:40px;"><h4><b>トランザクションハッシュ単位量の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_HashSize</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;Unsigned int sizep&nbsp;</td>
<td valign="TOP">&nbsp;ハッシュ単位量（バイト）&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>ノンブロックモード時トランザクション実行スレッドのスタックサイズおよび優先度の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_ThreadValue</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int stacksize&nbsp;</td>
<td valign="TOP">&nbsp;スタックサイズ（デフォルトは8192）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int priority&nbsp;</td>
<td valign="TOP">&nbsp;優先度（デフォルトは63）&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>ローカルファイルディスクリプタの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_LocalFile</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;int desc&nbsp;</td>
<td valign="TOP">&nbsp;ローカルファイルディスクリプタ&nbsp;<br>&nbsp;(デフォルトは-1、つまりメモリへの書き出し)&nbsp;</td>
</tr>
</table>
</div>
<div style="margin-left:50px;">ローカルファイルディスクリプタの値を -1 に設定するとファイルへの書き出しではなくディフォルトのメモリへの書き出し動作となる。またチャンク受信コールバック関数を設定していてチャンク受信が行われる場合はローカルファイルディスクリプタの設定は無効となる。<br></div>

<div style="margin-left:40px;"><h4><b>ファイルライト関数の設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="TOP">&nbsp;<b>sceHTTPO_FileWriteFunction</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;void *func&nbsp;</td>
<td valign="TOP">&nbsp;ファイルライト関数&nbsp;<br>&nbsp;（デフォルトはsceWrite()）&nbsp;</td>
</tr>
</table>
</div>

<div style="margin-left:40px;"><h4><b>ディフォルトヘッダー制御フラグの設定</b><br></h4></div>

<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>opt</i>&nbsp;</td>
<td valign="top">&nbsp;<b>sceHTTPO_DefaultHeaders</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;int flags&nbsp;</td>
<td valign="top">&nbsp;フラグ&nbsp;</td>
</tr></table>
</div>
<div style="margin-left:50px;">フラグには次に示すビット定義があり、複数のデフォルトヘッダーを有効としたい場合はこれらの定数のビットOR を用いる。 flagsが 0 の場合はデフォルトヘッダーは抑制される。 フラグの初期値では全てのデフォルトヘッダーが有効となっている。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>入出力先</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderF_Accept&nbsp;</td>
<td valign="TOP">&nbsp;Accept: */*;q=0.01 を追加 &nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderF_AcceptCharset&nbsp;</td>
<td valign="TOP">&nbsp;Accept-Charset: iso-8859-1;q=0.を追加&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPHeaderF_UserAgent&nbsp;</td>
<td valign="TOP">&nbsp;User-Agent ヘッダーを追加 &nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPOption_t">sceHTTPOption_t</a>,<a href="#sceHTTPMethod_t">sceHTTPMethod_t</a>,<a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a>,<br><a href="#sceHTTPHeaderList_t">sceHTTPHeaderList_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPSetRedirection"><font size=6>sceHTTPSetRedirection<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>リダイレクションの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPSetRedirection</b>(
	sceHTTPClient_t *<i>client</i>,
	sceHTTPParsedURI_t *<i>uri</i>,
	int <i>proxy</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTPトランザクションを行うための構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>uri</i>&nbsp;</td>
<td valign="TOP">&nbsp;リダイレクトの行先を示す解析済URI&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>proxy</i>&nbsp;</td>
<td valign="TOP">&nbsp;プロクシのリダイレクトを示すフラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リダイレクションによるHTTPトランザクションを行うために必要な処理を行う。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPTerminate"><font size=6>sceHTTPTerminate<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ライブラリの終了処理（HTTP用）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHTTPTerminate</b>(
	<i>void</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp; 0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;異常終了&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libhttpの使用を終了する。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPUnparseURI"><font size=6>sceHTTPUnparseURI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>解析済URIからURI文字列を作成<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>char *<b>sceHTTPUnparseURI</b>(
	sceHTTPParsedURI_t *<i>puri</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>puri</i>　　解析済URI構造体へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;URI文字列&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">*<i>puri</i>の内容を表すURI文字列を作成する。このURI文字列はライブラリ内部で malloc()関数により確保されるので不必要になった時点で free()関数で解放する。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPParsedURI_t">sceHTTPParsedURI_t</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPVerifyAuthInfo"><font size=6>sceHTTPVerifyAuthInfo<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>認証確認情報の検証<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>char *<b> sceHTTPVerifyAuthInfo</b>(
	sceHTTPClient_t *<i>client</i>,
	sceHTTPAuthInfo_t *<i>ip</i>,
	sceHTTPDigest_t *<i>dp</i>,
	int <i>flags</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>client</i>&nbsp;</td>
<td valign="TOP">&nbsp;HTTPトランザクションを行うための構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ip</i>&nbsp;</td>
<td valign="TOP">&nbsp;認証確認情報構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dp</i>&nbsp;</td>
<td valign="TOP">&nbsp;ダイジェスト要求構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>flags</i>&nbsp;</td>
<td valign="TOP">&nbsp;検証動作フラグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;検証成功&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;検証失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ダイジェスト認証時に sceHTTPParseAuthInfo() 関数で取得できた認証確認情報の検証を行う。<i>flags</i>は検証時のオプションを表すフラグで、次の定数が現在定義されている。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>マクロ定数</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceHTTPVerifyAuthInfo_NORSPAUTH&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;MD5による検証をしない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPAuthInfo_t">sceHTTPAuthInfo_t</a>,<a href="#sceHTTPDigest_t">sceHTTPDigest_t</a>,<a href="#sceHTTPParseAuthInfo">sceHTTPParseAuthInfo</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceQPrintableEncoder"><font size=6>sceQPrintableEncoder<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>quoted-printableエンコード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceQPrintableEncoder</b>(
	unsigned const char *<i>in</i>,
	unsigned char *<i>out</i>,
	int <i>ilen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>in</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>out</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilen</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力の長さ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力バイト数<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>と<i>ilen</i>とで指定された入力バイト列をQPrintableエンコードして、<i>out</i>で指定されたメモリ領域へ出力する。<br>出力用のメモリ領域は、<i>ilen</i> * 3 + <i>ilen</i> / 38 + 2 以上の大きさがなければならない。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceQPrintableLineDecoder"><font size=6>sceQPrintableLineDecoder<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>quoted-printable行デコード<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceQPrintableLineDecoder</b>(
	unsigned const char *<i>in</i>,
	unsigned char *<i>out</i>,
	int <i>ilen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>in</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>out</i>&nbsp;</td>
<td valign="TOP">&nbsp;出力バイト列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ilen</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力の長さ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;出力バイト数&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>と<i>ilen</i>とで指定された入力バイト列（quoted-printableエンコードされたデータの1行分）をデコードして、<i>out</i>で指定されたメモリ領域へ出力する。入力バイト列は、終端のRFC822 改行（CRとLFの連続）を含めて長さが78かそれ以下でなければならない。<i>ilen</i>にこれ以上の値を設定しても無視される。出力用のメモリ領域は78バイト以上の大きさがなければならない。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceURLEscape"><font size=6>sceURLEscape<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>URLエスケープ処理<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>char *<b>sceURLEscape</b>(
	unsigned const char *<i>in</i>,
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>　　文字列へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;文字列へのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>で指定された文字列に対してURLエスケープ処理を行い、結果を新しい文字列として返す。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceURLUnescape"><font size=6>sceURLUnescape<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>URLアンエスケープ処理<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>char *<b>sceURLUnescape</b>(
	unsigned const char *<i>in</i>,
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み許可状態で呼ぶこと）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in　　</i>文字列へのポインタ<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;文字列へのポインタ&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;NULL&nbsp;</td>
<td valign="TOP">&nbsp;エラー時&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>in</i>で指定された文字列に対してURLアンエスケープ処理を行い、結果を新しい文字列として返す。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>大域変数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPLibVersion"><font size=6>sceHTTPLibVersion<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ライブラリのバージョン<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const char *<b>sceHTTPLibVersion</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">静的に与えられたlibhttpのバージョン文字列を保持する変数。<br>バージョン文字列は"1.1.0"のように、3つの十進数をピリオドで連結した形式になっている。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>定数定義</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPMethod_t"><font size=6>sceHTTPMethod_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPメソッド定数<br></div>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef enum {
	sceHTTPM_OPTIONS,
	sceHTTPM_GET,
	sceHTTPM_HEAD,
	sceHTTPM_POST,
	sceHTTPM_PUT,
	sceHTTPM_DELETE,
	sceHTTPM_TRACE,
	sceHTTPM_CONNECT
} <b>sceHTTPMethod_t</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTP 1.1 コマンドを表す定数。<br>現在libhttpではsceHTTPM_GET, sceHTTPM_HEAD, sceHTTPM_POSTをサポートしている。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPClient_t">sceHTTPClient_t</a>,<a href="#sceHTTPSetOption">sceHTTPSetOption</a>()<a href="#"></a>,<a href="#sceHTTPGetOption">sceHTTPGetOption</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPOption_t"><font size=6>sceHTTPOption_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTPオプション定数<br></div>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef enum {
	sceHTTPO_ClientName,
	sceHTTPO_HTTPRevision,
	sceHTTPO_Method,
	sceHTTPO_ParsedURI,
	sceHTTPO_ProxyURI,
	sceHTTPO_RequestHeaders,
	sceHTTPO_RequestEntity,
	sceHTTPO_ResponseTimeout,
	sceHTTPO_TransferTimeout,
	sceHTTPO_BlockingMode,
	sceHTTPO_EndOfTransactionCB,
	sceHTTPO_ReceiveChunkCB,
	sceHTTPO_ThreadValue,
	sceHTTPO_KeepAlive,
	sceHTTPO_SSLFlags,
	sceHTTPO_HashCB,
	sceHTTPO_HashSize,
	sceHTTPO_LocalFile,
	sceHTTPO_FileWriteFunction,
	sceHTTPO_DelRequestHeader,
	sceHTTPO_DefaultHeaders,
	sceHTTPO_OpenTimeout,
} <b>sceHTTPOption_t</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">secHTTPGetOption(), secHTTPSetOption()で使われるオプションを表す定数。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#secHTTPGetOption">secHTTPGetOption</a>()<a href="#"></a>,<a href="#secHTTPSetOption">secHTTPSetOption</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceHTTPStatusCode_t"><font size=6>sceHTTPStatusCode_t<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>HTTP1.1応答ステータス<br></div>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef enum {
	sceHTTPC_Continue		= 100,
	sceHTTPC_SwitchProtocols	= 101,
	sceHTTPC_OK			= 200,
	sceHTTPC_Created		= 201,
	sceHTTPC_Accepted		= 202,
	sceHTTPC_NonAuthoritativeInfo	= 203,
	sceHTTPC_NoContent		= 204,
	sceHTTPC_ResetContent		= 205,
	sceHTTPC_PartialContent  	= 206,
	sceHTTPC_MultipleChoices	= 300,
	sceHTTPC_MovedPermanentry	= 301,
	sceHTTPC_Found			= 302,
	sceHTTPC_SeeOther		= 303,
	sceHTTPC_NotModified		= 304,
	sceHTTPC_UseProxy		= 305,
	sceHTTPC_TemporaryRedirect	= 307,
	sceHTTPC_BadRequest		= 400,
	sceHTTPC_Unauthorized		= 401,
	sceHTTPC_PaymentRequired	= 402,
	sceHTTPC_Forbidden      	= 403,
	sceHTTPC_NotFound		= 404,
	sceHTTPC_MethodNotAllowed	= 405,
	sceHTTPC_NotAcceptable  	= 406,
	sceHTTPC_ProxyAuthenticationRequired	= 407,
	sceHTTPC_RequestTimeout   	= 408,
	sceHTTPC_Conflict		= 409,
	sceHTTPC_Gone			= 410,
	sceHTTPC_LengthRequired   	= 411,
	sceHTTPC_PreconditionFailed	= 412,
	sceHTTPC_RequestEntityTooLarge	= 413,
	sceHTTPC_RequestURITooLarge	= 414,
	sceHTTPC_UnsupportedMediaType	= 415,
	sceHTTPC_RequestedRangeNotSatisfiable	= 416,
	sceHTTPC_ExceptionFailed	= 417,
	sceHTTPC_InternalServerError 	= 500,
	sceHTTPC_NotImplemented   	= 501,
	sceHTTPC_BadGateway		= 502,
	sceHTTPC_ServiceUnavailable	= 503,
	sceHTTPC_GatewayTimeout   	= 504,
	sceHTTPC_HTTPVersionNotSupported	= 505
} <b>sceHTTPStatusCode_t</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">HTTP 1.1 応答ステータスを表す定数。値はRFC2616で規定されている。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceHTTPResponse_t">sceHTTPResponse_t</a>,<a href="#sceHTTPErrorString">sceHTTPErrorString</a>()<br><br><br><br></div>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
