<html lang="ja">
<!-- 見出し　１，部見出し -->
<head>

<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<script language="JavaScript">
<!--
  function lj(ch,fm)
  {
    if ( parent.index ) {
      if ( ch == "libref" ){ parent.index.location.href="../libref/category.htm"; }
      else if ( ch == "../ee/libref" ){ parent.index.location.href="../../ee/libref/category.htm"; }
      else if ( ch == "../iop/libref" ){ parent.index.location.href="../../iop/libref/category.htm"; }
      else if ( ch == "../iop/overview" ){ parent.index.location.href="../../iop/overview/category.htm"; }
      else if ( ch == "../ee/overview" ){ parent.index.location.href="../../ee/overview/category.htm"; }
      else if ( ch == "overview" ){ parent.index.location.href="../overview/category.htm"; }
    }
    if ( parent.main ) {
      if ( fm != "" ){ parent.main.location.href=fm; }
    } else {
      if ( fm != "" ){ location.href=fm; }
    }
  }
//-->
</script>
<title>ATOKライブラリ(β版)</title>
<meta http-equiv="Content-Type"content= text/html; charset=UTF-8 >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
<tr><td align= right >
<script language="JavaScript">
<!--
   var p,q;
   if ( parent.index ) {
   p = parent.index.location;
   q = p.toString();
   result = q.match(/\/category\.htm/gi);
   if(result == "/category.htm"){
          document.writeln("<a href=\"JavaScript:lj('overview','../overview/libatok.htm')\"><img src=\"./gif/arrow.png\" border=0>ライブラリ概要</a>");
    }
}
// -->
</script>
</td></tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
ATOKライブラリ(β版)
</h1></center>
</a>
<font size=4><b>構造体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokConfig"> sceAtokConfig<br></a></td>
<td>&nbsp;</td><td>ATOK設定構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokContext"> sceAtokContext<br></a></td>
<td>&nbsp;</td><td>ATOKエンジン用コンテキスト<br></td></tr>
</table><br>
<font size=4><b>関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokConvAll"> sceAtokConvAll<br></a></td>
<td>&nbsp;</td><td>変換処理（一括読み変換）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokEditConv"> sceAtokEditConv<br></a></td>
<td>&nbsp;</td><td>編集・変換処理<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokExit"> sceAtokExit<br></a></td>
<td>&nbsp;</td><td>ATOKライブラリの終了<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokFlushConverted"> sceAtokFlushConverted<br></a></td>
<td>&nbsp;</td><td>ATOKの確定文字列と確定読み文字列をクリアする<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetCandidateCount"> sceAtokGetCandidateCount<br></a></td>
<td>&nbsp;</td><td>変換候補の数を取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetCandidateList"> sceAtokGetCandidateList<br></a></td>
<td>&nbsp;</td><td>かな漢字変換候補リストの文字列の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetCandidateListSize"> sceAtokGetCandidateListSize<br></a></td>
<td>&nbsp;</td><td>かな漢字変換候補リストのサイズの取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConfig"> sceAtokGetConfig<br></a></td>
<td>&nbsp;</td><td>ATOKの各種設定の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConvertedReadStr"> sceAtokGetConvertedReadStr<br></a></td>
<td>&nbsp;</td><td>確定読み文字列をバッファに受け取る<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConvertedStr"> sceAtokGetConvertedStr<br></a></td>
<td>&nbsp;</td><td>確定文字列をバッファに受け取る<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConvertingClause"> sceAtokGetConvertingClause<br></a></td>
<td>&nbsp;</td><td>未確定文字列（変換中文字列）を文節ごとに取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConvertingClauseCount"> sceAtokGetConvertingClauseCount<br></a></td>
<td>&nbsp;</td><td>未確定文字列（変換中文字列）の文節数を取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConvertingReadStr"> sceAtokGetConvertingReadStr<br></a></td>
<td>&nbsp;</td><td>未確定読み文字列をバッファに受け取る<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetConvertingStr"> sceAtokGetConvertingStr<br></a></td>
<td>&nbsp;</td><td>未確定文字列（変換中文字列）をバッファに受け取る<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetCurrentCandidateIndex"> sceAtokGetCurrentCandidateIndex<br></a></td>
<td>&nbsp;</td><td>かな漢字変換候補の現在の選択候補番号取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetFocusClauseIndex"> sceAtokGetFocusClauseIndex<br></a></td>
<td>&nbsp;</td><td>注目文節（変換しようとしている文節）番号を得る<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetFocusClauseLen"> sceAtokGetFocusClauseLen<br></a></td>
<td>&nbsp;</td><td>注目文節（変換しようとしている文節）のバイト数の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetFocusClauseTop"> sceAtokGetFocusClauseTop<br></a></td>
<td>&nbsp;</td><td>注目文節（変換しようとしている文節）の先頭位置の取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetInputState"> sceAtokGetInputState<br></a></td>
<td>&nbsp;</td><td>入力状態を取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokGetKanjiState"> sceAtokGetKanjiState<br></a></td>
<td>&nbsp;</td><td>ATOKの漢字ON/OFFを取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokInit"> sceAtokInit<br></a></td>
<td>&nbsp;</td><td>ATOKライブラリの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokReset"> sceAtokReset<br></a></td>
<td>&nbsp;</td><td>ATOKの内部状態をリセットする<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokSetConfig"> sceAtokSetConfig<br></a></td>
<td>&nbsp;</td><td>ATOKの各種設定の設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokSetKanjiOff"> sceAtokSetKanjiOff<br></a></td>
<td>&nbsp;</td><td>漢字入力をOffする<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokSetKanjiOn"> sceAtokSetKanjiOn<br></a></td>
<td>&nbsp;</td><td>漢字入力をONする<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceAtokUndoClear"> sceAtokUndoClear<br></a></td>
<td>&nbsp;</td><td>確定アンドゥの無効化<br></td></tr>
</table>

<!-- 見出し　１，部見出し -->
<br></td></tr></table></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>構造体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokConfig"><font size=6>sceAtokConfig<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOK設定構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	int <i>size</i>; 
	int <i>KanjiInput</i>;
	int <i>KanDspType</i>;
	int <i>FixMode</i>;
	int <i>HZCnvMode</i>;
	int <i>HZCnvDetail</i>;
	char *<i>HankakuCnvStr</i>; 
	char *<i>ZenkakuCnvStr</i>;
	int <i>FuriganaMode</i>;
	int <i>MaxInputChars</i>;
	int <i>PutCursorMode</i>;
	int <i>PreAnalyze</i>;
	int <i>ConvMode</i>;
	int <i>LearningMode</i>;
	int <i>KutouCharSet</i>;
	int <i>OkuriMode</i>;
	int <i>AutoRegKind</i>;
	int <i>LearningKind</i>;
	int <i>RomanRecover</i>;
	int <i>AutoRecMode</i>;
	int <i>AutoRecRoman</i>;
	int <i>AutoRecKana</i>;
	int <i>AutoRecRep</i>;
	int <i>AppendAtoHen</i>;
	int <i>KutouCnvMode</i>;
	int <i>KutouCnvDetail</i>;
	int <i>RuledZenCnv</i>;
} <b>sceAtokConfig</b>;
</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;sizeof(sceAtokConfig)を設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>KanjiInput</i>&nbsp;</td>
<td valign="TOP">&nbsp;漢字入力モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_KAJIINPUT_ROMAN = ローマ字漢字&nbsp;<br>&nbsp;SCE_ATOK_KAJIINPUT_KANA = かな入力漢字&nbsp;<br>&nbsp;SCE_ATOK_KAJIINPUT_HANTROUGH = 半角スルー&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>KanDspType</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力文字種の設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_KANDSPTYPE_HIRA = ひらがな&nbsp;<br>&nbsp;SCE_ATOK_KANDSPTYPE_ZENKANA = 全角カタカナ&nbsp;<br>&nbsp;SCE_ATOK_KANDSPTYPE_ZENRAW = 全角無変換&nbsp;<br>&nbsp;SCE_ATOK_KANDSPTYPE_HANKANA = 半角カタカナ&nbsp;<br>&nbsp;SCE_ATOK_KANDSPTYPE_HANRAW = 半角無変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>FixMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;固定入力モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_FIXMODE_OFF = OFF&nbsp;<br>&nbsp;SCE_ATOK_FIXMODE_HIRAGANA = 固定ひらがな&nbsp;<br>&nbsp;SCE_ATOK_FIXMODE_ZENKANA = 固定全角カタカナ&nbsp;<br>&nbsp;SCE_ATOK_FIXMODE_ZENRAW = 固定全角無変換&nbsp;<br>&nbsp;SCE_ATOK_FIXMODE_HANKANA = 固定半角カタカナ&nbsp;<br>&nbsp;SCE_ATOK_FIXMODE_HANRAW = 固定半角無変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>HZCnvMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;半角全角変換する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_HZCNVMODE_CNVHANZEN＝&nbsp;<br>&nbsp;後変換単語への適用&nbsp;<br>&nbsp;SCE_ATOK_HZCNVMODE_USERREG＝&nbsp;<br>&nbsp;ユーザ登録単語への適用&nbsp;<br>&nbsp;SCE_ATOK_HZCNVMODE_INPUTCHARS＝&nbsp;<br>&nbsp;入力中文字列への適用&nbsp;<br>&nbsp;SCE_ATOK_HZCNVMODE_CNVHANZEN＝半角全角変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>HZCnvDetail</i>&nbsp;</td>
<td valign="TOP">&nbsp;半角全角変換詳細&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_ HZCNVDETAIL _NUM2ZEN＝数字→全角&nbsp;<br>&nbsp;SCE_ATOK_ HZCNVDETAIL _ALPH2ZEN＝英字→全角&nbsp;<br>&nbsp;SCE_ATOK_ HZCNVDETAIL _KANA2ZEN＝カタカナ→全角&nbsp;<br>&nbsp;SCE_ATOK_ HZCNVDETAIL _NUM2HAN＝数字→半角&nbsp;<br>&nbsp;SCE_ATOK_ HZCNVDETAIL _ALPH2HAN＝英字→半角&nbsp;<br>&nbsp;SCE_ATOK_ HZCNVDETAIL _KANA2HAN＝カタカナ→半角&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>*HankakuCnvStr</i>&nbsp;</td>
<td valign="TOP">&nbsp;半角変換する記号文字列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>*ZenkakuCnvStr</i>&nbsp;</td>
<td valign="TOP">&nbsp;全角変換する記号文字列へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>FuriganaMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;ふりがな入力モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_FURIGANAMODE_FINISH = 終了&nbsp;<br>&nbsp;SCE_ATOK_FURIGANAMODE_START = 開始&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>MaxInputChars</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力文字数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>PutCursorMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;未確定文字列（変換中文字列）末尾にカーソル文字を&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;追加する/しない&nbsp;<br>&nbsp;SCE_ATOK_PUTCURSORMODE_OFF = しない&nbsp;<br>&nbsp;SCE_ATOK_PUTCURSORMODE_ON = する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>PreAnalyze</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力時の辞書先読みする/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_PREANALYZE_OFF＝ しない&nbsp;<br>&nbsp;SCE_ATOK_PREANALYZE_ON＝ する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ConvMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_CONVMODE_REN＝ 連文節変換&nbsp;<br>&nbsp;SCE_ATOK_CONVMODE_TAN＝ 単文節変換&nbsp;<br>&nbsp;SCE_ATOK_CONVMODE_AUTO＝ 自動変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>LearningMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;学習モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_LEARNINGMODE_OFF＝ 学習しない&nbsp;<br>&nbsp;SCE_ATOK_LEARNINGMODE_ON＝ 学習する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>KutouCharSet</i>&nbsp;</td>
<td valign="TOP">&nbsp;句読点組み合わせパターン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_KUTOUCHARSET_SET0＝ ",.[]/ｰ"&nbsp;<br>&nbsp;(カンマ/ ピリオド/ 中括弧/   スラッシュ/ 音引き)&nbsp;<br>&nbsp;SCE_ATOK_KUTOUCHARSET_SET1= "､｡｢｣･ｰ"&nbsp;<br>&nbsp;(読点  / 句点    / かぎ括弧/ 中黒      / 音引き)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>OkuriMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;送りがなモード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_OKURIMODE_HONSOKU＝ &nbsp;<br>&nbsp;本則(正しい日本語)&nbsp;<br>&nbsp;SCE_ATOK_OKURIMODE_HABUKU＝ 省く&nbsp;<br>&nbsp;SCE_ATOK_OKURIMODE_OKURU＝ 送る&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>AutoRegKind</i>&nbsp;</td>
<td valign="TOP">&nbsp;自動登録種別&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_AUTOREGKIND_NONREG＝ 未登録語&nbsp;<br>&nbsp;SCE_ATOK_AUTOREGKIND_CNVRAW＝ 後変換&nbsp;<br>&nbsp;SCE_ATOK_AUTOREGKIND_MULTI＝ 複合語&nbsp;<br>&nbsp;SCE_ATOK_AUTOREGKIND_CLAUSEGAP＝ 文節区切り&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>LearningKind</i>&nbsp;</td>
<td valign="TOP">&nbsp;学習種別&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_LEARNINGKIND_NONREG＝未登録語&nbsp;<br>&nbsp;SCE_ATOK_LEARNINGKIND_CNVRAW＝ 後変換語&nbsp;<br>&nbsp;SCE_ATOK_LEARNINGKIND_MULTI＝ 複合語学習語&nbsp;<br>&nbsp;SCE_ATOK_LEARNINGKIND_CLAUSEGAP＝ &nbsp;<br>&nbsp;区切り直し学習語&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>RomanRecover</i>&nbsp;</td>
<td valign="TOP">&nbsp;ローマ字立ち直りする/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_ROMANRECOVER_OFF＝ しない&nbsp;<br>&nbsp;SCE_ATOK_ROMANRECOVER_ON＝ する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>AutoRecMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力支援する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_AUTORECMODE_OFF＝ しない&nbsp;<br>&nbsp;SCE_ATOK_AUTORECMODE_ON＝ する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>AutoRecRoman</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力支援(ローマ字入力時)の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_AUTORECROMAN_N＝ [N]の過不足&nbsp;<br>&nbsp;SCE_ATOK_AUTORECROMAN_SHIIN＝ 子音の超過&nbsp;<br>&nbsp;SCE_ATOK_AUTORECROMAN_BOIN＝ 母音の過不足&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>AutoRecKana</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力支援(かな入力時)の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_AUTORECKANA_WA2WO＝ &nbsp;<br>&nbsp;「わ」→「を」&nbsp;<br>&nbsp;SCE_ATOK_AUTORECKANA_TSU＝ &nbsp;<br>&nbsp;「つ」→「っ」(「つ」を拗音に)&nbsp;<br>&nbsp;SCE_ATOK_AUTORECKANA_HANDAKU2DAKU＝ &nbsp;<br>&nbsp;「゜」→「゛」(半濁点を濁点に)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>AutoRecRep</i>&nbsp;</td>
<td valign="TOP">&nbsp;入力支援(置換)の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_AUTORECREP_KUTEN2PERIOD＝&nbsp;<br>&nbsp; 「。」→「．」(句点をピリオドに)&nbsp;<br>&nbsp;SCE_ATOK_AUTORECREP_DOKUTEN2COMMA＝ &nbsp;<br>&nbsp;「、」→「，」(読点をカンマに)&nbsp;<br>&nbsp;SCE_ATOK_AUTORECREP_NAKAGURO2SLASH＝ &nbsp;<br>&nbsp;「・」→「／」(中黒をスラッシュに)&nbsp;<br>&nbsp;SCE_ATOK_AUTORECREP_ONBIKI2HYPHEN＝ &nbsp;<br>&nbsp;「ー」→「−」(音引きをハイフンに)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>AppendAtoHen</i>&nbsp;</td>
<td valign="TOP">&nbsp;後変換候補の候補リストへの追加をする/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_APPENDATOHEN_HANCNVRAWCAND＝&nbsp;<br>&nbsp; 半角無変換候補&nbsp;<br>&nbsp;SCE_ATOK_APPENDATOHEN_ZENCNVRAWCAND＝&nbsp;<br>&nbsp; 全角無変換候補&nbsp;<br>&nbsp;SCE_ATOK_APPENDATOHEN_HANKATAKANACAND＝&nbsp;<br>&nbsp; 半角カタカナ候補&nbsp;<br>&nbsp;SCE_ATOK_APPENDATOHEN_ZENKATAKANACAND＝&nbsp;<br>&nbsp; 全角カタカナ候補&nbsp;<br>&nbsp;SCE_ATOK_APPENDATOHEN_HIRAGANACAND＝&nbsp;<br>&nbsp; ひらがな候補&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>KutouCnvMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;句読点変換する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　数値指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_KUTOUCNVMODE_OFF＝ しない&nbsp;<br>&nbsp;SCE_ATOK_KUTOUCNVMODE_ON＝ する&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>KutouCnvDetail</i>&nbsp;</td>
<td valign="TOP">&nbsp;句読点変換の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_KUTOUCNVDETAIL_KANTANFU＝&nbsp;<br>&nbsp; [！](感嘆符)で変換&nbsp;<br>&nbsp;SCE_ATOK_KUTOUCNVDETAIL_GIMONFU＝&nbsp;<br>&nbsp; [？](疑問符)で変換&nbsp;<br>&nbsp;SCE_ATOK_KUTOUCNVDETAIL_DOKUTEN＝&nbsp;<br>&nbsp; [、](読点)で変換&nbsp;<br>&nbsp;SCE_ATOK_KUTOUCNVDETAIL_KUTEN＝&nbsp;<br>&nbsp; [。](句点)で変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>RuledZenCnv</i>&nbsp;</td>
<td valign="TOP">&nbsp;全角変換例外規則の設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;　ビット指定&nbsp;</td>
<td valign="TOP">&nbsp;SCE_ATOK_RULEDZENCNV_TILDE＝ [~]→[〜]に変換&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKシステム設定を格納する構造体です。<br>ATOKライブラリ概要にも解説があるので参照して下さい。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceAtokGetConfig">sceAtokGetConfig</a>()<a href="#"></a>,<a href="#sceAtokSetConfig">sceAtokSetConfig</a>()<br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokContext"><font size=6>sceAtokContext<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKエンジン用コンテキスト<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef unsigned char sceAtokContext[ SCE_ATOK_CONTEXT_SIZE ]
__attribute__((aligned(64)))

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非公開<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンがワークとして使用する領域です。<br>ユーザーが確保して、sceAtokInit() でセットして下さい。<br>この領域はDMAで転送されるので、64バイトアラインされている必要があります。<br>スタック領域には割り当てないでください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceAtokInit">sceAtokInit</a>()<br><br><br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokConvAll"><font size=6>sceAtokConvAll<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>変換処理（一括読み変換）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokConvAll</b> (
	sceAtokContext *<i>context</i>,
	const char * <i>str</i>,
	int <i>iMode</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>str</i>&nbsp;</td>
<td valign="TOP">&nbsp;読み文字列の格納バッファポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>iMode</i>&nbsp;</td>
<td valign="TOP">&nbsp;0= 変換は行わず、読み文字列のセットのみ&nbsp;<br>&nbsp;1= 変換まで行う&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10005&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10006&nbsp;</td>
<td valign="TOP">&nbsp;ATOKライブラリが初期化されていない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数に指定された“読み”の文字列を使って、一括読み変換を行います。<br>使用できる文字は20ｈ〜7Eh及びA1〜DFｈの半角英字・数字・記号・カタカナ文字です。それ以外の文字が与えられるとエラーとなります。<br>ATOKエンジンに未確定の文字列が残っている場合もエラーとなります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokEditConv"><font size=6>sceAtokEditConv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>編集・変換処理<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokEditConv</b> (
	sceAtokContext *<i>context</i>, 
	int <i>cmd</i>, 
	int <i>param</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cmd</i>&nbsp;</td>
<td valign="TOP">&nbsp;コマンド番号または入力キーコード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>param</i>&nbsp;</td>
<td valign="TOP">&nbsp;パラメータ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10005&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10006&nbsp;</td>
<td valign="TOP">&nbsp;ATOKライブラリが初期化されていない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>cmd</i>に文字コードを設定すると、ATOKエンジンに対して文字入力として送られます。20ｈ〜7Eh及びA1〜DFｈの半角英字・数字・記号・カタカナ文字が設定できます。<br><i>cmd</i>にコマンド番号を設定すると、その内容に応じて編集や変換の処理が行われます。コマンドによっては<i>param</i>にパラメータを設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">使用できるコマンドは以下の通りです。<br>各コマンドについてはATOKライブラリ概要も参照して下さい。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>コマンド</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>解説</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_BACKSPACE&nbsp;</td>
<td valign="TOP">&nbsp;左文字1文字削除(BACKSPACE)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_DELETE&nbsp;</td>
<td valign="TOP">&nbsp;カーソル位置の1文字削除(DELETE)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CURRIGHT&nbsp;</td>
<td valign="TOP">&nbsp;カーソル移動(右)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CURLEFT&nbsp;</td>
<td valign="TOP">&nbsp;カーソル移動(左)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CUREND&nbsp;</td>
<td valign="TOP">&nbsp;カーソル移動(文末)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CURTOP&nbsp;</td>
<td valign="TOP">&nbsp;カーソル移動(文頭)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CONVFORWARD&nbsp;</td>
<td valign="TOP">&nbsp;次の候補へ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CONVBACKWARD&nbsp;</td>
<td valign="TOP">&nbsp;前の候補へ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_1ONKAKUTEI&nbsp;</td>
<td valign="TOP">&nbsp;1音確定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_POSTCONVHIRA&nbsp;</td>
<td valign="TOP">&nbsp;後変換:ひらがな&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_POSTCONVKANA&nbsp;</td>
<td valign="TOP">&nbsp;後変換:カタカナ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_POSTCONVHALF&nbsp;</td>
<td valign="TOP">&nbsp;後変換:半角&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_POSTCONVRAW&nbsp;</td>
<td valign="TOP">&nbsp;後変換:無変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_DICCONV&nbsp;</td>
<td valign="TOP">&nbsp;辞書指定変換&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_KAKUTEIPART&nbsp;</td>
<td valign="TOP">&nbsp;部分確定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_KAKUTEIALL&nbsp;</td>
<td valign="TOP">&nbsp;全文確定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_DELETEALL&nbsp;</td>
<td valign="TOP">&nbsp;全文字削除&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_KAKUTEIREP&nbsp;</td>
<td valign="TOP">&nbsp;確定リピート&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_KAKUTEIUNDO&nbsp;</td>
<td valign="TOP">&nbsp;確定アンドゥ(※1)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_KAKUTEIHEAD&nbsp;</td>
<td valign="TOP">&nbsp;文頭文字確定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_KAKUTEITAIL&nbsp;</td>
<td valign="TOP">&nbsp;文末文字確定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CONVCANCEL&nbsp;</td>
<td valign="TOP">&nbsp;変換キャンセル(注目文節(※2)以降)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_CANCELLALL&nbsp;</td>
<td valign="TOP">&nbsp;全変換取り消し&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_FOCUSRIGHT&nbsp;</td>
<td valign="TOP">&nbsp;注目文節区切りを1文字のばす&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_FOCUSLEFT&nbsp;</td>
<td valign="TOP">&nbsp;注目文節区切りを1文字縮める&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_MOVFOCUSCLAUS&nbsp;</td>
<td valign="TOP">&nbsp;注目文節移動&nbsp;<br>&nbsp;注) 文節区切り直し中には使えません&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_EDIT_SELECTCAND&nbsp;</td>
<td valign="TOP">&nbsp;候補選択移動&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;(※1) 確定アンドゥ&nbsp;</td>
<td valign="TOP">&nbsp;一度、変換文字列を確定した後で、確定文字列の状態を&nbsp;<br>&nbsp;変換文字列の状態にすること。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;(※2) 注目文節&nbsp;</td>
<td valign="TOP">&nbsp;変換しようとしている文節。&nbsp;</td>
</tr>
</table>
</div>
<br>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokExit"><font size=6>sceAtokExit<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKライブラリの終了<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokExit</b>(
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10005&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10006&nbsp;</td>
<td valign="TOP">&nbsp;ATOKライブラリの初期化が行われていない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKの終了処理を行います。<br>オープンされた辞書ファイルがある場合はクローズします。<br>これ以降、再びsceAtokInit()関数で初期化するまでATOKライブラリは使用できなくなります。<br>sceAtokInit()の<i>loadaddr</i>で指定した領域は、これ以降は他の用途に使うことができます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokFlushConverted"><font size=6>sceAtokFlushConverted<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKの確定文字列と確定読み文字列をクリアする<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokFlushConverted</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10005&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10006&nbsp;</td>
<td valign="TOP">&nbsp;ATOKライブラリが初期化されていない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKが内部で管理している、確定文字列と確定読み文字列をクリアします。<br>※確定読み文字列：確定文字列を読み文字列で表現した文字列<br>例）今日はいい天気<br>　　「今日は」の確定読み文字列は、「きょうは」。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetCandidateCount"><font size=6>sceAtokGetCandidateCount<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>変換候補の数を取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetCandidateCount</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">変換候補の数<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">かな漢字変換処理を行った際、ATOKエンジンが返す変換候補の数を取得します。<br>入力状態が候補一覧（SCE_ATOK_ISTATE_CANDIDATES）の時のみ使用できます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetCandidateList"><font size=6>sceAtokGetCandidateList<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>かな漢字変換候補リストの文字列の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetCandidateList</b> (
	sceAtokContext *<i>context</i>,
	char *<i>buf</i>, 
	int <i>size</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;候補リスト格納用バッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;候補リスト格納用バッファの長さ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;候補リスト格納用バッファがNULLである&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;候補リスト格納用バッファの容量不足&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;1以上&nbsp;</td>
<td valign="TOP">&nbsp;格納した候補文字列の個数を返す。&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">候補文字列リストの文字列を一括取得します。 <br>入力状態が候補一覧（SCE_ATOK_ISTATE_CANDIDATES）の時のみ使用できます。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>

<div style="margin-left:40px;"><h4><b>付属語（送り仮名）情報付きの取得</b><br></h4></div>

<div style="margin-left:50px;">ATOK設定構造体のOkuriModeに適宜設定を行った後、本関数を呼び出すことで、注目文節（変換しようとしている文節）で候補に付加される付属語の情報もあわせて取得することができます。<br>この場合、<i>buf</i>には以下の順で情報が格納されます。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;注目文節(変換しようとしている文節)のひらがな表記(終端あり)。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;先頭候補の表記（終端あり）。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;先頭候補の付属語オフセット。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;次候補の表記（終端あり）。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;次候補の付属語オフセット。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;  --------------&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;  --------------&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;n&nbsp;</td>
<td valign="TOP">&nbsp;候補ｍの表記（終端あり）。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;n+1&nbsp;</td>
<td valign="TOP">&nbsp;候補ｍの付属語オフセット。&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">※付属語オフセットとは注目文節（変換しようとしている文節）のひらがな表記のオフセットバイト目からのひらがな文字列がその候補の付属語であることを意味します。<br><br>例）「あいだ」の候補に「間」と「愛だ」がある場合の<i>buf</i>の配列イメージ<br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;「あいだ」&nbsp;</td>
<td valign="TOP">&nbsp;0ｘ82A0、0x82A2、0ｘ82BE、0x00 (=szFuzo)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;「間」&nbsp;</td>
<td valign="TOP">&nbsp;0ｘ8AD4、0x00&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;付属語無し&nbsp;</td>
<td valign="TOP">&nbsp;0ｘ06 (&szFuzo[6] = “”)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;「愛」&nbsp;</td>
<td valign="TOP">&nbsp;0ｘ88A4、0ｘ00&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;付属語「だ」のオフセット&nbsp;</td>
<td valign="TOP">&nbsp;0ｘ04 (&szFuzo[4] = “だ”)&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">ATOK呼び出し側でこれらの情報を活用することにより、付属語部分の色合いや濃度を変えて、付属語の違い（語幹の違い）を明確にすること等が可能となります。<br><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;1. 愛だ&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;2. 間だ&nbsp;</td>
<td valign="TOP">&nbsp;← “だ”が付属語&nbsp;</td>
</tr>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;3. 相田&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;4. 間&nbsp;</td>
<td valign="TOP">&nbsp;← 付属語なし&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;5. あいだ&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;6. アイダ&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">付属語情報を取得する場合は、取得しない場合に比べて取得用のバッファ容量が多く必要となります。その計算式は、<br><b>SIZE = YOMIMAX*2+1 ＋ CANDSMAX*1</b><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;SIZE :&nbsp;</td>
<td valign="TOP">&nbsp;バッファ増分&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;YOMIMAX :&nbsp;</td>
<td valign="TOP">&nbsp;入力読みMAX（バイト数）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;CANDSMAX :&nbsp;</td>
<td valign="TOP">&nbsp;辞書中の同音候補の最大数（辞書により異なる）&nbsp;</td>
</tr>
</table>
</div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetCandidateListSize"><font size=6>sceAtokGetCandidateListSize<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>かな漢字変換候補リストのサイズの取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetCandidateListSize</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">かな変換候補リストのサイズの取得<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">候補文字列リストのサイズを取得します。<br>入力状態が候補一覧（SCE_ATOK_ISTATE_CANDIDATES）の時のみ使用できます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConfig"><font size=6>sceAtokGetConfig<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKの各種設定の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConfig</b> (
	sceAtokContext *<i>context</i>, 
	sceAtokConfig *<i>config</i>,
	unsigned long <i>bits</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>config</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体のポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>bits</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体内の有効なメンバを指定&nbsp;<br>&nbsp;参照 sceAtokConfig構造体&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体が不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体のサイズが不正&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在ATOKエンジンに設定されている各種設定を取得します。構造体のどのメンバの設定を取得するかは、<i>bits</i>にビットフラグを設定することで指定できます。<br>sceAtokConfig構造体、およびATOKライブラリ概要の「３．各種設定」を参照してください。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConvertedReadStr"><font size=6>sceAtokGetConvertedReadStr<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>確定読み文字列をバッファに受け取る<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConvertedReadStr</b> (
	sceAtokContext *<i>context</i>,
	char *<i>buf</i>,
	unsigned int <i>size</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;読み文字列格納用バッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;読み文字列格納用バッファの長さ（バイト数）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">確定読み文字列の長さ（バイト数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンが内部で管理している確定読み文字列を、引数で指定したバッファに受け取ります。<br>※確定読み文字列：確定文字列を読み文字列で表現した文字列<br>例）今日はいい天気<br>　　「今日は」の確定読み文字列は、「きょうは」。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConvertedStr"><font size=6>sceAtokGetConvertedStr<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>確定文字列をバッファに受け取る<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConvertedStr</b> (
	sceAtokContext *<i>context</i>,
	char *<i>buf</i>,
	unsigned int <i>size</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;確定文字列格納用バッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;確定文字列格納用バッファの長さ（バイト数）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">確定文字列数（バイト数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンが内部で管理している確定文字列（変換が完了した文字列）を、引数で指定したバッファに受け取ります。<br>確定文字列をすべて格納するためには、<i>size</i>は確定文字列数＋１である必要があります。バッファが不足した場合は、格納できる文字数までを格納します。<br>返り値が<i>size</i>と同じか大きい場合は、バッファが不足しています。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConvertingClause"><font size=6>sceAtokGetConvertingClause<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>未確定文字列（変換中文字列）を文節ごとに取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConvertingClause</b> (
	sceAtokContext *<i>context</i>,
	char *<i>buf</i>,
	unsigned int <i>size</i>
	int <i>index</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換中読み文字列格納用バッファのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換中読み文字列格納用バッファの長さ（バイト数）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>index</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の文節かを指定するインデックス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;エラー、または未確定の文節が無い&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以外&nbsp;</td>
<td valign="TOP">&nbsp;文節の長さ（バイト数）&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">未確定の文字列を取得します。<i>index</i>に何番目の文節かを指定することができます。<br>未確定文字列（変換中文字列）の文節数を知るには、sceAtokGetConvertingClauseCount()を使用します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConvertingClauseCount"><font size=6>sceAtokGetConvertingClauseCount<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>未確定文字列（変換中文字列）の文節数を取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConvertingClauseCount</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;エラー、または未確定の文節が無い&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0以外&nbsp;</td>
<td valign="TOP">&nbsp;文節の数&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">未確定の文字列に含まれる文節数を取得します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConvertingReadStr"><font size=6>sceAtokGetConvertingReadStr<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>未確定読み文字列をバッファに受け取る<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConvertingReadstr </b>(
	sceAtokContext *<i>context</i>,
	char *<i>buf</i>,
	unsigned int <i>size</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換中読み文字列格納用バッファへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;変換中読み文字列格納用バッファの長さ（バイト数）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">変換中読み文字列の長さ（バイト数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンが内部で管理している変換中の“読み”の文字列を、引数で指定したバッファに受け取ります<br>文字列をすべて格納するためには、<i>size</i>は文字列数＋１である必要があります。バッファが不足した場合は、格納できる文字数までを格納します。<br>返り値が<i>size</i>と同じか大きい場合は、バッファが不足しています。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetConvertingStr"><font size=6>sceAtokGetConvertingStr<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>未確定文字列（変換中文字列）をバッファに受け取る<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetConvertingStr</b> (
	sceAtokContext *<i>context</i>,
	char *<i>buf</i>,
	unsigned int <i>size</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>buf</i>&nbsp;</td>
<td valign="TOP">&nbsp;未確定文字列（変換中文字列）格納用バッファのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;未確定文字列（変換中文字列）格納用バッファの長さ（バイト数）&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">未確定文字列（変換中文字列）の長さ（バイト数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンが内部で管理している未確定文字列（変換中文字列）を、引数で指定したバッファに受け取ります。<br>文字列をすべて格納するためには、<i>size</i>は文字列数＋１である必要があります。バッファが不足した場合は、格納できる文字数までを格納します。<br>返り値が<i>size</i>と同じが大きい場合は、バッファが不足しています。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetCurrentCandidateIndex"><font size=6>sceAtokGetCurrentCandidateIndex<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>かな漢字変換候補の現在の選択候補番号取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetCurrentCandidateIndex</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在の選択候補番号<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">複数の変換候補のうち、現在選択されている候補の番号を返します。<br>入力状態が候補一覧（SCE_ATOK_ISTATE_CANDIDATES）の時のみ使用できます。<br><br></div>

<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetFocusClauseIndex"><font size=6>sceAtokGetFocusClauseIndex<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>注目文節（変換しようとしている文節）番号を得る<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetFocusClauseIndex</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;注目文節（変換しようとしている文節）番号が取得できない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1以外&nbsp;</td>
<td valign="TOP">&nbsp;注目文節（変換しようとしている文節）番号&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">注目文節の番号（未確定文字列の中で、先頭から何文節目か）を取得します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetFocusClauseLen"><font size=6>sceAtokGetFocusClauseLen<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>注目文節（変換しようとしている文節）のバイト数の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetFocusClauseLen</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">注目文節（変換しようとしている文節）のバイト数 (0:なし)<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">注目文節（変換しようとしている文節）の長さ（バイト数）を返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetFocusClauseTop"><font size=6>sceAtokGetFocusClauseTop<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>注目文節（変換しようとしている文節）の先頭位置の取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetFocusClauseTop</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">注目文節（変換しようとしている文節）の先頭位置<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">注目文節（変換しようとしている文節）の先頭位置を、未確定文字列の先頭からのバイトオフセットで返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetInputState"><font size=6>sceAtokGetInputState<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>入力状態を取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetInputState</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>設定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>解説</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_BEFOREINPUT&nbsp;</td>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;入力文字無し&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_BEFORECONVERT&nbsp;</td>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;入力後、変換前&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_CONVERTING&nbsp;</td>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;漢字変換中&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_CANDEMPTY&nbsp;</td>
<td valign="TOP">&nbsp;3&nbsp;</td>
<td valign="TOP">&nbsp;漢字候補無し&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_POSTCONVKANA&nbsp;</td>
<td valign="TOP">&nbsp;4&nbsp;</td>
<td valign="TOP">&nbsp;後変換中（ｶﾅ）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_POSTCONVHALF&nbsp;</td>
<td valign="TOP">&nbsp;5&nbsp;</td>
<td valign="TOP">&nbsp;後変換中（半角）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_POSTCONVRAW&nbsp;</td>
<td valign="TOP">&nbsp;6&nbsp;</td>
<td valign="TOP">&nbsp;後変換中（無変換）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_CANDIDATES&nbsp;</td>
<td valign="TOP">&nbsp;7&nbsp;</td>
<td valign="TOP">&nbsp;次候補選択中&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK_ISTATE_MOVECLAUSEGAP&nbsp;</td>
<td valign="TOP">&nbsp;8&nbsp;</td>
<td valign="TOP">&nbsp;区切り直し中&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンの入力状態を取得します。<br>各入力状態によって、使用できるコマンドとできないコマンドがあります。ATOKライブラリ概要の「５．入力状態別コマンド一覧」を参照して下さい。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokGetKanjiState"><font size=6>sceAtokGetKanjiState<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKの漢字ON/OFFを取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokGetKanjiState</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;漢字OFF&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;1&nbsp;</td>
<td valign="TOP">&nbsp;漢字ON（文字列が入力されていない）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;2&nbsp;</td>
<td valign="TOP">&nbsp;漢字ON（文字列が入力されている）&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在のATOKエンジンの状態を返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokInit"><font size=6>sceAtokInit<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKライブラリの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokInit</b> (
	sceAtokContext *<i>context</i>, 
	const char *<i>sysdic</i>,
	const char *<i>userdic</i> ,
	const char *<i>sysconf</i>,
	const void *<i>loadaddr</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;<br>&nbsp;64バイトアラインメントで配置する必要があります。&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>sysdic</i>&nbsp;</td>
<td valign="TOP">&nbsp;システム辞書ファイルへのパス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>userdic</i>&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ辞書ファイルへのパス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>sysconf</i>&nbsp;</td>
<td valign="TOP">&nbsp;syscnfディレクトリのマウントパス&nbsp;<br>&nbsp;例) “pfs0:”&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>loadaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKダイナミックリンクライブラリをロードする領域のポインタ&nbsp;<br>&nbsp;16バイトアラインメントで配置する必要があります。&nbsp;<br>&nbsp;サイズは512kB必要です。&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;成功&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10000&nbsp;</td>
<td valign="TOP">&nbsp;erxのロードに失敗&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10001&nbsp;</td>
<td valign="TOP">&nbsp;erxのロードアドレスが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10002&nbsp;</td>
<td valign="TOP">&nbsp;初期化がすでに行われている&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10003&nbsp;</td>
<td valign="TOP">&nbsp;システム辞書のパスが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10004&nbsp;</td>
<td valign="TOP">&nbsp;ユーザー辞書のパスが不正&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKかな漢字変換エンジンを初期化し、辞書ファイルをオープンします。<br>ATOKライブラリが使用するコンテキスト（ワーク領域）をユーザーが確保して、そのポインタを<i>context</i>に指定して下さい。（構造体のsceAtokContextを参照）<br>ATOKライブラリの各関数の多くは、第１引数にこのコンテキストを使用します。<br>この領域はDMAで転送されるので、64バイトアラインされている必要があります。<br>スタック領域に割り当てないでください。<br>スクラッチパッド領域にも割り当てないでください。<br><br>ATOKライブラリ本体は、この関数を実行した時に、”PlayStation 2”のハードディスクドライブからロードされ、EEのメモリ上に配置されます。<i>loadaddr </i>がそのために必要な領域のポインタです。16byteアラインメントで512kBを確保してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokReset"><font size=6>sceAtokReset<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKの内部状態をリセットする<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokReset</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10005&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10006&nbsp;</td>
<td valign="TOP">&nbsp;ATOKライブラリが初期化されていない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKが保持している入力文字列、入力状態、メモリ上の学習状態、確定アンドゥ保持状態が破記され、初期状態に戻ります。<br>ATOK設定構造体の設定値は保持されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokSetConfig"><font size=6>sceAtokSetConfig<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ATOKの各種設定の設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokSetConfig</b> (
	sceAtokContext *<i>context</i>, 
	const sceAtokConfig *<i>config</i>,
	unsigned long <i>bits</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>config</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体のconstポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>bits</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体内の有効なメンバを指定&nbsp;<br>&nbsp;参照 sceAtokConfig構造体&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体が不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-2&nbsp;</td>
<td valign="TOP">&nbsp;ATOK設定構造体のサイズが不正&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKエンジンに各種設定をセットします。config構造体のすべての内容がセットされるわけではなく、どのメンバーの設定をセットするか、<i>bits</i>にビットフラグで指定します。<br><br>定義されているフラグは以下の通りです。各フラグの有効な設定値についてはATOKライブラリ概要の「３．各種設定」を参照して下さい。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>設定</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>構造体メンバ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>解説</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_KAJIINPUT&nbsp;</td>
<td valign="TOP">&nbsp;KanjiInput&nbsp;</td>
<td valign="TOP">&nbsp;漢字入力モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_KANDSPTYPE&nbsp;</td>
<td valign="TOP">&nbsp;KanDspType&nbsp;</td>
<td valign="TOP">&nbsp;入力文字種&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_FIXMODE&nbsp;</td>
<td valign="TOP">&nbsp;FixMode&nbsp;</td>
<td valign="TOP">&nbsp;固定入力モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_HZCNVMODE&nbsp;</td>
<td valign="TOP">&nbsp;HZCnvMode&nbsp;</td>
<td valign="TOP">&nbsp;半角全角変換する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_HZCNVDATAIL&nbsp;</td>
<td valign="TOP">&nbsp;HZCnvDetail&nbsp;</td>
<td valign="TOP">&nbsp;半角全角変換の詳細&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_HANKAKUCNVSTR&nbsp;</td>
<td valign="TOP">&nbsp;HankakuCnvStr&nbsp;</td>
<td valign="TOP">&nbsp;半角変換する記号文字列への&nbsp;<br>&nbsp;ポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_ZENKAKUCNVSTR&nbsp;</td>
<td valign="TOP">&nbsp;ZenkakuCnvStr&nbsp;</td>
<td valign="TOP">&nbsp;全角変換する記号文字列への&nbsp;<br>&nbsp;ポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_FURIGANAMODE&nbsp;</td>
<td valign="TOP">&nbsp;FuriganaMode&nbsp;</td>
<td valign="TOP">&nbsp;ふりがな入力モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_MAXINPUTCHARS&nbsp;</td>
<td valign="TOP">&nbsp;MaxInputChars&nbsp;</td>
<td valign="TOP">&nbsp;入力文字数&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_PUTCURSORMODE&nbsp;</td>
<td valign="TOP">&nbsp;PutCursorMode&nbsp;</td>
<td valign="TOP">&nbsp;未確定文字列（※1）&nbsp;<br>&nbsp;末尾にカーソル文字を&nbsp;<br>&nbsp;追加する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_PREANALYZE&nbsp;</td>
<td valign="TOP">&nbsp;PreAnalyze&nbsp;</td>
<td valign="TOP">&nbsp;入力時の辞書先読みする/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_CONVMODE&nbsp;</td>
<td valign="TOP">&nbsp;ConvMode&nbsp;</td>
<td valign="TOP">&nbsp;変換モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_LEARNINGMODE&nbsp;</td>
<td valign="TOP">&nbsp;LearningMode&nbsp;</td>
<td valign="TOP">&nbsp;学習モード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_KUTOUCHARSET&nbsp;</td>
<td valign="TOP">&nbsp;KutouCharSet&nbsp;</td>
<td valign="TOP">&nbsp;句読点組み合わせパターン&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_OKURIMODE&nbsp;</td>
<td valign="TOP">&nbsp;OkuriMode&nbsp;</td>
<td valign="TOP">&nbsp;送りがなモード&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_AUTOREGKIND&nbsp;</td>
<td valign="TOP">&nbsp;AutoRegKind&nbsp;</td>
<td valign="TOP">&nbsp;自動登録種別&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_LEARNINGKIND&nbsp;</td>
<td valign="TOP">&nbsp;LearningKind&nbsp;</td>
<td valign="TOP">&nbsp;学習種別&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_ROMANRECOVER&nbsp;</td>
<td valign="TOP">&nbsp;RomanRecover&nbsp;</td>
<td valign="TOP">&nbsp;ローマ字立ち直りする/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_AUTORECMODE&nbsp;</td>
<td valign="TOP">&nbsp;AutoRecMode&nbsp;</td>
<td valign="TOP">&nbsp;入力支援する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_AUTORECROMAN&nbsp;</td>
<td valign="TOP">&nbsp;AutoRecRoman&nbsp;</td>
<td valign="TOP">&nbsp;入力支援(ローマ字入力時)&nbsp;<br>&nbsp;の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_AUTORECKANA&nbsp;</td>
<td valign="TOP">&nbsp;AutoRecKana&nbsp;</td>
<td valign="TOP">&nbsp;入力支援(かな入力時)&nbsp;<br>&nbsp;の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_AUTORECREP&nbsp;</td>
<td valign="TOP">&nbsp;AutoRecRep&nbsp;</td>
<td valign="TOP">&nbsp;入力支援(置換)の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_APPENDATOHEN&nbsp;</td>
<td valign="TOP">&nbsp;AppendAtoHen&nbsp;</td>
<td valign="TOP">&nbsp;後変換候補の候補リストへの&nbsp;<br>&nbsp;追加をする/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_KUTOUCNVMODE&nbsp;</td>
<td valign="TOP">&nbsp;KutouCnvMode&nbsp;</td>
<td valign="TOP">&nbsp;句読点変換する/しない&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_KUTOUCNVDETAIL&nbsp;</td>
<td valign="TOP">&nbsp;KutouCnvDetail&nbsp;</td>
<td valign="TOP">&nbsp;句読点変換の詳細設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_RULEDZENCNV&nbsp;</td>
<td valign="TOP">&nbsp;RuledZenCnv&nbsp;</td>
<td valign="TOP">&nbsp;全角変換例外規則の設定&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_ATOK&nbsp;<br>&nbsp;_CONFIG_ALL&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;全ての設定を一括して&nbsp;<br>&nbsp;指定する場合に使用&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">※1 未確定文字列: 確定されていない文字列。変換中文字列も含まれる<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="#sceAtokConfig">sceAtokConfig</a><br><br><br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokSetKanjiOff"><font size=6>sceAtokSetKanjiOff<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>漢字入力をOffする<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokSetKanjiOff</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td colspan= 2  valign="top">&nbsp;以前の漢字モード状態&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;0&nbsp;</td>
<td valign="top">&nbsp;漢字OFF&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;1&nbsp;</td>
<td valign="top">&nbsp;漢字ON&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKを漢字入力不可の状態にします。既に漢字入力OFFの場合はなにも処理しません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokSetKanjiOn"><font size=6>sceAtokSetKanjiOn<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>漢字入力をONする<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokSetKanjiOn</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td colspan= 2  valign="top">&nbsp;以前の漢字モード状態&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;0&nbsp;</td>
<td valign="top">&nbsp;漢字OFF&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;1&nbsp;</td>
<td valign="top">&nbsp;漢字ON&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATOKを漢字入力の状態にします。既に漢字入力ONの場合はなにも処理しません。<br>漢字入力OFF状態から漢字入力ON状態になった場合には、入力状態や入力文字列は初期状態に戻ります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceAtokUndoClear"><font size=6>sceAtokUndoClear<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>確定アンドゥの無効化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatok.h&gt;
int <b>sceAtokUndoClear</b> (
	sceAtokContext *<i>context</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能 <br>マルチスレッドセーフでない(割り込み許可状態で呼ぶこと)<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>context</i>&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>意味</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;正常終了&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10005&nbsp;</td>
<td valign="TOP">&nbsp;ATOKコンテキストが不正&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-10006&nbsp;</td>
<td valign="TOP">&nbsp;ATOKライブラリが初期化されていない&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">確定アンドゥとは、確定された文字列を、確定前の変換文字列状態にすることです。<br>ユーザーインタフェイス上の操作で、カーソル位置が変わったり、なんらかの機能操作が行われると、確定アンドゥが不可能になります。そしてATOKエンジン側はそれを検知できませんので、アプリケーション側で確定アンドゥの無効を設定する必要があります。<br>確定後に文字入力があった場合などは、ATOKエンジン側で自動的に無効化されるので、この関数をコールする必要はありません。<br>基本的に、確定アンドゥは確定操作の直後にのみ実行可能であると考えてください。<br></div>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
