<html lang="ja">
<!-- 見出し　１，部見出し -->
<head>

<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<script language="JavaScript">
<!--
  function lj(ch,fm)
  {
    if ( parent.index ) {
      if ( ch == "libref" ){ parent.index.location.href="../libref/category.htm"; }
      else if ( ch == "../ee/libref" ){ parent.index.location.href="../../ee/libref/category.htm"; }
      else if ( ch == "../iop/libref" ){ parent.index.location.href="../../iop/libref/category.htm"; }
      else if ( ch == "../iop/overview" ){ parent.index.location.href="../../iop/overview/category.htm"; }
      else if ( ch == "../ee/overview" ){ parent.index.location.href="../../ee/overview/category.htm"; }
      else if ( ch == "overview" ){ parent.index.location.href="../overview/category.htm"; }
    }
    if ( parent.main ) {
      if ( fm != "" ){ parent.main.location.href=fm; }
    } else {
      if ( fm != "" ){ location.href=fm; }
    }
  }
//-->
</script>
<title>基本グラフィックスライブラリ</title>
<meta http-equiv="Content-Type"content= text/html; charset=UTF-8 >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
<tr><td align= right >
<script language="JavaScript">
<!--
   var p,q;
   if ( parent.index ) {
   p = parent.index.location;
   q = p.toString();
   result = q.match(/\/category\.htm/gi);
   if(result == "/category.htm"){
          document.writeln("<a href=\"JavaScript:lj('overview','../overview/libgp.htm')\"><img src=\"./gif/arrow.png\" border=0>ライブラリ概要</a>");
    }
}
// -->
</script>
</td></tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
基本グラフィックスライブラリ
</h1></center>
</a>
<font size=4><b>チェイン管理構造体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpChain"> sceGpChain<br></a></td>
<td>&nbsp;</td><td>チェイン管理構造体<br></td></tr>
</table><br>
<font size=4><b>レジスタ共用体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpPack"> sceGpPack<br></a></td>
<td>&nbsp;</td><td>P フォーマットレジスタ共用体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpReg"> sceGpReg<br></a></td>
<td>&nbsp;</td><td>R フォーマットレジスタ共用体<br></td></tr>
</table><br>
<font size=4><b>パケット構造体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpAd"> sceGpAd<br></a></td>
<td>&nbsp;</td><td>汎用レジスタ設定パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpAlphaEnv"> sceGpAlphaEnv<br></a></td>
<td>&nbsp;</td><td>アルファ環境設定パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpCall"> sceGpCall<br></a></td>
<td>&nbsp;</td><td>call パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpLoadImage"> sceGpLoadImage<br></a></td>
<td>&nbsp;</td><td>イメージ転送パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpLoadTexelClut"> sceGpLoadTexelClut<br></a></td>
<td>&nbsp;</td><td>CLUT つきテクスチャ転送パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpPrimP"> sceGpPrimP<br></a></td>
<td>&nbsp;</td><td>P フォーマット描画パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpPrimR"> sceGpPrimR<br></a></td>
<td>&nbsp;</td><td>R フォーマット描画パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpRef"> sceGpRef<br></a></td>
<td>&nbsp;</td><td>ref パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpTexEnv"> sceGpTexEnv<br></a></td>
<td>&nbsp;</td><td>テクスチャ環境設定パケット構造体<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpTexEnvMipmap"> sceGpTexEnvMipmap<br></a></td>
<td>&nbsp;</td><td>MIPMAP つきテクスチャ環境設定パケット構造体<br></td></tr>
</table><br>
<font size=4><b>パラメータ構造体</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpTextureArg"> sceGpTextureArg<br></a></td>
<td>&nbsp;</td><td>テクスチャパラメータ構造体<br></td></tr>
</table><br>
<font size=4><b>ユーティリティ関数（一部マクロ関数）</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpChkChainOtSize"> sceGpChkChainOtSize<br></a></td>
<td>&nbsp;</td><td>オーダリングチェインのサイズを求める（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpChkNumPtoV"> sceGpChkNumPtoV<br></a></td>
<td>&nbsp;</td><td>ポリゴン数から頂点数を求める<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpChkPacketSize"> sceGpChkPacketSize<br></a></td>
<td>&nbsp;</td><td>パケットのサイズを求める<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpGetTail"> sceGpGetTail<br></a></td>
<td>&nbsp;</td><td>パケットのテイルポインタを取得<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpGetTailChain"> sceGpGetTailChain<br></a></td>
<td>&nbsp;</td><td>チェインの指定レベルのテイルポインタを取得<br></td></tr>
</table><br>
<font size=4><b>チェイン操作関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpAddChain"> sceGpAddChain<br></a></td>
<td>&nbsp;</td><td>子チェインの登録<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpAddChain2"> sceGpAddChain2<br></a></td>
<td>&nbsp;</td><td>子チェインを指定位置の後へ登録<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpAddPacket"> sceGpAddPacket<br></a></td>
<td>&nbsp;</td><td>チェインへのパケットの登録<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpAddPacket2"> sceGpAddPacket2<br></a></td>
<td>&nbsp;</td><td>パケットを指定位置の後へ登録<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpCallChain"> sceGpCallChain<br></a></td>
<td>&nbsp;</td><td>子チェインの呼び出し登録<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpCallChain2"> sceGpCallChain2<br></a></td>
<td>&nbsp;</td><td>子チェインを指定位置の後へ呼出登録<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpEndLevel"> sceGpEndLevel<br></a></td>
<td>&nbsp;</td><td>チェインの転送終了レベル設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitChain"> sceGpInitChain<br></a></td>
<td>&nbsp;</td><td>チェインの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpKickChain"> sceGpKickChain<br></a></td>
<td>&nbsp;</td><td>チェインの転送<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpKickChain2"> sceGpKickChain2<br></a></td>
<td>&nbsp;</td><td>チェインの転送<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpPrintChain"> sceGpPrintChain<br></a></td>
<td>&nbsp;</td><td>チェインの内容をコンソールに出力する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpRemoveNextChain"> sceGpRemoveNextChain<br></a></td>
<td>&nbsp;</td><td>親チェインからチェインを削除する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpRemoveNextPacket"> sceGpRemoveNextPacket<br></a></td>
<td>&nbsp;</td><td>チェインからパケットを削除する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpResetChain"> sceGpResetChain<br></a></td>
<td>&nbsp;</td><td>チェインのオーダリングテーブルのリセット<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpResetChainRev"> sceGpResetChainRev<br></a></td>
<td>&nbsp;</td><td>チェインのオーダリングテーブルの逆方向リセット<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSearchTailToRemove"> sceGpSearchTailToRemove<br></a></td>
<td>&nbsp;</td><td>削除のためのテイルポインタを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetStartLevel"> sceGpSetStartLevel<br></a></td>
<td>&nbsp;</td><td>チェインの開始レベル設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpTermChain"> sceGpTermChain<br></a></td>
<td>&nbsp;</td><td>チェインの中断設定<br></td></tr>
</table><br>
<font size=4><b>パケット操作関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpCopyPacket"> sceGpCopyPacket<br></a></td>
<td>&nbsp;</td><td>パケットのコピー<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInsertPacket"> sceGpInsertPacket<br></a></td>
<td>&nbsp;</td><td>パケットの追加<br></td></tr>
</table><br>
<font size=4><b>パケット初期値設定関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetDefaultAa1"> sceGpSetDefaultAa1<br></a></td>
<td>&nbsp;</td><td>AA1のデフォルト値を設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetDefaultAbe"> sceGpSetDefaultAbe<br></a></td>
<td>&nbsp;</td><td>ABEのデフォルト値を設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetDefaultCtxt"> sceGpSetDefaultCtxt<br></a></td>
<td>&nbsp;</td><td>使用コンテキストのデフォルト値を設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetDefaultDirectHL"> sceGpSetDefaultDirectHL<br></a></td>
<td>&nbsp;</td><td>directコマンドのデフォルトレベルを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetDefaultFog"> sceGpSetDefaultFog<br></a></td>
<td>&nbsp;</td><td>FGEのデフォルト値を設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetDefaultZ32"> sceGpSetDefaultZ32<br></a></td>
<td>&nbsp;</td><td>描画パケットが用いるレジスタのデフォルト値を設定する<br></td></tr>
</table><br>
<font size=4><b>パケット初期化関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitAd"> sceGpInitAd<br></a></td>
<td>&nbsp;</td><td>汎用レジスタ設定パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitAlphaEnv"> sceGpInitAlphaEnv<br></a></td>
<td>&nbsp;</td><td>アルファ環境設定パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitCall"> sceGpInitCall<br></a></td>
<td>&nbsp;</td><td>callパケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitLoadImage"> sceGpInitLoadImage<br></a></td>
<td>&nbsp;</td><td>イメージ転送パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitLoadTexelClut"> sceGpInitLoadTexelClut<br></a></td>
<td>&nbsp;</td><td>CLUT つきテクスチャ転送パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitPacket"> sceGpInitPacket<br></a></td>
<td>&nbsp;</td><td>パケットの初期化（汎用）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitPrimP"> sceGpInitPrimP<br></a></td>
<td>&nbsp;</td><td>P フォーマット描画パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitPrimR"> sceGpInitPrimR<br></a></td>
<td>&nbsp;</td><td>Rフォーマット描画パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitRef"> sceGpInitRef<br></a></td>
<td>&nbsp;</td><td>refパケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitTexEnv"> sceGpInitTexEnv<br></a></td>
<td>&nbsp;</td><td>テクスチャ環境設定パケットの初期化<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpInitTexEnvMipmap"> sceGpInitTexEnvMipmap<br></a></td>
<td>&nbsp;</td><td>MipMapつきテクスチャ環境設定パケットの初期化<br></td></tr>
</table><br>
<font size=4><b>セット関数（描画以外のパケット用）</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetAd"> sceGpSetAd<br></a></td>
<td>&nbsp;</td><td>汎用レジスタ設定パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetAlphaEnv"> sceGpSetAlphaEnv<br></a></td>
<td>&nbsp;</td><td>アルファ環境設定パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetAlphaEnvFunc"> sceGpSetAlphaEnvFunc<br></a></td>
<td>&nbsp;</td><td>アルファ環境設定パケットのアルファブレンディングファンクションの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetCall"> sceGpSetCall<br></a></td>
<td>&nbsp;</td><td>call パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetLoadImage"> sceGpSetLoadImage<br></a></td>
<td>&nbsp;</td><td>イメージ転送パケットを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetLoadImageByArgTim2"> sceGpSetLoadImageByArgTim2<br></a></td>
<td>&nbsp;</td><td>テクスチャパラメータ構造体と TIM2 を併用してイメージ転送パケットを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetLoadImageByTim2"> sceGpSetLoadImageByTim2<br></a></td>
<td>&nbsp;</td><td>TIM2 を使ってイメージ転送パケットを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetLoadTexelClut"> sceGpSetLoadTexelClut<br></a></td>
<td>&nbsp;</td><td>CLUT つきテクスチャ転送パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetLoadTexelClutByArgTim2"> sceGpSetLoadTexelClutByArgTim2<br></a></td>
<td>&nbsp;</td><td>テクスチャパラメータ構造体と TIM2 を併用して<br>CLUT つきテクスチャ転送パケットを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetLoadTexelClutByTim2"> sceGpSetLoadTexelClutByTim2<br></a></td>
<td>&nbsp;</td><td>TIM2 を使って CLUT つきテクスチャ転送パケットを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetRef"> sceGpSetRef<br></a></td>
<td>&nbsp;</td><td>ref パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetTexEnv"> sceGpSetTexEnv<br></a></td>
<td>&nbsp;</td><td>テクスチャ環境設定パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetTexEnvByArgTim2"> sceGpSetTexEnvByArgTim2<br></a></td>
<td>&nbsp;</td><td>テクスチャパラメータ構造体と TIM2 を併用して<br>テクスチャ環境設定パケットを設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetTexEnvByDrawEnv"> sceGpSetTexEnvByDrawEnv<br></a></td>
<td>&nbsp;</td><td>テクスチャ環境設定パケットの設定<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetTexEnvByTim2"> sceGpSetTexEnvByTim2<br></a></td>
<td>&nbsp;</td><td>TIM2 を使ってテクスチャ環境設定パケットを設定する<br></td></tr>
</table><br>
<font size=4><b>インデックス取得関数（描画パケット用）</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexQ#_R"> sceGpIndexQ#_R<br></a></td>
<td>&nbsp;</td><td>Q のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexQ_R"> sceGpIndexQ_R<br></a></td>
<td>&nbsp;</td><td>Q のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexRgba"> sceGpIndexRgba<br></a></td>
<td>&nbsp;</td><td>RGBA のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexRgba#"> sceGpIndexRgba#<br></a></td>
<td>&nbsp;</td><td> RGBA のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexSt#_R"> sceGpIndexSt#_R<br></a></td>
<td>&nbsp;</td><td>ST のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexSt_R"> sceGpIndexSt_R<br></a></td>
<td>&nbsp;</td><td> ST のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexStq#_P"> sceGpIndexStq#_P<br></a></td>
<td>&nbsp;</td><td> STQ のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexStq_P"> sceGpIndexStq_P<br></a></td>
<td>&nbsp;</td><td>STQ のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexUv"> sceGpIndexUv<br></a></td>
<td>&nbsp;</td><td>UV のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexUv#"> sceGpIndexUv#<br></a></td>
<td>&nbsp;</td><td>UV のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexXyzf"> sceGpIndexXyzf<br></a></td>
<td>&nbsp;</td><td>XYZF のインデックスを取得する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpIndexXyzf#"> sceGpIndexXyzf#<br></a></td>
<td>&nbsp;</td><td>XYZF のインデックスを取得する<br></td></tr>
</table><br>
<font size=4><b>セット関数（描画パケット用、一部マクロ関数）</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetAa1"> sceGpSetAa1<br></a></td>
<td>&nbsp;</td><td>AA1 の ON/OFF を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetAbe"> sceGpSetAbe<br></a></td>
<td>&nbsp;</td><td>アルファブレンディングの ON/OFF を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetCtxt"> sceGpSetCtxt<br></a></td>
<td>&nbsp;</td><td>CTXT の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetFog"> sceGpSetFog<br></a></td>
<td>&nbsp;</td><td>FOG の ON/OFF を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetRgb"> sceGpSetRgb<br></a></td>
<td>&nbsp;</td><td>RGB の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetRgba"> sceGpSetRgba<br></a></td>
<td>&nbsp;</td><td>RGBA の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetRgbaFM"> sceGpSetRgbaFM<br></a></td>
<td>&nbsp;</td><td>モノクロームパケットに色を設定する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetStq_P"> sceGpSetStq_P<br></a></td>
<td>&nbsp;</td><td>STQ の値を設定する_P（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetStq_R"> sceGpSetStq_R<br></a></td>
<td>&nbsp;</td><td>STQ の値を設定する_R（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetUv"> sceGpSetUv<br></a></td>
<td>&nbsp;</td><td>UV の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetXy"> sceGpSetXy<br></a></td>
<td>&nbsp;</td><td>XYZF2にXY の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetXyz"> sceGpSetXyz<br></a></td>
<td>&nbsp;</td><td>XYZF2にXYZ の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetXyz32"> sceGpSetXyz32<br></a></td>
<td>&nbsp;</td><td>XYZ2にXYZ の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetXyzf"> sceGpSetXyzf<br></a></td>
<td>&nbsp;</td><td>XYZF2にXYZF の値を設定する（マクロ関数）<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetZ32"> sceGpSetZ32<br></a></td>
<td>&nbsp;</td><td>描画パケットの使用レジスタXYZF2 / XYZ2を設定する<br></td></tr>
</table><br>
<font size=4><b>パケット単独転送関連関数</b></font>
<a name=#"Heading2"></a>
<hr border=1 width=100%><br>
<table>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpKickPacket"> sceGpKickPacket<br></a></td>
<td>&nbsp;</td><td>パケットを単独で転送<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpKickPacket2"> sceGpKickPacket2<br></a></td>
<td>&nbsp;</td><td>パケットを単独で転送<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSetPacketMode"> sceGpSetPacketMode<br></a></td>
<td>&nbsp;</td><td>パケットの転送モードを変更する<br></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
<td><a href="#sceGpSyncPacket / sceGpSyncPacketI"> sceGpSyncPacket / sceGpSyncPacketI<br></a></td>
<td>&nbsp;</td><td>パケット領域のキャッシュ掃き出し<br></td></tr>
</table>

<!-- 見出し　１，部見出し -->
<div style="margin-left:50px;"><br></div>
<br></td></tr></table></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>チェイン管理構造体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpChain"><font size=6>sceGpChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェイン管理構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct _sceGpChain {
	u_long128 *<i>ot</i>;
	u_long128 *<i>pKick</i>;
	u_long128 *<i>pEnd</i>;
	int <i>resolution</i>;
} <b>sceGpChain</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>ot</i>&nbsp;</td>
<td valign="TOP">&nbsp;オーダリングテーブルのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pKick</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA 転送開始アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pEnd</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA 転送終了アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>resolution</i>&nbsp;</td>
<td valign="TOP">&nbsp;オーダリングテーブルの解像度&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DMA チェインの管理構造体です<br><i>pKick</i>, <i>pEnd</i> で保持しているアドレスはDMA コントローラが扱うアドレスになっています。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>レジスタ共用体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpPack"><font size=6>sceGpPack<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>P フォーマットレジスタ共用体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef union _sceGpPack{
	sceGifPackRgbaq <i>rgbaq</i>;
	sceGifPackSt <i>st</i>;
	sceGifPackUv <i>uv</i>;
	sceGifPackXyzf <i>xyzf</i>;
	sceGifPackXyz <i>xyz</i>;
	sceGifPackFog <i>fog</i>;
	sceGifPackAd <i>ad</i>;
	sceGifPackNop <i>nop</i>;
	sceVu0FVECTOR <i>fv</i>;
	sceVu0IVECTOR <i>iv</i>;
	u_long128 <i>ul128</i>;
	u_long <i>ul</i>[2];
	u_int <i>ui</i>[4];
	float <i>f</i>[4];
} <b>sceGpPack</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>rgbaq</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF RGBAQ パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>st</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF ST パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>uv</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF UV パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>xyzf</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF XYZF パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>xyz</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF XYZ パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fog</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF FOG パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ad</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF AD パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>nop</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF NOP パッキング形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fv</i>&nbsp;</td>
<td valign="TOP">&nbsp;sceVu0FVECTOR 形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>iv</i>&nbsp;</td>
<td valign="TOP">&nbsp;sceVu0IVECTOR 形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ul128</i>&nbsp;</td>
<td valign="TOP">&nbsp;u_long128 形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ul</i>&nbsp;</td>
<td valign="TOP">&nbsp;u_long 形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ui</i>&nbsp;</td>
<td valign="TOP">&nbsp;u_int 形式&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>f</i>&nbsp;</td>
<td valign="TOP">&nbsp;float 形式&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">P フォーマット描画パケットで使用するレジスタ共用体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpReg"><font size=6>sceGpReg<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>R フォーマットレジスタ共用体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef union _sceGpReg{
	sceGsPrim <i>prim</i>;
	sceGsRgbaq <i>rgbaq</i>;
	sceGsSt <i>st</i>;
	sceGsUv <i>uv</i>;
	sceGsXyzf <i>xyzf</i>;
	sceGsXyz <i>xyz</i>;
	sceGsTex0 <i>tex0</i>;
	sceGsClamp <i>clamp</i>;
	sceGsFog <i>fog</i>;
	u_long <i>ul</i>;
	u_int <i>ui</i>[2];
} <b>sceGpReg</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>prim</i>&nbsp;</td>
<td valign="TOP">&nbsp;PRIM レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>rgbaq</i>&nbsp;</td>
<td valign="TOP">&nbsp;RGBAQ レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>st</i>&nbsp;</td>
<td valign="TOP">&nbsp;ST レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>uv</i>&nbsp;</td>
<td valign="TOP">&nbsp;UV レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>xyzf</i>&nbsp;</td>
<td valign="TOP">&nbsp;XYZF レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>xyz</i>&nbsp;</td>
<td valign="TOP">&nbsp;XYZ レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex0</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX0 レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>clamp</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLAMP レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fog</i>&nbsp;</td>
<td valign="TOP">&nbsp;FOG レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ul</i>&nbsp;</td>
<td valign="TOP">&nbsp;u_long 形式データ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ui</i>&nbsp;</td>
<td valign="TOP">&nbsp;u_int 形式データ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">R フォーマット描画パケットで使用するレジスタ共用体です。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>パケット構造体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpAd"><font size=6>sceGpAd<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>汎用レジスタ設定パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmanext;</i>
	sceGifTag <i>giftag;</i>
	struct {
		u_long <i>value;</i>
		u_long <i>addr;</i>
	}reg[1];
} <b>sceGpAd</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>value</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するレジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するレジスタの GS アドレス &nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">汎用レジスタ設定パケットの構造をしめす構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpAlphaEnv"><font size=6>sceGpAlphaEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>アルファ環境設定パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmanext;</i>
	sceGifTag <i>giftag;</i>
	sceGsAlpha <i>alpha;</i>
	long <i>alphaaddr;</i>
	sceGsPabe <i>pabe;</i>
	long <i>pabeaddr;</i>
	sceGsTexa <i>texa;</i>
	long <i>texaaddr;</i>
	sceGsFba <i>fba;</i>
	long <i>fbaaddr;</i>
} <b>sceGpAlphaEnv</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>alpha</i>&nbsp;</td>
<td valign="TOP">&nbsp;ALPHA レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>alphaaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;ALPHA レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pabe</i>&nbsp;</td>
<td valign="TOP">&nbsp;PABE レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pabeaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;PABE レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texa</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEXA レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texaaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEXA レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fba</i>&nbsp;</td>
<td valign="TOP">&nbsp;FBA レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fbaaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;FBA レジスタの GS アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">アルファ環境設定パケットの構造をしめす構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpCall"><font size=6>sceGpCall<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>call パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmacall;</i>
	sceDmaTag <i>dmanext;</i>
} <b>sceGpCall</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmacall</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">call パケットの構造をしめす構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpLoadImage"><font size=6>sceGpLoadImage<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>イメージ転送パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmacnt;</i>
	sceGifTag <i>giftag1;</i>
	sceGsBitbltbuf <i>bitbltbuf;</i>
	long <i>bitbltbufaddr;</i>
	sceGsTrxpos <i>trxpos;</i>
	long <i>trxposaddr;</i>
	sceGsTrxreg <i>trxreg;</i>
	long <i>trxregaddr;</i>
	sceGsTrxdir <i>trxdir;</i>
	long <i>trxdiraddr;</i>
	sceGifTag <i>giftag2;</i>
	sceDmaTag <i>dmaref;</i>
	sceDmaTag <i>dmanext;</i>
	sceGifTag <i>giftag3;</i>
	sceGsTexflush <i>texflush;</i>
	long <i>texflushaddr;</i>
} <b>sceGpLoadImage</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmacnt</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag1</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>bitbltbuf</i>&nbsp;</td>
<td valign="TOP">&nbsp;BITBLTBUF レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>bitbltbufaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;BITBLTBUF レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxpos</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXPOS レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxposaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXPOS レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxreg</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXREG レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxregaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXREG レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxdir</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXDIR レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxdiraddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXDIR レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag2</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dmaref</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag3</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texflush</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEXFLUSH レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texflushaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEXFLUSH レジスタの GS アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">イメージ転送パケットの構造を示す構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpLoadTexelClut"><font size=6>sceGpLoadTexelClut<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>CLUT つきテクスチャ転送パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	struct {
		sceDmaTag <i>dmacnt;</i>
		sceGifTag  giftag1<i>;</i>
		sceGsBitbltbuf bitbltbuf<i>;</i>
		long <i>bitbltbufaddr;</i>
		sceGsTrxpos <i>trxpos;</i>
		long <i>trxposaddr;</i>
		sceGsTrxreg <i>trxreg;</i>
		long <i>trxregaddr;</i>
		sceGsTrxdir <i>trxdir;</i>
		long <i>trxdiraddr;</i>
		sceGifTag <i>giftag2;</i>
		sceDmaTag <i>dmaref;</i>
	} trans[2];
	sceDmaTag <i>dmanext;</i>
	sceGifTag <i>giftag3;</i>
	sceGsTexflush <i>texflush;</i>
	long <i>texflushaddr;</i>
} <b>sceGpLoadTexelClut</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmacnt</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag1</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>bitbltbufaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;BITBLTBUF レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxpos</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXPOS レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxposaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXPOS レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxreg</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXREG レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxregaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXREG レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxdir</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXDIR レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>trxdiraddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TRXDIR レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag2</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dmaref</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag3</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texflush</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEXFLUSH レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texflushaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEXFLUSH レジスタの GS アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT つきテクスチャ転送パケットの構造を示す構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpPrimP"><font size=6>sceGpPrimP<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>P フォーマット描画パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmanext</i>;
	sceGifTag <i>giftag1</i>;
	sceGifPackAd <i>userreg</i>;
	sceGifTag <i>giftag2</i>;
	sceGpPack <i>reg</i>[1];
} <b>sceGpPrimP</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag1</i>&nbsp;</td>
<td valign="TOP">&nbsp;PRIM レジスタつき giftag&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>userreg</i>&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ設定レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag2</i>&nbsp;</td>
<td valign="TOP">&nbsp;giftag&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>reg</i>&nbsp;</td>
<td valign="TOP">&nbsp;描画パラメータレジスタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">タイプ SCE_GP_PRIM_P の描画パケットの構造をしめす構造体です。<br><i>dmanext</i>, <i>userreg</i>, <i>giftag1</i>, <i>giftag2</i> の各メンバは init 関数で設定されます。<br><i>reg</i> の要素数は実際には1以上の数になります。このため、この構造体の大きさは実際の描画パケットの大きさと一致しません。<br><i>reg</i>の内容はindex 関数と set 関数などを利用してユーザーが正しく設定しなければなりません。<br><i>userreg</i> には最初 NOP が入っていますが、モノクロームパケットのパケットカラーの設定のほか、ユーザーが自由に設定して使用することができます。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">初期設定では、<i>userreg</i> の内容は GIF PACKED A+D パケットとして扱われます。これを変更するには、メンバ <i>giftag1</i> の REGS0フィールドを適宜修正してください。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpPrimR"><font size=6>sceGpPrimR<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>R フォーマット描画パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmanext</i>;
	sceGifTag <i>giftag1</i>;
	sceGifPackAd <i>userreg</i>;
	sceGifTag <i>giftag2</i>;
	sceGpReg <i>reg</i>[1];
} <b>sceGpPrimR</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag1</i>&nbsp;</td>
<td valign="TOP">&nbsp;PRIM レジスタつき giftag&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>userreg</i>&nbsp;</td>
<td valign="TOP">&nbsp;ユーザ設定レジスタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag2</i>&nbsp;</td>
<td valign="TOP">&nbsp;giftag&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>reg</i>&nbsp;</td>
<td valign="TOP">&nbsp;描画パラメータレジスタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">タイプ SCE_GP_PRIM_R の描画パケットの構造をしめす構造体です。<br><i>dmanext</i>, <i>userreg</i>, <i>giftag1</i>, <i>giftag2</i> の各メンバは init 関数で設定されます。<br><i>reg</i>の内容はindex 関数と set 関数などを利用してユーザーが正しく設定しなければなりません。<br><i>reg</i> の要素数は実際には1以上の数になります。このため、この構造体の大きさは実際の描画パケットの大きさと一致しません。<br><i>userreg</i> には最初 NOP が入っていますが、モノクロームパケットのパケットカラーの設定のほか、ユーザーが自由に設定して使用することができます。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">初期設定では、<i>userreg</i> の内容は GIF PACKED A+D パケットとして扱われます。これを変更するにはメンバ <i>giftag1</i> の REGS0フィールドを適宜修正してください。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpRef"><font size=6>sceGpRef<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ref パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmaref;</i>
	sceDmaTag <i>dmanext;</i>
} <b>sceGpRef</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmaref</i>&nbsp;</td>
<td valign="TOP">&nbsp;DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ref パケットの構造をしめす構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpTexEnv"><font size=6>sceGpTexEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャ環境設定パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmanext;</i>
	sceGifTag <i>giftag;</i>
	sceGsTex1 <i>tex1;</i>
	long <i>tex1addr;</i>
	sceGsTex0 <i>tex0;</i>
	long <i>tex0addr;</i>
	sceGsClamp <i>clamp;</i>
	long <i>clampaddr;</i>
} <b>sceGpTexEnv</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex1</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX1 レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex1addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX1 レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex0</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX0 レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex0addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX0 レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>clamp</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLAMP レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>clampaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLAMP レジスタの GS アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャ環境設定パケットの構造をしめす構造体です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpTexEnvMipmap"><font size=6>sceGpTexEnvMipmap<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MIPMAP つきテクスチャ環境設定パケット構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	sceDmaTag <i>dmanext;</i>
	sceGifTag <i>giftag;</i>
	sceGsTex1 <i>tex1;</i>
	long <i>tex1addr;</i>
	sceGsTex0 <i>tex0;</i>
	long <i>tex0addr;</i>
	sceGsClamp <i>clamp;</i>
	long <i>clampaddr;</i>
	sceGsMiptbp1 <i>miptbp1;</i>
	long <i>miptbp1addr;</i>
	sceGsMiptbp2 <i>miptbp2;</i>
	long <i>miptbp2addr;</i>
} <b>sceGpTexEnvMipmap</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dmanext</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン連結用 DMA タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>giftag</i>&nbsp;</td>
<td valign="TOP">&nbsp;GIF タグ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex1</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX1 レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex1addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX1 レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex0</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX0 レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tex0addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;TEX0 レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>clamp</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLAMP レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>clampaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLAMP レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miptbp1</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIPTBP1 レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miptbp1addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIPTBP1 レジスタの GS アドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miptbp2</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIPTBP2 レジスタの値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miptbp2addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;MIPTBP2 レジスタの GS アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIPMAP つきテクスチャ環境設定パケットの構造をしめす構造体です。<br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>パラメータ構造体</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpTextureArg"><font size=6>sceGpTextureArg<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャパラメータ構造体<br></div>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct{
	short <i>tbp;</i>
	short <i>tbw;</i>
	short <i>tpsm;</i>
	short <i>tx;</i>
	short <i>ty;</i>
	short <i>tw;</i>
	short <i>th;</i>
	short <i>cbp;</i>
	short <i>cpsm;</i>
} <b>sceGpTextureArg</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tbp</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャベースポインタ (ワードアドレス/64)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tbw</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャバッファ幅(テクセル単位の幅/64)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tpsm</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャピクセル格納フォーマット&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tx</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャのバッファ内Xオフセット&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ty</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャのバッファ内Yオフセット&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tw</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャの幅（テクセル数）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>th</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャの高さ（テクセル数）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cbp</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLUTバッファベースポインタ (ワードアドレス/64)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>cpsm</i>&nbsp;</td>
<td valign="TOP">&nbsp;CLUT ピクセル格納フォーマット&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャやイメージデータのパラメータを設定する関数の引数として使用する構造体です。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>ユーティリティ関数（一部マクロ関数）</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpChkChainOtSize"><font size=6>sceGpChkChainOtSize<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>オーダリングチェインのサイズを求める（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpChkChainOtSize</b>(
<i>	r</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>r</i>&nbsp;</td>
<td valign="TOP">&nbsp;解像度&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定解像度のオーダリングチェインが使用するメモリのサイズ（quad word単位）を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定解像度のオーダリングチェインが使用するメモリのサイズを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpChkNumPtoV"><font size=6>sceGpChkNumPtoV<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ポリゴン数から頂点数を求める<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpChkNumPtoV</b>(
	u_int<i> type,</i>
	int<i> pnum</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pnum</i>&nbsp;</td>
<td valign="TOP">&nbsp;ポリゴン数&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">頂点数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたパケットタイプにおいて、ポリゴン数に対応する頂点数を返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpChkPacketSize"><font size=6>sceGpChkPacketSize<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットのサイズを求める<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpChkPacketSize</b>(
	u_int<i> type,</i>
	int<i> arg</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>arg</i>&nbsp;</td>
<td valign="TOP">&nbsp;引数(typeにより異なる)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ(quad word単位)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたタイプ・引数のパケットが使用するメモリのサイズを返します。単位はquad word(16byte)数です。引数<i>arg</i>の値は、関数sceGpInitPacket()で使用する引数と同じものを使用します。詳細は関数sceGpInitPacket()の項目を参照してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpGetTail"><font size=6>sceGpGetTail<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットのテイルポインタを取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceDmaTag *<b>sceGpGetTail</b>(
	void *<i>pPacket</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>pPacket</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットの先頭アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットのテイルポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットのテイルポインタを取得します。テイルとは、次に転送するパケットを接続する位置のことで、libgp のパケット構造体では DMAnext メンバの位置になります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpGetTailChain"><font size=6>sceGpGetTailChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの指定レベルのテイルポインタを取得<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceDmaTag *<b>sceGpGetTailChain</b>(
	sceGpChain *<i>chain</i>,
	int <i>level</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;取得するオーダリングテーブルのレベル&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チェインの指定レベルのテイルポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チェインの指定レベルのテイルポインタを取得します。テイルとは、次に転送するパケットを接続する位置のことで、libgp のチェイン管理構造体ではオーダリングテーブル内の各メンバの位置になります。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>チェイン操作関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpAddChain"><font size=6>sceGpAddChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>子チェインの登録<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpAddChain</b>(
	sceGpChain*<i> chain,</i>
	int<i> level,</i>
	sceGpChain<i> *chain2</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;親チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;（親チェインの）登録するレベル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chain2</i>&nbsp;</td>
<td valign="TOP">&nbsp;子チェインのアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">親チェインに子チェインを登録します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録した子チェインは、親チェインに続くチェインとなるため、単独では転送できなくなります。<br>同じ子チェインを同時に二度以上登録することは（登録先に関わらず）できません。<br>二カ所以上から同時に子チェインを呼び出したい場合には、sceGpCallChain()を使用して登録してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpAddChain2"><font size=6>sceGpAddChain2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>子チェインを指定位置の後へ登録<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceDmaTag *<b>sceGpAddChain2</b>(
	sceDmaTag *<i>tail,</i>
	sceGpChain *<i>chain2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;直前のパケットのテイルポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chain2</i>&nbsp;</td>
<td valign="TOP">&nbsp;子チェイン管理構造体のポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録したチェインの最終テイルポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">子チェインを、指定したテイルポインタの後方に登録します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録した子チェインは、親チェインに続くチェインとなるため、単独では転送できなくなります。<br>同じ子チェインを同時に二度以上登録することは（登録先に関わらず）できません。<br>二カ所以上から同時に子チェインを呼び出したい場合には、sceGpCallChain()を使用して登録してください。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpAddPacket"><font size=6>sceGpAddPacket<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインへのパケットの登録<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpAddPacket</b>(
	sceGpChain*<i> chain,</i>
	int<i> level,</i>
	void*<i> p</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;登録するレベル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;追加するパケット&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チェインのオーダリングテーブル内指定レベルにパケットを追加します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">同じパケットを同時に二度以上登録することは（登録先に関わらず）できません。<br>二カ所以上から複数回同じパケットを呼び出したい場合には、子チェインを用意してそこに当該パケットを登録し、sceGpCallChain()を使用して子チェインを複数回呼び出し登録してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpAddPacket2"><font size=6>sceGpAddPacket2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットを指定位置の後へ登録<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceDmaTag *<b>sceGpAddPacket2</b>(
	sceDmaTag *<i>tail,</i>
	void*<i> pPacket</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;直前のパケットのテイルポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pPacket</i>&nbsp;</td>
<td valign="TOP">&nbsp;登録するパケットのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録したパケットのテイルポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットを、指定したテイルポインタの後方に登録します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">同じパケットを同時に二度以上登録することは（登録先に関わらず）できません。<br>二カ所以上から複数回同じパケットを呼び出したい場合には、子チェインを用意してそこに当該パケットを登録し、sceGpCallChain() や sceGpCallChain2() を使用して、子チェインを複数回呼び出し登録してください。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpCallChain"><font size=6>sceGpCallChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>子チェインの呼び出し登録<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpCallChain</b>(
	sceGpChain*<i> chain,</i>
	int<i> level,</i>
	sceGpChain*<i> chain2,</i>
	sceGpCall*<i> callp</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;親チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;（親チェインの）呼び出し登録レベル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chain2</i>&nbsp;</td>
<td valign="TOP">&nbsp;子チェインのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>callp</i>&nbsp;</td>
<td valign="TOP">&nbsp;登録に使用するcallパケットのアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">親チェインに子チェインをCALL呼び出しで登録します。登録のためにCALLパケットを一つ消費します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">呼び出し登録に使用する<i>callp</i>パケットは、初期化・設定ともに必要ありませんが、メモリ領域の確保は転送終了まで必要です。<br>登録した子チェインは、親チェインに続くチェインとなるため、単独では転送できなくなります。<br>関数 sceAddChain() と違い、同じ子チェインを複数の親チェインから呼び出し登録することができます。<br>この関数で登録した子チェインをさらにsceGpAddChain()や sceGpAddChain2() 関数で子チェインとして登録することはできません。<br>チェインの呼び出し登録とcallパケットなどのCALLタグによる呼び出しの深さは、全体で２階層までに限られます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpCallChain2"><font size=6>sceGpCallChain2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>子チェインを指定位置の後へ呼出登録<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceDmaTag *<b>sceGpCallChain2</b>(
	sceDmaTag *<i>tail,</i>
	sceGpChain* <i>chain2,</i>
	sceGpCall* <i>callp</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;直前のパケットのテイルポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chain2</i>&nbsp;</td>
<td valign="TOP">&nbsp;登録するチェイン構造体のポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>callp</i>&nbsp;</td>
<td valign="TOP">&nbsp;登録に使用する call パケットのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録に使用した call パケットのテイルポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定したテイルポインタの後方に、子チェインを call 呼出で登録します。登録のためにCALLパケットを一つ消費します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">呼び出し登録に使用する CALLパケットは、初期化・設定ともに必要ありませんが、メモリ領域の確保は転送終了まで必要です。<br>登録した子チェインは、親チェインに続くチェインとなるため、単独では転送できなくなります。<br>関数 sceAddChain () sceAddChain2() と違い、同じ子チェインを複数の親チェインから呼び出し登録することができます。<br>この関数で登録した子チェインをさらにsceGpAddChain()や sceGpAddChain2() 関数で子チェインとして登録することはできません。<br>チェインの呼び出し登録とcallパケットなどのCALLタグによる呼び出しの深さは、全体で２階層までに限られます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpEndLevel"><font size=6>sceGpEndLevel<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの転送終了レベル設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetEndLevel</b>(
	sceGpChain<i> *chain,</i>
	int<i> level</i> 
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;中断するレベル&nbsp;</td>
</tr>
</table>
</div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーダリングテーブルの途中のレベルでチェインを終了するように設定します。<br>引数<i>level</i>以降に登録されたパケットやチェインは転送されません。(<i>level</i>に登録されたパケットも転送されません)<br>もともとの中断レベルに設定されていた内容 （次のパケットへのDMAタグなど）は新規設定レベルにコピーされます。また、もともとの中断レベルのDMAtagは NEXT タグに戻されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitChain"><font size=6>sceGpInitChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitChain</b>(
	sceGpChain<i> *chain,</i>
	void<i> *addr,</i>
	int<i> resolution</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;オーダリングテーブルのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>resolution</i>&nbsp;</td>
<td valign="TOP">&nbsp;オーダリングテーブルの解像度&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーダリングテーブルが使用するメモリのサイズ(quad word単位)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チェイン管理構造体の初期化をおこなったのち、関数 sceGpResetChain()を呼び出します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">返り値はオーダリングテーブルが使用するメモリのサイズです。チェイン管理構造体そのもののメモリサイズではありません。<br>チェイン管理構造体ととオーダリングテーブルに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpKickChain"><font size=6>sceGpKickChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの転送<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpKickChain</b>(
	sceGpChain<i> *chain,</i>
	int<i> path</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>path</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用パス&nbsp;<br>&nbsp;SCE_GP_PATH1: PATH1&nbsp;<br>&nbsp;SCE_GP_PATH2: PATH2&nbsp;<br>&nbsp;SCE_GP_PATH3: PATH3&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;転送開始した場合&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;転送に使用するDMAチャンネルが&nbsp;<br>&nbsp;busyで転送開始に失敗した場合&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DMAの空きを確認し、チェインのDMA転送を開始します。転送終了は待たずにリターンします。<br>転送が終了するまでは、登録したパケットやチェインの内容を変更したり、チェインのリセットなどをしてはいけません。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">PATH1,PATH2を指定した場合はDMAチャンネル1をTTE=1 (Tag Transfer Enable ON)で使用します。<br>PATH3を指定した場合はDMAチャンネル2をTTE=0 (Tag Transfer Enable OFF)で使用します。<br>PATH1とPATH2のパケットが混在している場合にはどちらを指定しても構いません。<br>転送の終了はたとえばsceGsSyncPath()関数などを使用して検出することができます。<br>必要に応じてDキャッシュのフラッシュなどをおこなってから呼び出してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpKickChain2"><font size=6>sceGpKickChain2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの転送<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpKickChain2</b>(
	sceGpChain<i> *chain,</i>
	int<i> path</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>path</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用パス&nbsp;<br>&nbsp;SCE_GP_PATH1: PATH1&nbsp;<br>&nbsp;SCE_GP_PATH2: PATH2&nbsp;<br>&nbsp;SCE_GP_PATH3: PATH3&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DMA チャネルの空きを確認せずに、チェインのDMA 転送を開始します。転送の終了は待たずにリターンします。<br>DMA チャネルの空きはあらかじめ確認しておいてから呼び出してください。<br>転送が終了するまでは、登録したパケットやチェインの内容を変更したり、チェインのリセットなどをしてはいけません。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">PATH1,PATH2を指定した場合はDMAチャンネル1をTTE=1 (Tag Transfer Enable ON)で使用します。<br>PATH3を指定した場合はDMAチャンネル2をTTE=0 (Tag Transfer Enable OFF)で使用します。<br>PATH1とPATH2のパケットが混在している場合にはどちらを指定しても構いません。<br>転送の終了はたとえばsceGsSyncPath()関数などを使用して検出することができます。<br>必要に応じてDキャッシュのフラッシュなどをおこなってから呼び出してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpPrintChain"><font size=6>sceGpPrintChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの内容をコンソールに出力する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpPrintChain</b>(
	sceGpChain<i> *chain,</i>
	int<i> verbosity,</i>
	int<i> from,</i>
	int<i> num</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>verbosity</i>&nbsp;</td>
<td valign="TOP">&nbsp;表示の詳細さ&nbsp;<br>&nbsp;0: 各パケットの量のみ&nbsp;<br>&nbsp;1: パケット種別も順に表示&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>from</i>&nbsp;</td>
<td valign="TOP">&nbsp;表示開始パケット番号&nbsp;<br>&nbsp;(verbosity=1で表示される番号を使用)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>num</i>&nbsp;</td>
<td valign="TOP">&nbsp;表示するパケット数(0:最後まで)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チェインと登録されているパケットやチェインを表示する、デバッグ用の関数です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpRemoveNextChain"><font size=6>sceGpRemoveNextChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>親チェインからチェインを削除する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceGpChain* <b>sceGpRemoveNextChain</b>(
	sceDmaTag<i> *tail,</i>
	sceGpChain<i> *chain</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;直前のパケットのテイルへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;取り除くチェインの管理構造体へのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取り除かれたチェインへのポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">いったん登録した子チェインをチェインから取り除きます。引数<i>tail</i>には、直前のパケットの「テイル」(パケット構造体のDMAnext メンバ)へのポインタを指定します。このテイルは関数sceGpSearchTailToRemove() で取得することができます。また、直前のパケットが判明している場合には、関数sceGpGetTailChain(), sceGpGetTail() などで取得することも可能です。<br>この関数は、sceGpAddChain()もしくは sceGpAddChain2()で登録した子チェインに対してのみ有効です。<br>sceGpCallChain()によって登録した子チェインはこの関数は使用できません。その場合は、子チェイン登録時に使用した Callパケットを削除してください。そうすることにより、子チェインの呼び出しもおこなわれなくなります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpRemoveNextPacket"><font size=6>sceGpRemoveNextPacket<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインからパケットを削除する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceGpChain* <b>sceGpRemoveNextPacket</b>(
	sceDmaTag<i> *tail,</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>tail</i>&nbsp;</td>
<td valign="TOP">&nbsp;直前のパケットのテイルへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取り除かれたパケットへのポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">いったん登録したパケットをチェインから取り除きます。引数 <i>tail</i>には、直前のパケットの「テイル」(パケット構造体のDMAnext メンバ)へのポインタを指定します。このテイルは関数sceGpSearchTailToRemove() で取得することができます。また、直前のパケットが判明している場合には、関数sceGpGetTailChain(), sceGpGetTail() などで取得することも可能です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpResetChain"><font size=6>sceGpResetChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインのオーダリングテーブルのリセット<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpResetChain</b>(
	sceGpChain<i> *chain</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーダリングテーブルを初期化し、チェインのpKickとpEndメンバを設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リセット前のパケットや別チェインの登録はすべて無効になります。<br>チェインのスタートレベル設定(sceGpSetStartLevel)や中断処理(sceGpTermChain() )も無効になります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpResetChainRev"><font size=6>sceGpResetChainRev<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインのオーダリングテーブルの逆方向リセット<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpResetChainRev</b>(
	sceGpChain<i> *chain</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーダリングテーブルを逆方向（末尾から先頭へ）に初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この関数でリセットをおこなうと、大きなlevelに登録されたパケットから先に転送されます。<br>同じlevel内では、順方向リセットと同様に、あとから登録されたパケットが先に転送されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSearchTailToRemove"><font size=6>sceGpSearchTailToRemove<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>削除のためのテイルポインタを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>sceDmaTag* <b>sceGpSearchTailToRemove</b>(
	sceGpChain<i> *chain,</i>
	void*<i> packet</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>packet</i>&nbsp;</td>
<td valign="TOP">&nbsp;削除するパケットへのポインタ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定したパケットを削除するときに使用する、テイルのポインタを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットをチェインから削除するときに sceGpRemoveNextPacket(), sceGpRemoveNextChain() で使用する、直前のパケットのテイルへのポインタを取得します。<br>削除対象がチェインである場合には、引数 packet として子チェインのpKick メンバを指定してください。たとえば、子チェインの管理構造体へのポインタが pChain の場合には pChain-&gt;pKick を指定します。ただし、登録時に sceGpCallChain() もしくはsceGpCallChain2() を使用して呼出登録をした子チェインについては、登録時に使用したCallパケットへのポインタを指定してください。<br>なお、この関数はチェインを先頭からたどって必要なテイルのポインタを探すため、特にチェインが長い場合には非常に時間がかかります。このため、削除は極力おこなわないようにするか、どうしても必要な場合には、この関数を使用するのではなく、あらかじめ登録時に必要なテイルポインタ、もしくは直前のパケットを記憶しておく方が効率的です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetStartLevel"><font size=6>sceGpSetStartLevel<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの開始レベル設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetStartLevel</b>(
	sceGpChain<i> *chain,</i>
	int<i> level</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;途中開始するレベル&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーダリングテーブルの途中のレベルからでチェインが開始するように設定します。<br>引数<i>level</i>より前に登録されたパケットやチェインは転送されません。(<i>level</i>に登録されたパケットは転送されます)<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpTermChain"><font size=6>sceGpTermChain<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>チェインの中断設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpTermChain</b>(
	sceGpChain<i> *chain,</i>
	int<i> level,</i>
	int<i> isret</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>chain</i>&nbsp;</td>
<td valign="TOP">&nbsp;チェイン管理構造体のアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>level</i>&nbsp;</td>
<td valign="TOP">&nbsp;中断するレベル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>isret</i>&nbsp;</td>
<td valign="TOP">&nbsp;0: END タグで中断する&nbsp;<br>&nbsp;1: RET タグで中断する(Call呼び出し用)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">互換性保持のために残してある古い関数ですので、通常はsceGpSetEndLevel() を使用してください。<br><br>オーダリングテーブルの途中のレベルでチェインを終了するように設定します。<br>引数<i>level</i>以降に登録されたパケットやチェインは転送されません。(<i>level</i>に登録されたパケットも転送されません)<br>もとの設定レベルより大きなレベルを設定することはできません。また、sceAddChain() や sceAddChain2() で登録されている子チェインに対しこの関数で操作をおこなってはいけません。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>パケット操作関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpCopyPacket"><font size=6>sceGpCopyPacket<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットのコピー<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpCopyPacket</b>(
	void* <i>dp,</i>
	void* <i>sp</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>dp</i>&nbsp;</td>
<td valign="TOP">&nbsp;コピー先パケット&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>sp</i>&nbsp;</td>
<td valign="TOP">&nbsp;コピー元パケット&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">コピーしたメモリのサイズ(quad word単位)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットをコピーします。<br>コピー元パケットはinit関数が既に呼ばれたものでなければなりません。<br>コピー先パケットは、コピー後はinit関数やset関数を呼ばなくても構いません。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">コピー先パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInsertPacket"><font size=6>sceGpInsertPacket<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットの追加<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpInsertPacket</b>(
	void*<i> pa,</i>
	void*<i> pb</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>pa</i>&nbsp;</td>
<td valign="TOP">&nbsp;追加の直前にあるパケット&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pb</i>&nbsp;</td>
<td valign="TOP">&nbsp;追加するパケット&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定パケット(<i>pa</i>)の直後に新しいパケット(<i>pb</i>)を追加します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">チェインの途中にパケットを挿入したい場合に使用します。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>パケット初期値設定関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetDefaultAa1"><font size=6>sceGpSetDefaultAa1<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>AA1のデフォルト値を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetDefaultAa1</b>(
	int<i> aa1</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>aa1</i>&nbsp;</td>
<td valign="TOP">&nbsp;デフォルトAA1ビット (0: AA1 ON, 1: AA1 OFF)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">今後のinit関数において、描画パケットが使用するAA1 (1パスアンチエイリアシング)の値を設定します。初期値は0 (OFF)です。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ここでの設定は、設定以降に呼び出されるinit関数に対してのみ有効です。すでにinit関数を読んだ描画パケットのAA1ビットを変更するには、マクロ関数sceGpSetAa1()を使用してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetDefaultAbe"><font size=6>sceGpSetDefaultAbe<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ABEのデフォルト値を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetDefaultAbe</b>(
	int<i> abe</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>abe</i>&nbsp;</td>
<td valign="TOP">&nbsp;デフォルトABEビット&nbsp;<br>&nbsp;0: アルファブレンディングOFF&nbsp;<br>&nbsp;1: アルファブレンディングON&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">今後のinit関数において、描画パケットが使用するABE(アルファブレンディングイネーブル)の値を設定します。初期値は0 (OFF)です。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ここでの設定は、設定以降に呼び出されるinit関数に対してのみ有効です。すでにinit関数を読んだ描画パケットのABEビットを変更するには、マクロ関数sceGpSetAbe()を使用してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetDefaultCtxt"><font size=6>sceGpSetDefaultCtxt<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>使用コンテキストのデフォルト値を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetDefaultCtxt</b>(
	int<i> ctxt</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>ctxt</i>&nbsp;</td>
<td valign="TOP">&nbsp;デフォルトコンテキスト(0: CTXT1, 1: CTXT2)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">今後のinit関数において、描画パケットが使用するコンテキストを設定します。0を設定するとCTXT1が、1を設定するとCTXT2が使用されるようになります。初期値は0 (CTXT1)です。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ここでの設定は描画パケットのPRIMレジスタにのみ影響します。テクスチャ環境設定パケット、アルファ環境設定パケットなどの描画以外のパケットのコンテキストは、それぞれの方法で設定する必要があります。<br>ここでの設定は、設定以降に呼び出されるinit関数に対してのみ有効です。すでにinit関数を読んだ描画パケットの使用コンテキストを変更するには、マクロ関数sceGpSetCtxt()を使用してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetDefaultDirectHL"><font size=6>sceGpSetDefaultDirectHL<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>directコマンドのデフォルトレベルを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetDefaultDirectHL</b>(
	int<i> on</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>on</i>&nbsp;</td>
<td valign="TOP">&nbsp;0: Direct コマンドを使用する&nbsp;<br>&nbsp;1: DirectHLコマンドを使用する&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">今後のinit関数において、PATH2データ転送の際にパケットが使用するコマンドを制御します。初期値は0 (Direct コマンドを使用する)です。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Direct, DirectHLコマンドの違いについてはEE User's ManualのVPUの章を参照してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetDefaultFog"><font size=6>sceGpSetDefaultFog<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>FGEのデフォルト値を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetDefaultFog</b>(
	int<i> fge</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>fge</i>&nbsp;</td>
<td valign="TOP">&nbsp;デフォルトFGEビット(0: フォギングOFF, 1: フォギングON)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">今後のinit関数において、描画パケットが使用するFGE(フォギングイネーブル)の値を設定します。初期値は0 (OFF)です。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ここでの設定は、設定以降に呼び出されるinit関数に対してのみ有効です。すでにinit関数を読んだ描画パケットのFGEビットを変更するには、マクロ関数sceGpSetFge()を使用してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetDefaultZ32"><font size=6>sceGpSetDefaultZ32<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>描画パケットが用いるレジスタのデフォルト値を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetDefaultZ32</b>(
	int<i> on</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>on </i>&nbsp;</td>
<td valign="TOP">&nbsp;描画パケットで0: XYZF2を使用する, 1: XYZ2を使用する&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">今後の init 関数において、描画パケットでXYZF2を使うかXYZ2を使うか制御します。初期値は 0 (XYZF2を使用する) です。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ここでの設定は、設定以降に呼び出される init 関数に対してのみ有効です。すでに init 関数を読んだ描画パケットのレジスタ記述子を変更するには、sceGpSetZ32() を使用してください。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>パケット初期化関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitAd"><font size=6>sceGpInitAd<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>汎用レジスタ設定パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitAd</b>(
	sceGpAd<i> *p,</i>
	int<i> num</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>num</i>&nbsp;</td>
<td valign="TOP">&nbsp;レジスタ設定の数&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスに汎用レジスタ設定パケットを作成、初期化します。引数として、設定するレジスタの数を与えます。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>汎用レジスタ設定パケットの大きさは、sceGpAd 構造体の大きさとは異なります。<br>sceGpAd 構造体のうち、この関数で設定されるメンバは dmanext の一部, giftag です。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitAlphaEnv"><font size=6>sceGpInitAlphaEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>アルファ環境設定パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitAlphaEnv</b>(
	sceGpAlphaEnv<i> *p,</i>
	int<i> ctxt</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ctxt</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するコンテキスト (0: CTXT1, 1: CTXT2)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスにアルファ環境設定パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpAlphaEnv 構造体のうち、この関数で設定されるメンバは dmanext の一部, giftag, alphaaddr, pabeaddr, texaaddr, fbaaddr です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitCall"><font size=6>sceGpInitCall<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>callパケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitCall</b>(
	sceGpCall<i> *p</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスにcallパケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpCall 構造体のうち、この関数で設定されるメンバは dmacall の一部、dmanext の一部です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitLoadImage"><font size=6>sceGpInitLoadImage<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>イメージ転送パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitLoadImage</b>(
	sceGpLoadImage<i> *p</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスにイメージ転送パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpInitLoadImage 構造体のうち、この関数で設定されるメンバは dmacnt, giftag1, bitbltbufaddr, trxposaddr, trxregaddr, trxdiraddr, giftag2, dmaref の一部, dmanext の一部, giftag3, texflush, texflushaddr です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitLoadTexelClut"><font size=6>sceGpInitLoadTexelClut<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>CLUT つきテクスチャ転送パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitLoadTexelClut</b>(
	sceGpLoadTexelClut<i> *p</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスに CLUT つきテクスチャ転送パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpLoadTexelClut 構造体のうち、この関数で設定されるメンバは trans[0].dmacnt, trans[0].giftag1, trans[0].giftag2, trans[0].dmaref の一部, trans[0].bitbltbufaddr, trans[0].trxposaddr, trans[0].trxregaddr, trans[0].trxdiraddr,  trans[1].dmacnt, trans[1].giftag1, trans[1].giftag2, trans[1].dmaref の一部, trans[1].bitbltbufaddr, trans[1].trxposaddr, trans[1].trxregaddr, trans[1].trxdiraddr, dmanext の一部, giftag3, texflush, texflushaddr です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitPacket"><font size=6>sceGpInitPacket<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットの初期化（汎用）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitPacket</b>(
	void<i> *p,</i>
	u_int<i> type,</i>
	int<i> arg</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>arg</i>&nbsp;</td>
<td valign="TOP">&nbsp;引数&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ(quad word単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">タイプにより以下の関数を呼び出して、パケットの初期化をします。引数および動作の詳細は、それぞれの関数リファレンスを参照してください。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>タイプ</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>呼び出される関数</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_PRIM_R|サブタイプ&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitPrimR((sceGpPrimR*)p, type, arg)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_PRIM_P|サブタイプ&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitPrimP((sceGpPrimP*)p, type, arg)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHAENV&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitAlphaEnv((sceGpAlphaEnv*)p, arg);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_TEXENV&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitTexEnv((sceGpTexEnv*)p, arg);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_TEXENVMIPMAP&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitTexEnvMipmap&nbsp;<br>&nbsp;((sceGpTexEnvMipmap*)p, arg);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_LOADIMAGE&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitLoadImage((sceGpLoadImage*)p);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_LOADTEXELCLUT&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitLoadTexelClut&nbsp;<br>&nbsp;((sceGpLoadTexelClut*)p);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_AD&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitAd((sceGpAd*)p, arg);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_REF&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitRef((sceGpRef*)p);&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_CALL&nbsp;</td>
<td valign="TOP">&nbsp;sceGpInitCall((sceGpCall*)p);&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitPrimP"><font size=6>sceGpInitPrimP<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>P フォーマット描画パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitPrimP</b>(
	sceGpPrimP<i> *p,</i>
	u_int<i> type,</i>
	int<i> pnum</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pnum</i>&nbsp;</td>
<td valign="TOP">&nbsp;ポリゴン数&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスに P フォーマット描画パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>描画パケットの大きさは、sceGpPrimP の構造体の大きさとは異なります。<br>sceGpPrimP 構造体のうち、この関数で設定されるメンバは dmanext の一部, giftag1, userreg, giftag2 です。userreg は NOP に設定されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitPrimR"><font size=6>sceGpInitPrimR<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>Rフォーマット描画パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitPrimR</b>(
	sceGpPrimR<i> *p,</i>
	u_int<i> type,</i>
	int<i> pnum</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>pnum</i>&nbsp;</td>
<td valign="TOP">&nbsp;ポリゴン数&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ(quad word単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスにRフォーマット描画パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>描画パケットの大きさは、sceGpPrimRの構造体の大きさとは異なります。<br>sceGpPrimR構造体のうち、この関数で設定されるメンバはdmanextの一部, giftag1, userreg, giftag2 です。userreg は NOP に設定されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitRef"><font size=6>sceGpInitRef<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>refパケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitRef</b>(
	sceGpRef<i> *p</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスにrefパケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpRef 構造体のうち、この関数で設定されるメンバは dmaref の一部、dmanext の一部 です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitTexEnv"><font size=6>sceGpInitTexEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャ環境設定パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitTexEnv</b>(
	sceGpTexEnv<i> *p,</i>
	int<i> ctxt</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ctxt</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するコンテキスト (0: CTXT1, 1: CTXT2)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスにテクスチャ環境設定パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpTexEnv 構造体のうち、この関数で設定されるメンバは dmanext の一部, giftag, tex1addr, tex0addr, clampaddr です。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpInitTexEnvMipmap"><font size=6>sceGpInitTexEnvMipmap<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>MipMapつきテクスチャ環境設定パケットの初期化<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpInitTexEnvMipmap</b>(
	sceGpTexEnvMipmap<i> *p,</i>
	int<i> ctxt</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットを作成するアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ctxt</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するコンテキスト (0: CTXT1, 1: CTXT2)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットが使用するメモリのサイズ (quad word 単位) を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定アドレスに MipMap つきテクスチャ環境設定パケットを作成、初期化します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットに必要なメモリ領域は適切なアライメントで外部で確保しておかなければなりません。<br>sceGpTexEnvMipmap 構造体のうち、この関数で設定されるメンバは dmanext の一部, giftag, tex1addr, tex0addr, clampaddr, miptbpaddr, miptbp2addr です。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>セット関数（描画以外のパケット用）</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetAd"><font size=6>sceGpSetAd<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>汎用レジスタ設定パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetAd</b>(
	sceGpAd<i> *p,</i>
	int<i> index,</i>
	u_long<i> addr,</i>
	u_long<i> value</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>index</i>&nbsp;</td>
<td valign="TOP">&nbsp;レジスタ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定する GS レジスタのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>value</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定する値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケット内の <i>index</i> 番目で設定するレジスタを設定します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetAlphaEnv"><font size=6>sceGpSetAlphaEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>アルファ環境設定パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetAlphaEnv</b>(
	sceGpAlphaEnv*<i> p,</i>
	int<i> func,</i>
	int<i> fix</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>func</i>&nbsp;</td>
<td valign="TOP">&nbsp;アルファブレンディングファンクション (後述)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fix</i>&nbsp;</td>
<td valign="TOP">&nbsp;FIX 値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたファンクションを実行するようにパケットを設定します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>設定値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>出力カラー</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>ブレンディング関数</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_NOP&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーそのまま&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)*128+0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_INTER_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp;As で内挿したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-Cd)◎As+Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_INTER_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp;Ad で内挿したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-Cd)◎Ad+Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_INTER_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp;FIX で内挿したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-Cd)◎FIX+Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_RINTER_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp; (128-As) で内挿したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-Cs)◎As+Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_RINTER_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp;(128-Ad) で内挿したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-Cs)◎Ad+Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_RINTER_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp;(128-FIX) で内挿したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-Cs)◎FIX+Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーと&nbsp;<br>&nbsp;デスティネーションカラーを&nbsp;<br>&nbsp;足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎128+Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CS_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに&nbsp;<br>&nbsp; FIX をかけたものを&nbsp;<br>&nbsp;(デスティネーション&nbsp;<br>&nbsp;カラーに) 足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎FIX+ Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CD_FIX&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーに FIX をかけた&nbsp;<br>&nbsp;ものを(ソースカラーに) &nbsp;<br>&nbsp;足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-0)◎128+Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CS_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに&nbsp;<br>&nbsp; As をかけたものを&nbsp;<br>&nbsp;(デスティネーション&nbsp;<br>&nbsp;カラーに) 足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎As+Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CD_AS&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーに As をかけた&nbsp;<br>&nbsp;ものを(ソースカラーに) &nbsp;<br>&nbsp;足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-0)◎As+Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CS_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに&nbsp;<br>&nbsp; Ad をかけたものを&nbsp;<br>&nbsp;(デスティネーション&nbsp;<br>&nbsp;カラーに) 足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎Ad+Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CD_AD&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーに Ad をかけた&nbsp;<br>&nbsp;ものを(ソースカラーに)&nbsp;<br>&nbsp; 足したもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-0)◎Ad+Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS&nbsp;</td>
<td valign="TOP">&nbsp; ソースカラーを&nbsp;<br>&nbsp; (デスティネーション&nbsp;<br>&nbsp;カラーから)引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cs)◎128+ Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD&nbsp;</td>
<td valign="TOP">&nbsp; デスティネーション&nbsp;<br>&nbsp;カラーを (ソース&nbsp;<br>&nbsp;カラーから)引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cd)◎128+ Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに &nbsp;<br>&nbsp;FIX をかけたものを&nbsp;<br>&nbsp;(デスティネーション&nbsp;<br>&nbsp;カラーから) 引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cs)◎FIX+ Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD_FIX&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーに FIX をかけた&nbsp;<br>&nbsp;ものを(ソースカラー&nbsp;<br>&nbsp;から) 引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cd)◎FIX+ Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに As を&nbsp;<br>&nbsp;かけたものを&nbsp;<br>&nbsp;(デスティネーション&nbsp;<br>&nbsp;カラーから) 引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cs)◎As+ Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD_AS&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーに As をかけた&nbsp;<br>&nbsp;ものを(ソースカラー&nbsp;<br>&nbsp;から) 引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cd)◎As+ Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに&nbsp;<br>&nbsp; Ad をかけたものを&nbsp;<br>&nbsp;(デスティネーション&nbsp;<br>&nbsp;カラーから) 引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cs)◎Ad+ Cd&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD_AD&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーにAdをかけた&nbsp;<br>&nbsp;ものを(ソースカラー&nbsp;<br>&nbsp;から) 引いたもの&nbsp;</td>
<td valign="TOP">&nbsp;(0-Cd)◎Ad+ Cs&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CS_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーにAsを&nbsp;<br>&nbsp;かけたもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎As+0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CS_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーにAdを&nbsp;<br>&nbsp;かけたもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎Ad+0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CS_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに FIX を&nbsp;<br>&nbsp;かけたもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cs-0)◎FIX+0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CD_AS&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーにAs をかけたもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-0)◎As+0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CD_AD&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーにAd をかけたもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-0)◎Ad+0&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CD_FIX&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーション&nbsp;<br>&nbsp;カラーにFIX をかけたもの&nbsp;</td>
<td valign="TOP">&nbsp;(Cd-0)◎FIX+0&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">アルファブレンディングの掛け算では 128 が 1.0 に相当し、「X に Y をかける」「X ◎Ｙ」とは、(X * Y)&gt;&gt;7 の演算のことを指します。<br>ここに挙げた変数で設定できるファンクションは、GS で可能なアルファブレンディングをすべて網羅していません。<br>これ以外の設定を使用したい場合には、設定後、パケットの内容を書き換えてください。<br>PABE, FBA レジスタの設定値は 0 になります。変更する場合には設定後、パケットの内容を書き換えてください。<br>なお、PABE および FBE レジスタはコンテキスト切り替えができませんので、コンテキスト切り替えを使用する場合には競合関係に注意してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetAlphaEnvFunc"><font size=6>sceGpSetAlphaEnvFunc<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>アルファ環境設定パケットのアルファブレンディングファンクションの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetAlphaEnvFunc</b>(
	sceGpAlphaEnv*<i> p,</i>
	int<i> func,</i>
	int<i> fix</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>func</i>&nbsp;</td>
<td valign="TOP">&nbsp;アルファブレンディングファンクション (後述)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>fix</i>&nbsp;</td>
<td valign="TOP">&nbsp;FIX 値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたファンクションを実行するようにパケットを設定します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>設定値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>出力カラー</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_NOP&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーそのまま&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_INTER_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーをAs で内挿したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_INTER_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーをAd で内挿したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_INTER_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーをFIX で内挿したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_RINTER_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーを(128-As) で内挿したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_RINTER_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーを(128-Ad) で内挿したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_RINTER_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーを(128-FIX) で内挿したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーとデスティネーション&nbsp;<br>&nbsp;カラーを足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CS_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに FIX をかけたものを&nbsp;<br>&nbsp;(デスティネーションカラーに) 足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CD_FIX&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに FIX をかけた&nbsp;<br>&nbsp;ものを(ソースカラーに) 足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CS_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに As をかけたものを&nbsp;<br>&nbsp;(デスティネーションカラーに) 足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CD_AS&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに As をかけた&nbsp;<br>&nbsp;ものを(ソースカラーに) 足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CS_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに Ad をかけたものを&nbsp;<br>&nbsp;(デスティネーションカラーに) 足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_ADD_CD_AD&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに Ad をかけた&nbsp;<br>&nbsp;ものを(ソースカラーに) 足したもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS&nbsp;</td>
<td valign="TOP">&nbsp; ソースカラーを&nbsp;<br>&nbsp; (デスティネーションカラーから)引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD&nbsp;</td>
<td valign="TOP">&nbsp; デスティネーションカラーを &nbsp;<br>&nbsp;(ソースカラーから)引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに FIX をかけたものを&nbsp;<br>&nbsp;(デスティネーションカラーから) 引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD_FIX&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに FIX をかけた&nbsp;<br>&nbsp;ものを(ソースカラーから) 引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに As をかけたものを&nbsp;<br>&nbsp;(デスティネーションカラーから) 引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD_AS&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに As をかけた&nbsp;<br>&nbsp;ものを(ソースカラーから) 引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CS_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに Ad をかけたものを&nbsp;<br>&nbsp;(デスティネーションカラーから) 引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_SUB_CD_AD&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに Ad をかけた&nbsp;<br>&nbsp;ものを(ソースカラーから) 引いたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CS_AS&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに As をかけたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CS_AD&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに Ad をかけたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CS_FIX&nbsp;</td>
<td valign="TOP">&nbsp;ソースカラーに FIX をかけたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CD_AS&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに&nbsp;<br>&nbsp;As をかけたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CD_AD&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに&nbsp;<br>&nbsp;Ad をかけたもの&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;SCE_GP_ALPHA_MUL_CD_FIX&nbsp;</td>
<td valign="TOP">&nbsp;デスティネーションカラーに&nbsp;<br>&nbsp;FIX をかけたもの&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">アルファブレンディングの掛け算では 128 が 1.0 に相当し、「X に Y をかける」とは、(X * Y)&gt;&gt;7 の演算のことを指します。<br>ここに挙げた変数で設定できるファンクションは、GS で可能なアルファブレンディングをすべて網羅していません。<br>これ以外の設定を使用したい場合には、別途パケットの内容を書き換えてください。<br>PABE, TEXA, FBA レジスタの設定値は変更しません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetCall"><font size=6>sceGpSetCall<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>call パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetCall</b>(
	sceGpCall<i> *p,</i>
	void*<i> addr</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;call で呼び出す DMA チェインのアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">call パケットの内容を設定します。呼び出される DMA チェインの最後には、転送時には ret タグがついていなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetLoadImage"><font size=6>sceGpSetLoadImage<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>イメージ転送パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetLoadImage</b>(
	sceGpLoadImage<i> *p,</i>
	sceGpTextureArg<i> *texarg,</i>
	void<i> *srcaddr,</i>
	int<i> isClut</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texarg</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャパラメータ構造体&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>srcaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;メインメモリ上のイメージデータのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>isClut</i>&nbsp;</td>
<td valign="TOP">&nbsp;0: テクセルデータ 1: CLUT データ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャパラメータ構造体の設定を使用して、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT データの並び替えはおこないません。そのままの順序で GS に転送されます。<br>イメージデータのアドレスは 128bit アラインされている必要があります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetLoadImageByArgTim2"><font size=6>sceGpSetLoadImageByArgTim2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャパラメータ構造体と TIM2 を併用してイメージ転送パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetLoadImageByArgTim2</b>(
	sceGpLoadImage<i> *p,</i>
	const<i> sceGpTextureArg *arg,</i>
	const<i> void *ptim2,</i>
	int<i> picture,</i>
	int<i> miplevel,</i>
	int<i> isClut</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>arg</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャパラメータ構造体&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ptim2</i>&nbsp;</td>
<td valign="TOP">&nbsp;TIM2 データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>picture</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用するピクチャ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miplevel</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用する mipmap レベル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>isClut</i>&nbsp;</td>
<td valign="TOP">&nbsp;0:テクセルデータ&nbsp;<br>&nbsp;1:CLUT データ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャパラメータ構造体と TIM2 データ内の設定を使用して、パケットの内容を設定します。両者に存在する設定はテクスチャパラメータ構造体の値が優先されますが、テクスチャパラメータ構造体メンバの値が負の場合には TIM2 データの設定を使用します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT データの並び替えはおこないません。そのままの順序で GS に転送されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetLoadImageByTim2"><font size=6>sceGpSetLoadImageByTim2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>TIM2 を使ってイメージ転送パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetLoadImageByTim2</b>(
	sceGpLoadImage<i> *p,</i>
	const<i> void *ptim2,</i>
	int<i> picture,</i>
	int<i> miplevel,</i>
	int<i> isClut</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ptim2</i>&nbsp;</td>
<td valign="TOP">&nbsp;TIM2 データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>picture</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用するピクチャ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miplevel</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用する mipmap レベル&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>isClut</i>&nbsp;</td>
<td valign="TOP">&nbsp;0:テクセルデータ&nbsp;<br>&nbsp;1:CLUT データ&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">TIM2 データ内の設定を使用して、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT データの並び替えはおこないません。そのままの順序で GS に転送されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetLoadTexelClut"><font size=6>sceGpSetLoadTexelClut<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>CLUT つきテクスチャ転送パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetLoadTexelClut</b>(
	sceGpLoadTexelClut<i> *p,</i>
	sceGpTextureArg<i> *texarg,</i>
	void<i> *tsrcaddr,</i>
	void<i> *csrcaddr</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texarg</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャパラメータ構造体&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tsrcaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;メインメモリ上のテクセルデータのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>csrcaddr</i>&nbsp;</td>
<td valign="TOP">&nbsp;メインメモリ上の CLUT データのアドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャパラメータ構造体の設定を使用して、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT データの並び替えはおこないません。そのままの順序で GS に転送されます。<br>テクセル、CLUT データのアドレスは、それぞれ 128bit アラインされている必要があります。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetLoadTexelClutByArgTim2"><font size=6>sceGpSetLoadTexelClutByArgTim2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャパラメータ構造体と TIM2 を併用して<br>CLUT つきテクスチャ転送パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetLoadTexelClutByArgTim2</b>(
	sceGpLoadTexelClut<i> *p,</i>
	const<i> sceGpTextureArg *arg,</i>
	const<i> void *ptim2,</i>
	int<i> picture,</i>
	int<i> miplevel</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>arg</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャパラメータ構造体&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ptim2</i>&nbsp;</td>
<td valign="TOP">&nbsp;TIM2 データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>picture</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用するピクチャ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miplevel</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用する mipmap レベル&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャパラメータ構造体と TIM2 データ内の設定を使用して、パケットの内容を設定します。両者に存在する設定はテクスチャパラメータ構造体の値が優先されますが、テクスチャパラメータ構造体メンバの値が負の場合には TIM2 データの設定を使用します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT データの並び替えはおこないません。そのままの順序で GS に転送されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetLoadTexelClutByTim2"><font size=6>sceGpSetLoadTexelClutByTim2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>TIM2 を使って CLUT つきテクスチャ転送パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetLoadTexelClutByTim2</b>(
	sceGpLoadTexelClut<i> *p,</i>
	const<i> void *ptim2,</i>
	int<i> picture,</i>
	int<i> miplevel</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ptim2</i>&nbsp;</td>
<td valign="TOP">&nbsp;TIM2 データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>picture</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用するピクチャ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miplevel</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用する mipmap レベル&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">TIM2 データ内の設定を使用して、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">CLUT データの並び替えはおこないません。そのままの順序で GS に転送されます。<br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetRef"><font size=6>sceGpSetRef<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ref パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetRef</b>(
	sceGpRef<i> *p,</i>
	void*<i> addr,</i>
	int<i> size,</i>
	int<i> path</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>addr</i>&nbsp;</td>
<td valign="TOP">&nbsp;転送データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>size</i>&nbsp;</td>
<td valign="TOP">&nbsp;転送サイズ (quad word 単位)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>path</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用パス&nbsp;<br>&nbsp;SCE_GP_PATH1: PATH1&nbsp;<br>&nbsp;SCE_GP_PATH2: PATH2&nbsp;<br>&nbsp;SCE_GP_PATH3: PATH3&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ref パケットの内容を設定します。<br>転送データを PATH1 用の場合 (VIF コマンドや VUMEM, VU1 で使用するデータが入っている場合) には、引数 <i>path</i> に PATH1 を設定してください。<br>PATH2 もしくは PATH3 を指定すると、dmaref メンバの再上位 32bit に Direct もしくは DirectHL コマンドが挿入され、VIF1 から GIF へ素通りします。<br>libgp では、チェイン転送時に PATH1 もしくは PATH2 を使用する場合には TTE (Tag Transfer enable) bit が ON になることにご注意ください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetTexEnv"><font size=6>sceGpSetTexEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャ環境設定パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetTexEnv</b>(
	sceGpTexEnv<i> *p,</i>
	sceGpTextureArg<i> *texarg,</i>
	int<i> tfx,</i>
	int<i> filter</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>p</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>texarg</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;テクスチャパラメータ構造体&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>tfx</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;テクスチャファンクション&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i></i>&nbsp;</td>
<td valign="top">&nbsp;0:&nbsp;</td>
<td valign="top">&nbsp;MODULATE&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i></i>&nbsp;</td>
<td valign="top">&nbsp;1:&nbsp;</td>
<td valign="top">&nbsp;DECAL&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i></i>&nbsp;</td>
<td valign="top">&nbsp;2:&nbsp;</td>
<td valign="top">&nbsp;HIGHLIGHT&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i></i>&nbsp;</td>
<td valign="top">&nbsp;3:&nbsp;</td>
<td valign="top">&nbsp;HIGHLIGHT2&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>filter</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;テクスチャのフィルタ&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i></i>&nbsp;</td>
<td valign="top">&nbsp;0:&nbsp;</td>
<td valign="top">&nbsp;ポイントサンプリング NEAREST&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i></i>&nbsp;</td>
<td valign="top">&nbsp;1:&nbsp;</td>
<td valign="top">&nbsp;バイリニアサンプリング LINEAR&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャパラメータ構造体の設定を使用して、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">clamp レジスタはテクスチャのサイズにより、ラップモードを CLAMP もしくは REGION_CLAMP として設定されます。<br>REGION_CLAMP モードのときには 上下限のクランプ値もテクスチャのサイズにしたがって設定されます。<br>REPEAT モードを使用する場合には、適宜パケット内の値を書き換えてください。<br>最大 MIP レベルは 0 に設定されます。<br>テクスチャカラーコンポーネント TCC の値は 1 に設定されます。0 で使用する場合は適宜パケット内の値を書き換えてください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetTexEnvByArgTim2"><font size=6>sceGpSetTexEnvByArgTim2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャパラメータ構造体と TIM2 を併用して<br>テクスチャ環境設定パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetTexEnvByArgTim2</b>(
	sceGpTexEnv<i> *p,</i>
	const<i> sceGpTextureArg *texarg,</i>
	const<i> void *ptim2,</i>
	int<i> picture,</i>
	int<i> miplevel</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>texarg</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャパラメータ構造体&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ptim2</i>&nbsp;</td>
<td valign="TOP">&nbsp;TIM2 データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>picture</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用するピクチャ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miplevel</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用する mipmap レベル&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">テクスチャパラメータ構造体と TIM2 データ内の設定を使用して、パケットの内容を設定します。両者に存在する設定はテクスチャパラメータ構造体の値が優先されますが、テクスチャパラメータ構造体メンバの値が負の場合には TIM2 データの設定を使用します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">clamp レジスタはテクスチャのサイズにより、ラップモードを CLAMP もしくは REGION_CLAMP として設定されます。<br>REGION_CLAMP モードのときには 上下限のクランプ値もテクスチャのサイズにしたがって設定されます。<br>REPEAT モードを使用する場合には、適宜パケット内の値を書き換えてください。<br>最大 MIP レベルは 0 に設定されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetTexEnvByDrawEnv"><font size=6>sceGpSetTexEnvByDrawEnv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>テクスチャ環境設定パケットの設定<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetTexEnvByDrawEnv</b>(
	sceGpTexEnv *<i>p,</i>
	sceGsDrawEnv1 *<i>draw,</i>
	int <i>tcc,</i>
	int <i>tfx,</i>
	int <i>filter</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>draw</i>&nbsp;</td>
<td valign="TOP">&nbsp;描画環境&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>tfx</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャファンクション&nbsp;<br>&nbsp;0: MODULATE&nbsp;<br>&nbsp;1: DECAL&nbsp;<br>&nbsp;2: HIGHLIGHT&nbsp;<br>&nbsp;3: HIGHLIGHT2&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>filter</i>&nbsp;</td>
<td valign="TOP">&nbsp;テクスチャのフィルタ&nbsp;<br>&nbsp;0: ポイントサンプリング NEAREST&nbsp;<br>&nbsp;1: バイリニアサンプリング LINEAR&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定された描画環境をテクスチャとして利用するように、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">clamp レジスタはもとの描画環境の scissor レジスタの値とバッファ幅により、ラップモードを CLAMP もしくは REGION_CLAMP として設定されます。<br>REGION_CLAMP モードのときには 上下限のクランプ値もテクスチャのサイズにしたがって設定されます。<br>REPEAT モードを使用する場合には、適宜パケット内の値を書き換えてください。<br>TW, TH には、描画環境内の scissor レジスタが示す領域を含む最小の値がセットされます。<br>最大 MIP レベルは 0 に設定されます。<br>テクスチャカラーコンポーネント TCC の値は 1 に設定されます。0 で使用する場合は適宜パケット内の値を書き換えてください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetTexEnvByTim2"><font size=6>sceGpSetTexEnvByTim2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>TIM2 を使ってテクスチャ環境設定パケットを設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetTexEnvByTim2</b>(
	sceGpTexEnv<i> *p,</i>
	const<i> void *ptim2,</i>
	int<i> picture,</i>
	int<i> miplevel</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>ptim2</i>&nbsp;</td>
<td valign="TOP">&nbsp;TIM2 データのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>picture</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用するピクチャ番号&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>miplevel</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用する mipmap レベル&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">TIM2 データ内の設定を使用して、パケットの内容を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">clamp レジスタはテクスチャのサイズにより、ラップモードを CLAMP もしくは REGION_CLAMP として設定されます。<br>REGION_CLAMP モードのときには 上下限のクランプ値もテクスチャのサイズにしたがって設定されます。<br>REPEAT モードを使用する場合には、適宜パケット内の値を書き換えてください。<br>最大 MIP レベルは 0 に設定されます。<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>インデックス取得関数（描画パケット用）</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexQ#_R"><font size=6>sceGpIndexQ#_R<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>Q のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexQ#_R</b>(
	unsigned int <i>n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の Q か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の Q の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">R フォーマットの描画パケットについて、<i>n</i> 番目の Q の値を設定すべきインデックスを返します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"># にはサブタイプに対応する文字列が入ります。<br>この項目に含まれる関数一覧は以下のとおりです。<br></div>
<div style="margin-left:70px;">sceGpIndexQLineFTS_R() ,sceGpIndexQLineGTS_R() <br>sceGpIndexQLineStripFTS_R() ,sceGpIndexQLineStripGTS_R() <br>sceGpIndexQPointFTS_R() ,sceGpIndexQSpriteFTS_R()<br>sceGpIndexQTriFTS_R(),sceGpIndexQTriFanFTS_R()<br>sceGpIndexQTriFanGTS_R(),sceGpIndexQTriGTS_R()<br>sceGpIndexQTriStripFTS_R(),sceGpIndexQTriStripGTS_R()<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexQ_R"><font size=6>sceGpIndexQ_R<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>Q のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexQ_R</b>(
	unsigned int<i> type,</i>
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の Q か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の Q の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">R フォーマットの描画パケットについて、<i>n</i> 番目の Q の値を設定すべきインデックスを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexRgba"><font size=6>sceGpIndexRgba<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>RGBA のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexRgba</b>(
	unsigned int<i> type,</i>
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の RGBA か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n </i>番目の RGBA の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の RGBA の値を設定すべきインデックスを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexRgba#"><font size=6>sceGpIndexRgba#<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right> RGBA のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexRgba#</b>(
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の RGBA か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の RGBA の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の  RGBA の値を設定すべきインデックスを返します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"># にはサブタイプに対応する文字列が入ります。<br>この項目に含まれる関数一覧は以下のとおりです。<br></div>
<div style="margin-left:70px;">sceGpIndexRgbaLineF(),sceGpIndexRgbaLineFTS(),<br>sceGpIndexRgbaLineFTU() <br>sceGpIndexRgbaLineG() ,sceGpIndexRgbaLineGTS(),<br>sceGpIndexRgbaLineGTU()<br>sceGpIndexRgbaLineStripF() ,sceGpIndexRgbaLineStripFTS() <br>sceGpIndexRgbaLineStripFTU() ,sceGpIndexRgbaLineStripG() <br>sceGpIndexRgbaLineStripGTS() ,sceGpIndexRgbaLineStripGTU() <br>sceGpIndexRgbaPointF() ,sceGpIndexRgbaPointFTS()<br>sceGpIndexRgbaPointFTU() <br>sceGpIndexRgbaSpriteF(),sceGpIndexRgbaSpriteFTS()<br>sceGpIndexRgbaSpriteFTU() <br>sceGpIndexRgbaTriF() ,sceGpIndexRgbaTriFTS()<br>sceGpIndexRgbaTriFTU() <br>sceGpIndexRgbaTriFanF(),sceGpIndexRgbaTriFanFTS()<br>sceGpIndexRgbaTriFanFTU() <br>sceGpIndexRgbaTriFanG(),sceGpIndexRgbaTriFanGTS()<br>sceGpIndexRgbaTriFanGTU() <br>sceGpIndexRgbaTriG(),sceGpIndexRgbaTriGTS()<br>sceGpIndexRgbaTriGTU() <br>sceGpIndexRgbaTriStripF(),sceGpIndexRgbaTriStripFTS()<br>sceGpIndexRgbaTriStripFTU()<br>sceGpIndexRgbaTriStripG(),sceGpIndexRgbaTriStripGTS()<br>sceGpIndexRgbaTriStripGTU() <br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexSt#_R"><font size=6>sceGpIndexSt#_R<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>ST のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexSt#_R</b>(
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の ST か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の ST の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の ST の値を設定すべきインデックスを返します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"># にはサブタイプに対応する文字列が入ります。<br>この項目に含まれる関数一覧は以下のとおりです。<br></div>
<div style="margin-left:70px;">sceGpIndexStLineFTS_R(),sceGpIndexStLineGTS_R() <br>sceGpIndexStLineStripFTS_R(),sceGpIndexStLineStripGTS_R() <br>sceGpIndexStPointFTS_R(),sceGpIndexStSpriteFTS_R()<br>sceGpIndexStTriFTS_R() <br>sceGpIndexStTriFanFTS_R(),sceGpIndexStTriFanGTS_R() <br>sceGpIndexStTriGTS_R() <br>sceGpIndexStTriStripFTS_R(),sceGpIndexStTriStripGTS_R() <br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexSt_R"><font size=6>sceGpIndexSt_R<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right> ST のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexSt_R</b>(
	unsigned int<i> type,</i>
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の ST か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の ST の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">R フォーマットの描画パケットについて、<i>n</i> 番目の  ST の値を設定すべきインデックスを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexStq#_P"><font size=6>sceGpIndexStq#_P<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right> STQ のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexStq#_P</b>(
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の STQ か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の STQ の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">P フォーマットの描画パケットについて、<i>n</i> 番目の  STQ の値を設定すべきインデックスを返します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"># にはサブタイプに対応する文字列が入ります。<br>この項目に含まれる関数一覧は以下のとおりです。<br></div>
<div style="margin-left:70px;">sceGpIndexStqLineFTS_P(),sceGpIndexStqLineGTS_P()<br>sceGpIndexStqLineStripFTS_P(),sceGpIndexStqLineStripGTS_P()<br>sceGpIndexStqPointFTS_P(),sceGpIndexStqSpriteFTS_P()<br>sceGpIndexStqTriFTS_P(),sceGpIndexStqTriFanFTS_P()<br>sceGpIndexStqTriFanGTS_P(),sceGpIndexStqTriGTS_P()<br>sceGpIndexStqTriStripFTS_P(),sceGpIndexStqTriStripGTS_P()<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexStq_P"><font size=6>sceGpIndexStq_P<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>STQ のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexStq_P</b>(
	unsigned int<i> type,</i>
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の STQ か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の STQ の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">P フォーマットの描画パケットについて、<i>n</i> 番目の STQ の値を設定すべきインデックスを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexUv"><font size=6>sceGpIndexUv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>UV のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexUv</b>(
	unsigned int<i> type,</i>
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の UV か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の UV の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の UV の値を設定すべきインデックスを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexUv#"><font size=6>sceGpIndexUv#<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>UV のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexUv#</b>(
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の UV か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の UV の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の UV の値を設定すべきインデックスを返します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"># にはサブタイプに対応する文字列が入ります。<br>この項目に含まれる関数一覧は以下のとおりです。<br></div>
<div style="margin-left:70px;">sceGpIndexUvLineFMTU(),sceGpIndexUvLineFTU()<br>sceGpIndexUvLineGTU() <br>sceGpIndexUvLineStripFMTU(),sceGpIndexUvLineStripFTU() <br>sceGpIndexUvLineStripGTU() <br>sceGpIndexUvPointFMTU(),sceGpIndexUvPointFTU() <br>sceGpIndexUvSpriteFMTU(),sceGpIndexUvSpriteFTU() <br>sceGpIndexUvTriFMTU(),sceGpIndexUvTriFTU() <br>sceGpIndexUvTriFanFMTU(),sceGpIndexUvTriFanFTU()<br>sceGpIndexUvTriFanGTU() ,sceGpIndexUvTriGTU() <br>sceGpIndexUvTriStripFMTU(),sceGpIndexUvTriStripFTU()<br>sceGpIndexUvTriStripGTU() <br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexXyzf"><font size=6>sceGpIndexXyzf<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>XYZF のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexXyzf</b>(
	unsigned int<i> type,</i>
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>type</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットタイプ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の XYZF か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の XYZF の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の XYZF の値を設定すべきインデックスを返します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpIndexXyzf#"><font size=6>sceGpIndexXyzf#<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>XYZF のインデックスを取得する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGpIndexXyzf#</b>(
	unsigned int<i> n</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>n</i>&nbsp;</td>
<td valign="TOP">&nbsp;何番目の XYZF か&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の XYZF の値を設定すべきインデックス<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>n</i> 番目の XYZF の値を設定すべきインデックスを返します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"># にはサブタイプに対応する文字列が入ります。<br>この項目に含まれる関数一覧は以下のとおりです。<br></div>
<div style="margin-left:70px;">sceGpIndexXyzfLineF(),sceGpIndexXyzfLineFM()<br>sceGpIndexXyzfLineFMTU() ,sceGpIndexXyzfLineFTS()<br>sceGpIndexXyzfLineFTU()<br>sceGpIndexXyzfLineG(),sceGpIndexXyzfLineGTS()<br>sceGpIndexXyzfLineGTU() <br>sceGpIndexXyzfLineStripF(),sceGpIndexXyzfLineStripFM()<br>sceGpIndexXyzfLineStripFMTU(),sceGpIndexXyzfLineStripFTS()<br>sceGpIndexXyzfLineStripFTU(),sceGpIndexXyzfLineStripG()<br>sceGpIndexXyzfLineStripGTS(),sceGpIndexXyzfLineStripGTU()<br>sceGpIndexXyzfPointF(),sceGpIndexXyzfPointFM()<br>sceGpIndexXyzfPointFMTU(),sceGpIndexXyzfPointFTS()<br>sceGpIndexXyzfPointFTU()<br>sceGpIndexXyzfSpriteF(),sceGpIndexXyzfSpriteFM()<br>sceGpIndexXyzfSpriteFMTU() ,sceGpIndexXyzfSpriteFTS()<br>sceGpIndexXyzfSpriteFTU() <br>sceGpIndexXyzfTriF(),sceGpIndexXyzfTriFM()<br>sceGpIndexXyzfTriFMTU(),sceGpIndexXyzfTriFTS()<br>sceGpIndexXyzfTriFTU()<br>sceGpIndexXyzfTriFanF(),sceGpIndexXyzfTriFanFM()<br>sceGpIndexXyzfTriFanFMTU() ,sceGpIndexXyzfTriFanFTS()<br>sceGpIndexXyzfTriFanFTU() <br>sceGpIndexXyzfTriFanG(),sceGpIndexXyzfTriFanGTS()<br>sceGpIndexXyzfTriFanGTU() <br>sceGpIndexXyzfTriG(),sceGpIndexXyzfTriGTS()<br>sceGpIndexXyzfTriGTU() <br>sceGpIndexXyzfTriStripF(),sceGpIndexXyzfTriStripFM()<br>sceGpIndexXyzfTriStripFMTU(),sceGpIndexXyzfTriStripFTS()<br>sceGpIndexXyzfTriStripFTU()<br>sceGpIndexXyzfTriStripG(),sceGpIndexXyzfTriStripGTS()<br>sceGpIndexXyzfTriStripGTU()<br><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>セット関数（描画パケット用、一部マクロ関数）</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetAa1"><font size=6>sceGpSetAa1<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>AA1 の ON/OFF を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetAa1</b>(
<i>	p,</i>
<i>	v</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>v</i>&nbsp;</td>
<td valign="TOP">&nbsp;AA1 ビットの値(0: AA1 ON,1: AA1 OFF)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットの AA1 の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br>例:<br></div>
<div style="margin-left:70px;">u_long pPacket[PACKET_SIZE];<br>sceGpInitPacket(pPacket, SCE_GP_PRIM_R|SCE_GP_PRIM_SPRITE_FTU, pnum);<br>sceGpSetAa1((sceGpPrimR *)pPacket, 1);<br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetAbe"><font size=6>sceGpSetAbe<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>アルファブレンディングの ON/OFF を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetAbe</b>(
<i>	p,</i>
	v
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>v</i>&nbsp;</td>
<td valign="TOP">&nbsp;ABE ビットの値&nbsp;<br>&nbsp;0: アルファブレンディングOFF&nbsp;<br>&nbsp;1: アルファブレンディング ON&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットの ABE の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません<br><br>例:<br></div>
<div style="margin-left:70px;">u_long pPacket[PACKET_SIZE];<br>sceGpInitPacket(pPacket, SCE_GP_PRIM_R|SCE_GP_PRIM_SPRITE_FTU, pnum);<br>sceGpSetAbe((sceGpPrimR *)pPacket, 1);<br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetCtxt"><font size=6>sceGpSetCtxt<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>CTXT の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetCtxt</b>(
<i>	p,</i>
<i>	v</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ &nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>v</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用コンテキスト (0: CTXT1, 1: CTXT2)&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットの使用する CTXT の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br>例:<br></div>
<div style="margin-left:70px;">u_long pPacket[PACKET_SIZE];<br>sceGpInitPacket(pPacket, SCE_GP_PRIM_R|SCE_GP_PRIM_SPRITE_FTU, pnum);<br>sceGpSetCtxt((sceGpPrimR *)pPacket, 1);<br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetFog"><font size=6>sceGpSetFog<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>FOG の ON/OFF を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetFog</b>(
<i>	p,</i>
<i>	v</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>v</i>&nbsp;</td>
<td valign="TOP">&nbsp;FGE ビットの値&nbsp;<br>&nbsp;0:フォギングOFF&nbsp;<br>&nbsp;1:フォギング ON&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットの FGE の値を設定します<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br>例:<br></div>
<div style="margin-left:70px;">u_long pPacket[PACKET_SIZE];<br>sceGpInitPacket(pPacket, SCE_GP_PRIM_R|SCE_GP_PRIM_SPRITE_FTU, pnum);<br>sceGpSetFog((sceGpPrimR *)pPacket, 1);<br></div>
<div style="margin-left:50px;"><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetRgb"><font size=6>sceGpSetRgb<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>RGB の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetRgb</b>(
<i>	p,</i>
<i>	k,</i>
<i>	r,</i>
<i>	g,</i>
<i>	b</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>r</i>&nbsp;</td>
<td valign="TOP">&nbsp;R の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>g</i>&nbsp;</td>
<td valign="TOP">&nbsp;G の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>b</i>&nbsp;</td>
<td valign="TOP">&nbsp;B の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に RGB の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetRgba"><font size=6>sceGpSetRgba<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>RGBA の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetRgba</b>(
<i>	p,</i>
<i>	k,</i>
<i>	r,</i>
<i>	g,</i>
<i>	b,</i>
<i>	a</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>r</i>&nbsp;</td>
<td valign="TOP">&nbsp;R の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>g</i>&nbsp;</td>
<td valign="TOP">&nbsp;G の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>b</i>&nbsp;</td>
<td valign="TOP">&nbsp;B の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>a</i>&nbsp;</td>
<td valign="TOP">&nbsp;A の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に RGBA の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。 <br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetRgbaFM"><font size=6>sceGpSetRgbaFM<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>モノクロームパケットに色を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetRgbaFM</b>(
	void* <i>p,</i>
	u_long <i>r,</i>
	u_long <i>g,</i>
	u_long <i>b,</i>
	u_long <i>a</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットのアドレス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>r</i>&nbsp;</td>
<td valign="TOP">&nbsp;R の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>g</i>&nbsp;</td>
<td valign="TOP">&nbsp;G の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>b</i>&nbsp;</td>
<td valign="TOP">&nbsp;B の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>a</i>&nbsp;</td>
<td valign="TOP">&nbsp;A の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">モノクロームパケットに色を設定します<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">モノクロームパケットの構造体メンバ userreg.DATA に RGBA の値を設定し、userreg.ADDR に SCE_GS_RGBAQ を設定します。<br>Q には 1.0f が設定されます。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetStq_P"><font size=6>sceGpSetStq_P<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>STQ の値を設定する_P（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetStq_P</b>(
<i>	p,</i>
<i>	k,</i>
<i>	s,</i>
<i>	t,</i>
<i>	q</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>s</i>&nbsp;</td>
<td valign="TOP">&nbsp;S の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t</i>&nbsp;</td>
<td valign="TOP">&nbsp;T の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>q</i>&nbsp;</td>
<td valign="TOP">&nbsp;Q の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケット (P フォーマット) のインデックスの位置に STQ の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。 <br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetStq_R"><font size=6>sceGpSetStq_R<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>STQ の値を設定する_R（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetStq_R</b>(
<i>	p,</i>
<i>	k,</i>
<i>	s,</i>
<i>	t,</i>
<i>	q</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;ST のインデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>s</i>&nbsp;</td>
<td valign="TOP">&nbsp;S の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>t</i>&nbsp;</td>
<td valign="TOP">&nbsp;T の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>q</i>&nbsp;</td>
<td valign="TOP">&nbsp;Q の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケット (R フォーマット) のインデックスの位置に STQ の値を設定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。 <br>R フォーマットの描画パケットでは ST と Q は別インデックスに位置しますが、この関数では ST のインデックスを与えると、対応する Q も正しい位置に設定します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetUv"><font size=6>sceGpSetUv<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>UV の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetUv</b>(
<i>	p,</i>
<i>	k,</i>
<i>	u,</i>
<i>	v</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>u</i>&nbsp;</td>
<td valign="TOP">&nbsp;U の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>v</i>&nbsp;</td>
<td valign="TOP">&nbsp;V の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に UV の値を設定します。<br>UV の値はそのまま GS, GIF に転送されるため、小数部4ビットの固定小数点形式です。通常の値を小数部4bitの固定小数点に変換するには、元の値に16をかけます。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。 <br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetXy"><font size=6>sceGpSetXy<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>XYZF2にXY の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetXy</b>(
<i>	p,</i>
<i>	k,</i>
<i>	x,</i>
	y
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>x</i>&nbsp;</td>
<td valign="TOP">&nbsp;X の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>y</i>&nbsp;</td>
<td valign="TOP">&nbsp;Y の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に XY の値を設定します。<br>XY の値はそのまま GS, GIF に転送されるため、小数部4ビットの固定小数点形式です。通常の値を小数部4bitの固定小数点に変換するには、元の値に16をかけます。詳細は GIF のマニュアル（Pフォーマットの場合), GSのマニュアル（Rフォーマットの場合) をそれぞれ参照してください。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetXyz"><font size=6>sceGpSetXyz<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>XYZF2にXYZ の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetXyz</b>(
<i>	p,</i>
<i>	k,</i>
<i>	x,</i>
<i>	y,</i>
<i>	z</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>x</i>&nbsp;</td>
<td valign="TOP">&nbsp;X の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>y</i>&nbsp;</td>
<td valign="TOP">&nbsp;Y の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>z</i>&nbsp;</td>
<td valign="TOP">&nbsp;Z の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に XYZ の値を設定します。<br>XY の値はそのまま GS, GIF に転送されるため、小数部4ビットの固定小数点形式です。通常の値を小数部4bitの固定小数点に変換するには、元の値に16をかけます。<br>Pフォーマット描画パケットの場合、Z は下位4bitが無視され、上位符号なし整数になります。この場合も、通常はやはり元の値に16をかけて与えます。<br>詳細は GIF のマニュアル（Pフォーマットの場合), GSのマニュアル（Rフォーマットの場合) をそれぞれ参照してください。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。 <br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetXyz32"><font size=6>sceGpSetXyz32<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>XYZ2にXYZ の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetXyz32</b>(
<i>	p,</i>
<i>	k,</i>
<i>	x,</i>
<i>	y,</i>
<i>	z,</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>x</i>&nbsp;</td>
<td valign="TOP">&nbsp;X の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>y</i>&nbsp;</td>
<td valign="TOP">&nbsp;Y の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>z</i>&nbsp;</td>
<td valign="TOP">&nbsp;Z の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に XYZ の値を設定します。<br>XY の値はそのまま GS, GIF に転送されるため、小数部4ビットの固定小数点形式です。通常の値を小数部4bitの固定小数点に変換するには、元の値に16をかけます。<br>Zは32bitすべてが符号なし整数として扱われます。<br>詳細は GIF のマニュアル（Pフォーマットの場合), GSのマニュアル（Rフォーマットの場合) をそれぞれ参照してください。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetXyzf"><font size=6>sceGpSetXyzf<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>XYZF2にXYZF の値を設定する（マクロ関数）<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#define <b>sceGpSetXyzf</b>(
<i>	p,</i>
<i>	k,</i>
<i>	x,</i>
<i>	y,</i>
<i>	z,</i>
<i>	f</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>k</i>&nbsp;</td>
<td valign="TOP">&nbsp;インデックス&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>x</i>&nbsp;</td>
<td valign="TOP">&nbsp;X の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>y</i>&nbsp;</td>
<td valign="TOP">&nbsp;Y の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>z</i>&nbsp;</td>
<td valign="TOP">&nbsp;Z の値&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>f</i>&nbsp;</td>
<td valign="TOP">&nbsp;F の値&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">（マクロ関数）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットのインデックスの位置に XYZF の値を設定します。<br>XY の値はそのまま GS, GIF に転送されるため、小数部4ビットの固定小数点形式です。通常の値を小数部4bitの固定小数点に変換するには、元の値に16をかけます。<br>Pフォーマット描画パケットの場合、Z は下位4bitが無視され、上位符号なし整数になります。この場合も、通常はやはり元の値に16をかけて与えます。<br>詳細は GIF のマニュアル（Pフォーマットの場合), GSのマニュアル（Rフォーマットの場合) をそれぞれ参照してください。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetZ32"><font size=6>sceGpSetZ32<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>描画パケットの使用レジスタXYZF2 / XYZ2を設定する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetZ32</b>(
<i>	</i>void <i>*p,</i>
<i>	</i>int<i>  on</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;設定するパケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>on</i>&nbsp;</td>
<td valign="TOP">&nbsp;描画パケットで&nbsp;<br>&nbsp;0: XYZF2を使用する&nbsp;<br>&nbsp;1: XYZ2を使用する&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定描画パケットの頂点座標を、XYZF2 / XYZ2のどちらに出力するかを指定します。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マクロ関数ですので、パケットのアドレスは適切な型にキャストした状態で渡さなければなりません。<br><br>この関数はGIFタグ中のレジスタ記述子を書き換えます。それぞれに見合ったデータをsceGpSetXyzf(), sceGpSetXyz32()等を使い用意してください。<br><br>例:<br></div>
<div style="margin-left:70px;">u_long pPacket[PACKET_SIZE];<br>sceGpInitPacket(pPacket, SCE_GP_PRIM_R|SCE_GP_PRIM_SPRITE_FTU, pnum);<br>sceGpSetZ32((sceGpPrimR *)pPacket, 1);<br></div>
<div style="margin-left:50px;"><br></div>

<!-- 見出し　２，章見出し -->
<hr border=1 width=100%><br>
<center><h2>パケット単独転送関連関数</h2></center>
<a name=#"Heading2"></a>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpKickPacket"><font size=6>sceGpKickPacket<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットを単独で転送<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGpKickPacket</b>(
	void* <i>p</i>,
	int <i>path</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケット構造体のポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>path</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用パス&nbsp;<br>&nbsp;SCE_GP_PATH1: path1&nbsp;<br>&nbsp;SCE_GP_PATH2: path2&nbsp;<br>&nbsp;SCE_GP_PATH3: path3&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>値</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>結果</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;0&nbsp;</td>
<td valign="TOP">&nbsp;転送開始した場合&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;-1&nbsp;</td>
<td valign="TOP">&nbsp;転送に使用する DMA チャネルが&nbsp;<br>&nbsp;busy で転送開始に失敗した場合&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DMA の空きを確認し、パケットを単独で DMA 転送します。転送の終了は待たずにリターンします。<br>転送するパケットは、関数 sceGpSetPacketMode() などによって、単独転送が可能な状態にしておかなければなりません。<br>path1, path2 を指定した場合は DMA チャンネルを TTE=1 (Tag Transfer Enable ON) で使用します。<br>PATH3を指定した場合はDMAチャンネル2をTTE=0 (Tag Transfer Enable OFF)で使用します。<br>PATH1とPATH2のパケットが混在している場合にはどちらを指定しても構いません。<br><br>転送の終了はたとえばsceGsSyncPath()関数などを使用して検出することができます。<br>必要に応じてDキャッシュのフラッシュなどをおこなってから呼び出してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpKickPacket2"><font size=6>sceGpKickPacket2<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットを単独で転送<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpKickPacket2</b>(
	void* <i>p,</i>
	int <i>path</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフでない（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケット構造体のポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>path</i>&nbsp;</td>
<td valign="TOP">&nbsp;使用パス&nbsp;<br>&nbsp;SCE_GP_PATH1: path1&nbsp;<br>&nbsp;SCE_GP_PATH2: path2&nbsp;<br>&nbsp;SCE_GP_PATH3: path3&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DMA チャネルの空きを確認せずに、パケットを単独で DMA 転送します。転送の終了は待たずにリターンします。<br>DMA チャネルの空きはあらかじめ確認しておいてから呼び出してください。<br>転送するパケットは、関数 sceGpSetPacketMode() などによって、単独転送が可能な状態にしておかなければなりません。<br>path1, path2 を指定した場合は DMA チャンネルを TTE=1 (Tag Transfer Enable ON) で使用します。<br>PATH3を指定した場合はDMAチャンネル2をTTE=0 (Tag Transfer Enable OFF)で使用します。<br>PATH1とPATH2のパケットが混在している場合にはどちらを指定しても構いません。<br><br>転送の終了はたとえばsceGsSyncPath()関数などを使用して検出することができます。<br>必要に応じてDキャッシュのフラッシュなどをおこなってから呼び出してください。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >
<a name="sceGpSetPacketMode"><font size=6>sceGpSetPacketMode<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケットの転送モードを変更する<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSetPacketMode</b>(
	void* <i>p,</i>
	int <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能<br>マルチスレッドセーフである（割り込み禁止、許可状態に依存しない）<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットへのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;<i>mode</i>&nbsp;</td>
<td valign="TOP">&nbsp;転送モード&nbsp;<br>&nbsp;0: チェイン転送モード&nbsp;<br>&nbsp;1: 単独転送モード&nbsp;<br>&nbsp;2: CALL呼出しモード&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パケットの転送モードを変更します。<br>パケットは初期化時には転送モードは 0 （チェイン転送モード）になっています。<br>これはパケットをチェインに登録して転送する場合に必要なモードで、テイル位置のDMAタグが NEXT タグになっています。<br>一方、パケットを単独で転送する場合には、モードを 0（単独転送モード）にする必要があります。この場合、テイル位置のＤＭＡタグはENDタグとなります。<br>また、CALL呼出しモードでは、テイル位置のDMAタグが RET タグとなり、外部から CALLタグで呼び出すことができます。たとえば、HiG DMAパケット管理サービスにsceHiDMAMake_CallPtr()関数で libgp のパケットを登録するときなどに使用します。<br><br></div>
<!-- 関数名 -->
<hr noshade Size=6 >

<a name="sceGpSyncPacket / sceGpSyncPacketI"><font size=6>sceGpSyncPacket / sceGpSyncPacketI<br></font></a>
<hr noshade Size=4 >
<!-- 関数説明 -->
<div align=right>パケット領域のキャッシュ掃き出し<br></div>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGpSyncPacket</b>(
	void* <i>p</i>
);
void <b>sceGpSyncPacketI(</b>
	void* <i>p</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;sceGpSyncPacket&nbsp;</td>
<td valign="TOP">&nbsp;割り込みハンドラから呼び出し不可&nbsp;<br>&nbsp;スレッドから呼び出し可能&nbsp;<br>&nbsp;マルチスレッドセーフである&nbsp;<br>&nbsp;（割り込み禁止、許可状態に依存しない）&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceGpSyncPacketI&nbsp;</td>
<td valign="TOP">&nbsp;割り込みハンドラから呼び出し可能&nbsp;<br>&nbsp;スレッドから呼び出し不可&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;<i>p</i>&nbsp;</td>
<td valign="TOP">&nbsp;パケットの先頭アドレス&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SyncDCache() / iSyncDCache() 関数を呼び出して、パケット領域のキャッシュを掃き出します。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
