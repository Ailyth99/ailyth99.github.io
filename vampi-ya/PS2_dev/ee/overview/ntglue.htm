<html lang="ja">
<!-- o@PCo -->
<head>

<script language="JavaScript">
<!--
  function startFixed(){
    fixedLAYER('fixedLay0','rightBottom',-35,-35)
  }

  var ie= !!document.all
  var n4= !!document.layers
  var w3c=!!document.getElementById
  var mac45 
    = navigator.userAgent.indexOf('MSIE 4.5; Mac_PowerPC')

  if(document.layers)window.onresize=resizeFunc
  function resizeFunc(e){location.reload()}

  function iniFunc(){
    if(ie&&!(mac45!=-1))window.onscroll = startFixed
    startFixed()
  }

  var tid=new Array()

  function fixedLAYER(layName,posString,offSetX,offSetY){

    offSetX = parseInt(offSetX,10)
    offSetY = parseInt(offSetY,10)

 if( posString == 'rightBottom' ){

      if(ie) offLeft = document.body.clientWidth   + offSetX
      else   offLeft = window.innerWidth           + offSetX
      if(ie) offTop  = document.body.clientHeight  + offSetY
      else   offTop  = window.innerHeight          + offSetY

    }
    else {

      if(ie) offLeft =                               offSetX
      else   offLeft =                               offSetX
      if(ie) offTop  =                               offSetY
      else   offTop  =                               offSetY

    }

    offLeft = parseInt(offLeft)
    offTop  = parseInt(offTop)

    if(document.all){
      var mx = parseInt(document.body.scrollLeft +offLeft)
      var my = parseInt(document.body.scrollTop  +offTop)
    } else {
      var mx = parseInt(self.pageXOffset+offLeft)
      var my = parseInt(self.pageYOffset+offTop)

    }

    moveLAYER(layName,mx,my)

    if(!(ie&&!(mac45!=-1)))
      setTimeout("fixedLAYER('"+layName+"','"+posString
                   +"','" +offSetX+"','"+offSetY+"')",100)
  }

  function moveLAYER(layName,x,y){
      
      if(document.getElementById){
        document.getElementById(layName).style.left=x
        document.getElementById(layName).style.top=y
      }
      else if(document.all){
        document.all(layName).style.pixelLeft=x
        document.all(layName).style.pixelTop=y
      }
      else if(document.layers)
        document.layers[layName].moveTo(x,y)
  }

// -->
</script>

<script language="JavaScript">
<!--
  function lj(ch,fm)
  {
    if ( parent.index ) {
      if ( ch == "libref" ){ parent.index.location.href="../libref/category.htm"; }
      else if ( ch == "../ee/libref" ){ parent.index.location.href="../../ee/libref/category.htm"; }
      else if ( ch == "../iop/libref" ){ parent.index.location.href="../../iop/libref/category.htm"; }
      else if ( ch == "../iop/overview" ){ parent.index.location.href="../../iop/overview/category.htm"; }
      else if ( ch == "../ee/overview" ){ parent.index.location.href="../../ee/overview/category.htm"; }
      else if ( ch == "overview" ){ parent.index.location.href="../overview/category.htm"; }
    }
    if ( parent.main ) {
      if ( fm != "" ){ parent.main.location.href=fm; }
    } else {
      if ( fm != "" ){ location.href=fm; }
    }
  }
//-->
</script>
<title>ėplbg[Nbp[API(netglue)</title>
<meta http-equiv="Content-Type"content= text/html; charset=UTF-8 >
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="Author" Content="Sony Computer Entertainment Inc.">
<style type="text/css"><!--
    div.fixedLay{position:absolute;z-index:100;left:0px;top:0px;}
--></style>
</head>
<body onload="iniFunc()" bgcolor="#ffffff" text="#000000" >
<div id="fixedLay0" class="fixedLay">
<a href="#top"><img src="gif/link.gif" border="0" alt="TOP"></a>
</div>
<table WIDTH="100%">
<tr><td>
<h3>"PlayStation 2" Programmer Tool Runtime Library Release 2.5.3</h3>
</td>
</tr>
<tr><td align= right >
<script language="JavaScript">
<!--
   var p,q;
   if ( parent.index ) {
   p = parent.index.location;
   q = p.toString();
   result = q.match(/\/category\.htm/gi);
   if(result == "/category.htm"){
          document.writeln("<a href=\"JavaScript:lj('libref','../libref/ntglue_rf.htm')\"><img src=\"./gif/arrow.png\" border=0>\́^֐ꗗ</a>");
    }
}
// -->
</script>
</td></tr>
</table>
<hr noshade size=6>
<a name=Heading2>
<center><h1>
ėplbg[Nbp[API(netglue)
</h1></center>
</a>
<div align=center>
<table border=0 bgcolor=#F5F5F5 width=90%><tr><td>
<h2><u>
        <b>ڎ</b><br>
</u></h2>

<ul>
<p><a href="#Heading3_1">  1 <b>CuTv</b><br></a>
    <ul>
    <a href="#Heading4_1_1"> <b>Tv</b><br></a>
    <a href="#Heading4_1_2"> <b>֘At@C</b><br></a>
    <a href="#Heading4_1_3"> <b>libinsck p netglueCũ\[XJɂ</b><br></a>
    </ul>
<p><a href="#Heading3_2">  2 <b>API ɂ</b><br></a>
    <ul>
    <a href="#Heading4_2_1"> <b>netglue API</b><br></a>
    <a href="#Heading4_2_2"> <b>BSD \Pbg API</b><br></a>
    <a href="#Heading4_2_3"> <b>netglue Ǝ API</b><br></a>
    </ul>
<p><a href="#Heading3_3">  3 <b>errno ɂ</b><br></a>
<br></td></tr></table></div>

<!-- o@QC͌o -->
<a name=#"Heading2">

<!-- o@RCߌo -->
<a name="Heading3_1">
<h2>
 1 <b>CuTv</b><br>
<hr noshade>
</h2>


<!-- o@SCo -->
<h3>
<a name="Heading4_1_1">
<a href="#Heading3_1"> 1. </a>1 <b>Tv</b><br>
</a>
</h3>
<div style="margin-left:50px;">ėplbg[Nbp[ API(netglue) ́AlXȃlbg[N֘ACulbg[NX^bNCuƂ͓ƗɎgpł悤Aėp̉ʃlbg[NCuƂċK肳ꂽ BSD \Pbgx[X API łB<br></div>
<div style="margin-left:50px;"></div>
<div align=center>
<p>
<img src="gif/ntglue001.gif"><p>

</div>
<br>
<div style="margin-left:50px;">netglue  API Ƃč쐬ꂽCugpۂɂ́Agplbg[NX^bNCuɑΉ netglue API bp[KvƂȂ܂B<br>SCEI X^bN(libinet)p netglue Cu SDK Ɋ܂܂Ă܂̂ netglue Cu쐬Kv͂ȂAnetglue API ӎKv܂B<br>netglue 𗘗pCuAlibinet ȊÕlbg[NX^bNCuŎgpꍇɁAnetglue Cu쐬Kv܂B<br></div>

<!-- o@SCo -->
<h3>
<a name="Heading4_1_2">
<a href="#Heading3_1"> 1. </a>2 <b>֘At@C</b><br>
</a>
</h3>
<div style="margin-left:50px;">netglue Cu쐬邽߂ɕKvȃt@C͈ȉ̂ƂłBnetglue Ή̃lbg[N֘ACuAvP[VpۂɕKvƂȂ̂́Aelbg[NX^bNCuƁApnetglue Cû݂łB<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>JeS</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>t@C</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;wb_t@C&nbsp;</td>
<td valign="TOP">&nbsp;include/netglue.h&nbsp;<br>&nbsp;(IɈȉ3t@Cinclude)&nbsp;<br>&nbsp;include/netglue/netdb.h&nbsp;<br>&nbsp;include/netglue/arpa/inet.h&nbsp;<br>&nbsp;include/netglue/netinet/in.h&nbsp;<br>&nbsp;include/netglue/netinet/tcp.h&nbsp;<br>&nbsp;include/netglue/sys/socket.h&nbsp;<br>&nbsp;elbg[NX^bNCup&nbsp;<br>&nbsp;wb_t@C&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;Cut@C&nbsp;</td>
<td valign="TOP">&nbsp;elbg[NX^bNCu&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- o@SCo -->
<h3>
<a name="Heading4_1_3">
<a href="#Heading3_1"> 1. </a>3 <b>libinsck p netglueCũ\[XJɂ</b><br>
</a>
</h3>
<div style="margin-left:50px;">SCEI X^bN(libinet)p netglue Cu̓\[XJĂ܂̂ŁAAvP[VJ҂KvɉēƎɏC^CgɑgݍނƂ\łB<br></div>

<!-- o@RCߌo -->
<a name="Heading3_2">
<h2>
 2 <b>API ɂ</b><br>
<hr noshade>
</h2>


<!-- o@SCo -->
<h3>
<a name="Heading4_2_1">
<a href="#Heading3_2"> 2. </a>1 <b>netglue API</b><br>
</a>
</h3>
<div style="margin-left:50px;">netglue API͊{IɂBSD\PbgAPIłBnetglue APIȉɗ񋓂܂BnetglueCu쐬ꍇɂ́Aȉׂ̂ĂAPIɑΉKv܂B<br>eAPȈڍׂɂĂ̓Cut@XQƂĉB<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>֐</b>&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;<b>֐</b>&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueAbort()&nbsp;</td>
<td valign="TOP">&nbsp;w\Pbg̏𒆒f&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueThreadInit()&nbsp;</td>
<td valign="TOP">&nbsp;netglue pXbh&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueThreadTerminate()&nbsp;</td>
<td valign="TOP">&nbsp;netgluepXbhI&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;__sceNetGlueErrnoLoc()&nbsp;</td>
<td valign="TOP">&nbsp;\Pbg֐̃G[l擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;__sceNetGlueHErrnoLoc()&nbsp;</td>
<td valign="TOP">&nbsp;zXg\̊֐̃G[l擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueGethostbyaddr()&nbsp;</td>
<td valign="TOP">&nbsp;32rbgIPv4AhX&nbsp;<br>&nbsp;zXg\̂擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueGethostbyname()&nbsp;</td>
<td valign="TOP">&nbsp;zXgzXg\̂擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetAddr()&nbsp;</td>
<td valign="TOP">&nbsp;hbg` IPv4 AhX&nbsp;<br>&nbsp;32rbgAhX擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetAton()&nbsp;</td>
<td valign="TOP">&nbsp;hbg` IPv4 AhX&nbsp;<br>&nbsp;32rbgAhX擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetLnaof()&nbsp;</td>
<td valign="TOP">&nbsp;IPv4 AhX烍[Jlbg[N&nbsp;<br>&nbsp;AhX̎擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetMakeaddr()&nbsp;</td>
<td valign="TOP">&nbsp;lbg[NAhX&nbsp;<br>&nbsp;IPv4AhX̍\z&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetNetof()&nbsp;</td>
<td valign="TOP">&nbsp;IPv4AhXlbg[N&nbsp;<br>&nbsp;AhX̎擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetNetwork()&nbsp;</td>
<td valign="TOP">&nbsp;hbg` IPv4 AhX&nbsp;<br>&nbsp;32rbgAhX擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueInetNtoa()&nbsp;</td>
<td valign="TOP">&nbsp;32rbgIPv4AhX&nbsp;<br>&nbsp;hbg`AhX擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueHtonl()&nbsp;</td>
<td valign="TOP">&nbsp;4bytel̃oCgI[_[J&nbsp;<br>&nbsp;lbg[N֕ϊ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueHtons()&nbsp;</td>
<td valign="TOP">&nbsp;2bytel̃oCgI[_[J&nbsp;<br>&nbsp;lbg[N֕ϊ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueNtohl()&nbsp;</td>
<td valign="TOP">&nbsp;4bytel̃oCgI[_lbg[N&nbsp;<br>&nbsp;[J֕ϊ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueNtohs()&nbsp;</td>
<td valign="TOP">&nbsp;2bytel̃oCgI[_lbg[N&nbsp;<br>&nbsp;[J֕ϊ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueAccept()&nbsp;</td>
<td valign="TOP">&nbsp;TCPRlNVmσ\Pbg̎擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueBind()&nbsp;</td>
<td valign="TOP">&nbsp;\PbgɃAhXoCh&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueConnect()&nbsp;</td>
<td valign="TOP">&nbsp;T[oɐڑ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueGetpeername()&nbsp;</td>
<td valign="TOP">&nbsp;\Pbg̐ڑ擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueGetsockname()&nbsp;</td>
<td valign="TOP">&nbsp;\Pbg̃[J擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueGetsockopt()&nbsp;</td>
<td valign="TOP">&nbsp;\PbgIvV擾&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueListen()&nbsp;</td>
<td valign="TOP">&nbsp;TCP RlNV󂯕t&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueRecv()&nbsp;</td>
<td valign="TOP">&nbsp;f[^M&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueRecvfrom()&nbsp;</td>
<td valign="TOP">&nbsp;f[^M&nbsp;<br>&nbsp;(MzXg̃AhX\̂擾)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueSend()&nbsp;</td>
<td valign="TOP">&nbsp;f[^𑗐M&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueSendto()&nbsp;</td>
<td valign="TOP">&nbsp;f[^𑗐M&nbsp;<br>&nbsp;(MzXg̃AhX\̂w)&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueSetsockopt()&nbsp;</td>
<td valign="TOP">&nbsp;\PbgIvVݒ&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueShutdown()&nbsp;</td>
<td valign="TOP">&nbsp;\Pbg&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;sceNetGlueSocket()&nbsp;</td>
<td valign="TOP">&nbsp;\Pbg𐶐&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- o@SCo -->
<h3>
<a name="Heading4_2_2">
<a href="#Heading3_2"> 2. </a>2 <b>BSD \Pbg API</b><br>
</a>
</h3>
<div style="margin-left:50px;">netglue API ł͊{IɂقڂׂĂ̊֐ BSD \Pbg API łBnetglue ̊e BSD \Pbg API ́AubLOOłBubLOꍇ́Aq netglue Ǝ API łsceNetGlueAbort() 𑼃XbhĂяo܂B<br></div>

<!-- o@SCo -->
<h3>
<a name="Heading4_2_3">
<a href="#Heading3_2"> 2. </a>3 <b>netglue Ǝ API</b><br>
</a>
</h3>
<div style="margin-left:50px;">netglue ł BSD \Pbg API ̑ɁAƎ API ƂĉL3܂B<br></div>

<div style="margin-left:40px;"><h4><b>sceNetGlueAbort()</b><br></h4></div>

<div style="margin-left:67px;">w肵 socket ɑ΂鑼Xbh̊e BSD \Pbg API ̃ubLOB<br></div>

<div style="margin-left:40px;"><h4><b>sceNetGlueThreadInit()</b><br></h4></div>

<div style="margin-left:67px;">netglue CugpɓăXbhɓێ悤ȏsȂBnetglue gXbh͂܂ŏɂ API ĂԁB<br></div>

<div style="margin-left:40px;"><h4><b>sceNetGlueThreadTerminate()</b><br></h4></div>

<div style="margin-left:67px;">sceNetGlueThreadInit() ɑΉIsȂBnetglue gXbh͏Iɂ API ĂԁB<br></div>

<!-- o@RCߌo -->
<a name="Heading3_3">
<h2>
 3 <b>errno ɂ</b><br>
<hr noshade>
</h2>

<div style="margin-left:50px;">BSD \Pbg API ƓlAnetglue ł͊e API ̃G[lsceNetGlueErrno ŎQƂAAPI ƂĂ̓G[͒Pɕ̒lԂ܂Berrno ̊eG[l̓Cut@XQƂĉB<br></div>
<p><p><hr>
<div ALIGN="right">
    Copyright (c) 2002 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
